{
	"id": "44df674550d346833ca8eef8607d6a0b",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"Revolt.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\";\nimport \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/access/Ownable.sol\";\nimport \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/security/Pausable.sol\";\nimport \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/security/ReentrancyGuard.sol\";\n\ncontract RevoltCoin is ERC20, Ownable, Pausable, ReentrancyGuard {\n    // 最大供应量：1000 万枚（含 18 位小数）\n    uint256 public constant MAX_SUPPLY = 10_000_000 * 10 ** 18;\n\n    // 交易手续费百分比（初始为 2%）\n    uint256 public transferFeePercent = 2;\n    address public feeRecipient; // 收手续费的钱包地址\n    mapping(address => bool) private _isExcludedFromFee;\n\n    // 部署者地址（不可变）\n    address public immutable deployer;\n\n    // 事件\n    event TransferFeePercentUpdated(uint256 previousFee, uint256 newFee);\n    event FeeRecipientUpdated(address previousRecipient, address newRecipient);\n    event ExcludeFromFee(address account);\n    event IncludeInFee(address account);\n    event OwnerUpdated(address indexed previousOwner, address indexed newOwner);\n    event Airdrop(address indexed recipient, uint256 amount);\n\n    constructor() ERC20(\"RevoltCoin\", \"Revolt\") {\n        // 记录合约部署者\n        deployer = msg.sender;\n        // 将部署者设为手续费接收者\n        feeRecipient = msg.sender;\n        // 默认排除部署者和手续费接收者\n        _isExcludedFromFee[owner()] = true;\n        _isExcludedFromFee[feeRecipient] = true;\n\n        // 初始发行 1,000,000 枚代币，保留 900,000 枚，手动添加流动性 100,000 枚\n        uint256 initialSupply = 1_000_000 * 10 ** decimals();\n        _mint(msg.sender, initialSupply);\n    }\n\n    // 增发函数，仅 owner 可调用，受 MAX_SUPPLY 限制\n    function mint(address to, uint256 amount) external onlyOwner {\n        require(totalSupply() + amount <= MAX_SUPPLY, \"Exceeds max supply\");\n        _mint(to, amount);\n    }\n\n    // 修改手续费比例（最大不得超过 10%）\n    function setTransferFeePercent(uint256 newFee) external onlyOwner {\n        require(newFee <= 10, \"Fee too high\");\n        uint256 previous = transferFeePercent;\n        transferFeePercent = newFee;\n        emit TransferFeePercentUpdated(previous, newFee);\n    }\n\n    // 修改手续费接收地址\n    function setFeeRecipient(address newRecipient) external onlyOwner {\n        require(newRecipient != address(0), \"RevoltCoin: invalid address\");\n        // 确保 feeRecipient 为 EOA，防止合约回调攻击\n        require(\n            newRecipient.code.length == 0,\n            \"RevoltCoin: fee recipient must be EOA\"\n        );\n        address previous = feeRecipient;\n        feeRecipient = newRecipient;\n        emit FeeRecipientUpdated(previous, newRecipient);\n    }\n\n    // 手续费豁免\n    function excludeFromFee(address account) external onlyOwner {\n        _isExcludedFromFee[account] = true;\n        emit ExcludeFromFee(account);\n    }\n\n    function includeInFee(address account) external onlyOwner {\n        _isExcludedFromFee[account] = false;\n        emit IncludeInFee(account);\n    }\n\n    /// @notice 安全转移合约所有权\n    /// @param newOwner 新所有者地址\n    function ownerTransfer(address newOwner) external onlyOwner {\n        require(newOwner != address(0), \"RevoltCoin: invalid new owner\");\n        emit OwnerUpdated(owner(), newOwner);\n        _transferOwnership(newOwner);\n    }\n\n    /// @dev 重写内部转账逻辑，采用 Checks-Effects-Interactions 模式，防止重入\n    function _transfer(\n        address sender,\n        address recipient,\n        uint256 amount\n    ) internal override whenNotPaused {\n        require(sender != address(0), \"RevoltCoin: transfer from zero\");\n        require(recipient != address(0), \"RevoltCoin: transfer to zero\");\n        if (\n            transferFeePercent > 0 &&\n            feeRecipient != address(0) &&\n            !_isExcludedFromFee[sender] &&\n            !_isExcludedFromFee[recipient]\n        ) {\n            uint256 fee = (amount * transferFeePercent) / 100;\n            uint256 remaining = amount - fee;\n            // 收取手续费\n            super._transfer(sender, feeRecipient, fee);\n            // 转账剩余\n            super._transfer(sender, recipient, remaining);\n        } else {\n            super._transfer(sender, recipient, amount);\n        }\n    }\n\n    /// @notice 暂停所有转账\n    function pause() external onlyOwner {\n        _pause();\n    }\n\n    /// @notice 恢复转账\n    function unpause() external onlyOwner {\n        _unpause();\n    }\n\n    /// @dev 在任何转账发生前检查暂停状态\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal override {\n        super._beforeTokenTransfer(from, to, amount);\n        require(!paused(), \"RevoltCoin: token transfer while paused\");\n    }\n\n    /// @notice 防重入安全的转账接口\n    function transfer(\n        address to,\n        uint256 amount\n    ) public override nonReentrant whenNotPaused returns (bool) {\n        _transfer(_msgSender(), to, amount);\n        return true;\n    }\n\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) public override nonReentrant whenNotPaused returns (bool) {\n        require(to != address(0), \"RevoltCoin: transfer to zero\");\n        _spendAllowance(from, _msgSender(), amount);\n        _transfer(from, to, amount);\n        return true;\n    }\n\n    /**\n     * @notice 批量空投代币给指定地址\n     * @param recipients 接收地址列表\n     * @param amounts 每个地址对应的空投数量（最小单位）\n     */\n    function airdrop(address[] calldata recipients, uint256[] calldata amounts)\n        external\n        nonReentrant\n        whenNotPaused\n    {\n        require(msg.sender == deployer, \"RevoltCoin: only deployer can airdrop\");\n        require(recipients.length == amounts.length, \"RevoltCoin: airdrop arrays mismatch\");\n        uint256 total;\n        // 计算总空投量\n        for (uint256 i = 0; i < amounts.length; i++) {\n            total += amounts[i];\n        }\n        // 确保不超过最大供应量\n        require(totalSupply() + total <= MAX_SUPPLY, \"RevoltCoin: exceeds max supply\");\n        // 分发空投\n        for (uint256 i = 0; i < recipients.length; i++) {\n            _mint(recipients[i], amounts[i]);\n            emit Airdrop(recipients[i], amounts[i]);\n        }\n    }\n}\n"
			},
			"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/security/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == _ENTERED;\n    }\n}\n"
			},
			"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/security/Pausable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (security/Pausable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract Pausable is Context {\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    bool private _paused;\n\n    /**\n     * @dev Initializes the contract in unpaused state.\n     */\n    constructor() {\n        _paused = false;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        _requireNotPaused();\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        _requirePaused();\n        _;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        return _paused;\n    }\n\n    /**\n     * @dev Throws if the contract is paused.\n     */\n    function _requireNotPaused() internal view virtual {\n        require(!paused(), \"Pausable: paused\");\n    }\n\n    /**\n     * @dev Throws if the contract is not paused.\n     */\n    function _requirePaused() internal view virtual {\n        require(paused(), \"Pausable: not paused\");\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        _paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        _paused = false;\n        emit Unpaused(_msgSender());\n    }\n}\n"
			},
			"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC20.sol\";\nimport \"./extensions/IERC20Metadata.sol\";\nimport \"../../utils/Context.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n * For a generic mechanism see {ERC20PresetMinterPauser}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n *\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n * functions have been added to mitigate the well-known issues around setting\n * allowances. See {IERC20-approve}.\n */\ncontract ERC20 is Context, IERC20, IERC20Metadata {\n    mapping(address => uint256) private _balances;\n\n    mapping(address => mapping(address => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual override returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual override returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual override returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `amount`.\n     */\n    function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, amount);\n        _transfer(from, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        uint256 currentAllowance = allowance(owner, spender);\n        require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\");\n        unchecked {\n            _approve(owner, spender, currentAllowance - subtractedValue);\n        }\n\n        return true;\n    }\n\n    /**\n     * @dev Moves `amount` of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     */\n    function _transfer(address from, address to, uint256 amount) internal virtual {\n        require(from != address(0), \"ERC20: transfer from the zero address\");\n        require(to != address(0), \"ERC20: transfer to the zero address\");\n\n        _beforeTokenTransfer(from, to, amount);\n\n        uint256 fromBalance = _balances[from];\n        require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\");\n        unchecked {\n            _balances[from] = fromBalance - amount;\n            // Overflow not possible: the sum of all balances is capped by totalSupply, and the sum is preserved by\n            // decrementing then incrementing.\n            _balances[to] += amount;\n        }\n\n        emit Transfer(from, to, amount);\n\n        _afterTokenTransfer(from, to, amount);\n    }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function _mint(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: mint to the zero address\");\n\n        _beforeTokenTransfer(address(0), account, amount);\n\n        _totalSupply += amount;\n        unchecked {\n            // Overflow not possible: balance + amount is at most totalSupply + amount, which is checked above.\n            _balances[account] += amount;\n        }\n        emit Transfer(address(0), account, amount);\n\n        _afterTokenTransfer(address(0), account, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n    function _burn(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: burn from the zero address\");\n\n        _beforeTokenTransfer(account, address(0), amount);\n\n        uint256 accountBalance = _balances[account];\n        require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\");\n        unchecked {\n            _balances[account] = accountBalance - amount;\n            // Overflow not possible: amount <= accountBalance <= totalSupply.\n            _totalSupply -= amount;\n        }\n\n        emit Transfer(account, address(0), amount);\n\n        _afterTokenTransfer(account, address(0), amount);\n    }\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    function _approve(address owner, address spender, uint256 amount) internal virtual {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n     *\n     * Does not update the allowance amount in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Might emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 amount) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            require(currentAllowance >= amount, \"ERC20: insufficient allowance\");\n            unchecked {\n                _approve(owner, spender, currentAllowance - amount);\n            }\n        }\n    }\n\n    /**\n     * @dev Hook that is called before any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * will be transferred to `to`.\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * has been transferred to `to`.\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(address from, address to, uint256 amount) internal virtual {}\n}\n"
			},
			"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			},
			"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n *\n * _Available since v4.1._\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"Revolt.sol": {
				"RevoltCoin": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Airdrop",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "ExcludeFromFee",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "previousRecipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "newRecipient",
									"type": "address"
								}
							],
							"name": "FeeRecipientUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "IncludeInFee",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnerUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "previousFee",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "newFee",
									"type": "uint256"
								}
							],
							"name": "TransferFeePercentUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "MAX_SUPPLY",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "recipients",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"name": "airdrop",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "deployer",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "excludeFromFee",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "feeRecipient",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "includeInFee",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "ownerTransfer",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newRecipient",
									"type": "address"
								}
							],
							"name": "setFeeRecipient",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "newFee",
									"type": "uint256"
								}
							],
							"name": "setTransferFeePercent",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "transferFeePercent",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "unpause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"airdrop(address[],uint256[])": {
								"params": {
									"amounts": "每个地址对应的空投数量（最小单位）",
									"recipients": "接收地址列表"
								}
							},
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"ownerTransfer(address)": {
								"params": {
									"newOwner": "新所有者地址"
								}
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Revolt.sol\":539:6748  contract RevoltCoin is ERC20, Ownable, Pausable, ReentrancyGuard {... */\n  mstore(0x40, 0xa0)\n    /* \"Revolt.sol\":820:821  2 */\n  0x02\n    /* \"Revolt.sol\":784:821  uint256 public transferFeePercent = 2 */\n  0x07\n  sstore\n    /* \"Revolt.sol\":1423:1974  constructor() ERC20(\"RevoltCoin\", \"Revolt\") {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":1980:2093  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x0a\n  dup2\n  mstore\n  0x20\n  add\n  shl(0xb1, 0x2932bb37b63a21b7b4b7)\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x06\n  dup2\n  mstore\n  0x20\n  add\n  shl(0xd2, 0x14995d9bdb1d)\n  dup2\n  mstore\n  pop\n    /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":2054:2059  name_ */\n  dup2\n    /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":2046:2051  _name */\n  0x03\n    /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":2046:2059  _name = name_ */\n  swap1\n  dup2\n  tag_8\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_8:\n  pop\n    /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":2069:2076  _symbol */\n  0x04\n    /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":2069:2086  _symbol = symbol_ */\n  tag_10\n    /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":2079:2086  symbol_ */\n  dup3\n    /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":2069:2076  _symbol */\n  dup3\n    /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":2069:2086  _symbol = symbol_ */\n  tag_9\n  jump\t// in\ntag_10:\n  pop\n    /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":1980:2093  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  tag_12\n    /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/access/Ownable.sol\":955:967  _msgSender() */\n  tag_13\n    /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/access/Ownable.sol\":955:965  _msgSender */\n  shl(0x20, tag_14)\n    /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/access/Ownable.sol\":955:967  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_13:\n    /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/access/Ownable.sol\":936:954  _transferOwnership */\n  tag_15\n    /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  jump\t// in\ntag_12:\n    /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/security/Pausable.sol\":996:1003  _paused */\n  0x05\n    /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/security/Pausable.sol\":996:1011  _paused = false */\n  dup1\n  sload\n  not(shl(0xa0, 0xff))\n  and\n  swap1\n  sstore\n  0x01\n    /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/security/ReentrancyGuard.sol\":1821:1828  _status */\n  0x06\n    /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  dup2\n  swap1\n  sstore\n    /* \"Revolt.sol\":1521:1531  msg.sender */\n  caller\n    /* \"Revolt.sol\":1510:1531  deployer = msg.sender */\n  0x80\n  dup2\n  swap1\n  mstore\n    /* \"Revolt.sol\":1589:1601  feeRecipient */\n  0x08\n    /* \"Revolt.sol\":1589:1614  feeRecipient = msg.sender */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  swap1\n  swap2\n  or\n  swap1\n  sstore\n    /* \"Revolt.sol\":1678:1696  _isExcludedFromFee */\n  0x09\n    /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/security/Pausable.sol\":1006:1011  false */\n  0x00\n    /* \"Revolt.sol\":1697:1704  owner() */\n  tag_19\n    /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/access/Ownable.sol\":1273:1279  _owner */\n  and(sub(shl(0xa0, 0x01), 0x01), sload(0x05))\n  swap1\n    /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n  jump\n    /* \"Revolt.sol\":1697:1704  owner() */\ntag_19:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"Revolt.sol\":1678:1705  _isExcludedFromFee[owner()] */\n  swap1\n  dup2\n  and\n  dup3\n  mstore\n  0x20\n  dup1\n  dup4\n  add\n  swap4\n  swap1\n  swap4\n  mstore\n  0x40\n  swap2\n  dup3\n  add\n  0x00\n  swap1\n  dup2\n  keccak256\n    /* \"Revolt.sol\":1678:1712  _isExcludedFromFee[owner()] = true */\n  dup1\n  sload\n  swap6\n  iszero\n  iszero\n  not(0xff)\n  swap7\n  dup8\n  and\n  or\n  swap1\n  sstore\n    /* \"Revolt.sol\":1741:1753  feeRecipient */\n  sload(0x08)\n  swap1\n  swap2\n  and\n    /* \"Revolt.sol\":1722:1754  _isExcludedFromFee[feeRecipient] */\n  dup2\n  mstore\n    /* \"Revolt.sol\":1722:1740  _isExcludedFromFee */\n  0x09\n    /* \"Revolt.sol\":1722:1754  _isExcludedFromFee[feeRecipient] */\n  swap1\n  swap3\n  mstore\n  dup2\n  keccak256\n    /* \"Revolt.sol\":1722:1761  _isExcludedFromFee[feeRecipient] = true */\n  dup1\n  sload\n  swap1\n  swap3\n  and\n    /* \"Revolt.sol\":1678:1712  _isExcludedFromFee[owner()] = true */\n  0x01\n    /* \"Revolt.sol\":1722:1761  _isExcludedFromFee[feeRecipient] = true */\n  or\n  swap1\n  swap2\n  sstore\n    /* \"Revolt.sol\":1915:1925  decimals() */\n  tag_21\n    /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":3186:3188  18 */\n  0x12\n  swap1\n    /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":3104:3195  function decimals() public view virtual override returns (uint8) {... */\n  jump\n    /* \"Revolt.sol\":1915:1925  decimals() */\ntag_21:\n    /* \"Revolt.sol\":1909:1925  10 ** decimals() */\n  tag_23\n  swap1\n    /* \"Revolt.sol\":1909:1911  10 */\n  0x0a\n    /* \"Revolt.sol\":1909:1925  10 ** decimals() */\n  tag_24\n  jump\t// in\ntag_23:\n    /* \"Revolt.sol\":1897:1925  1_000_000 * 10 ** decimals() */\n  tag_25\n  swap1\n    /* \"Revolt.sol\":1897:1906  1_000_000 */\n  0x0f4240\n    /* \"Revolt.sol\":1897:1925  1_000_000 * 10 ** decimals() */\n  tag_26\n  jump\t// in\ntag_25:\n    /* \"Revolt.sol\":1873:1925  uint256 initialSupply = 1_000_000 * 10 ** decimals() */\n  swap1\n  pop\n    /* \"Revolt.sol\":1935:1967  _mint(msg.sender, initialSupply) */\n  tag_27\n    /* \"Revolt.sol\":1941:1951  msg.sender */\n  caller\n    /* \"Revolt.sol\":1873:1925  uint256 initialSupply = 1_000_000 * 10 ** decimals() */\n  dup3\n    /* \"Revolt.sol\":1935:1940  _mint */\n  tag_28\n    /* \"Revolt.sol\":1935:1967  _mint(msg.sender, initialSupply) */\n  jump\t// in\ntag_27:\n    /* \"Revolt.sol\":1467:1974  {... */\n  pop\n    /* \"Revolt.sol\":539:6748  contract RevoltCoin is ERC20, Ownable, Pausable, ReentrancyGuard {... */\n  jump(tag_65)\n    /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\ntag_14:\n    /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/utils/Context.sol\":719:729  msg.sender */\n  caller\n  swap1\n    /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n  jump\t// out\n    /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/access/Ownable.sol\":2426:2613  function _transferOwnership(address newOwner) internal virtual {... */\ntag_15:\n    /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/access/Ownable.sol\":2518:2524  _owner */\n  0x05\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/access/Ownable.sol\":2534:2551  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  swap1\n  swap4\n  sstore\n    /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/access/Ownable.sol\":2566:2606  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/access/Ownable.sol\":2518:2524  _owner */\n  swap2\n  and\n  swap2\n    /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/access/Ownable.sol\":2534:2551  _owner = newOwner */\n  swap1\n    /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/access/Ownable.sol\":2518:2524  _owner */\n  dup3\n  swap1\n    /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/access/Ownable.sol\":2566:2606  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap1\n    /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/access/Ownable.sol\":2499:2515  address oldOwner */\n  0x00\n  swap1\n    /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/access/Ownable.sol\":2566:2606  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/access/Ownable.sol\":2489:2613  {... */\n  pop\n    /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/access/Ownable.sol\":2426:2613  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":8520:9055  function _mint(address account, uint256 amount) internal virtual {... */\ntag_28:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":8603:8624  account != address(0) */\n  dup3\n  and\n    /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":8595:8660  require(account != address(0), \"ERC20: mint to the zero address\") */\n  tag_35\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":4594:4596   */\n  0x20\n    /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":8595:8660  require(account != address(0), \"ERC20: mint to the zero address\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":4576:4597   */\n  mstore\n    /* \"#utility.yul\":4633:4635   */\n  0x1f\n    /* \"#utility.yul\":4613:4631   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":4606:4636   */\n  mstore\n    /* \"#utility.yul\":4672:4705   */\n  0x45524332303a206d696e7420746f20746865207a65726f206164647265737300\n    /* \"#utility.yul\":4652:4670   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":4645:4706   */\n  mstore\n    /* \"#utility.yul\":4723:4741   */\n  0x64\n  add\n    /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":8595:8660  require(account != address(0), \"ERC20: mint to the zero address\") */\ntag_36:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_35:\n    /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":8671:8720  _beforeTokenTransfer(address(0), account, amount) */\n  tag_38\n    /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":8700:8701  0 */\n  0x00\n    /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":8704:8711  account */\n  dup4\n    /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":8713:8719  amount */\n  dup4\n    /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":8671:8691  _beforeTokenTransfer */\n  tag_39\n    /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":8671:8720  _beforeTokenTransfer(address(0), account, amount) */\n  jump\t// in\ntag_38:\n    /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":8747:8753  amount */\n  dup1\n    /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":8731:8743  _totalSupply */\n  0x02\n  0x00\n    /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":8731:8753  _totalSupply += amount */\n  dup3\n  dup3\n  sload\n  tag_40\n  swap2\n  swap1\n  tag_41\n  jump\t// in\ntag_40:\n  swap1\n  swap2\n  sstore\n  pop\n  pop\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":8899:8917  _balances[account] */\n  dup3\n  and\n    /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":8899:8908  _balances */\n  0x00\n    /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":8899:8917  _balances[account] */\n  dup2\n  dup2\n  mstore\n  0x20\n  dup2\n  dup2\n  mstore\n  0x40\n  dup1\n  dup4\n  keccak256\n    /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":8899:8927  _balances[account] += amount */\n  dup1\n  sload\n  dup7\n  add\n  swap1\n  sstore\n    /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":8952:8989  Transfer(address(0), account, amount) */\n  mload\n    /* \"#utility.yul\":5028:5053   */\n  dup5\n  dup2\n  mstore\n    /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":8952:8989  Transfer(address(0), account, amount) */\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n  swap2\n    /* \"#utility.yul\":5001:5019   */\n  add\n    /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":8952:8989  Transfer(address(0), account, amount) */\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":8520:9055  function _mint(address account, uint256 amount) internal virtual {... */\n  pop\n  pop\n  jump\t// out\n    /* \"Revolt.sol\":4916:5168  function _beforeTokenTransfer(... */\ntag_39:\n    /* \"Revolt.sol\":5109:5117  paused() */\n  tag_49\n    /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/security/Pausable.sol\":1685:1692  _paused */\n  sload(0x05)\n  shl(0xa0, 0x01)\n  swap1\n  div\n  0xff\n  and\n  swap1\n    /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/security/Pausable.sol\":1615:1699  function paused() public view virtual returns (bool) {... */\n  jump\n    /* \"Revolt.sol\":5109:5117  paused() */\ntag_49:\n    /* \"Revolt.sol\":5108:5117  !paused() */\n  iszero\n    /* \"Revolt.sol\":5100:5161  require(!paused(), \"RevoltCoin: token transfer while paused\") */\n  tag_51\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":5266:5268   */\n  0x20\n    /* \"Revolt.sol\":5100:5161  require(!paused(), \"RevoltCoin: token transfer while paused\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":5248:5269   */\n  mstore\n    /* \"#utility.yul\":5305:5307   */\n  0x27\n    /* \"#utility.yul\":5285:5303   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":5278:5308   */\n  mstore\n    /* \"#utility.yul\":5344:5378   */\n  0x5265766f6c74436f696e3a20746f6b656e207472616e73666572207768696c65\n    /* \"#utility.yul\":5324:5342   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":5317:5379   */\n  mstore\n  shl(0xca, 0x081c185d5cd959)\n    /* \"#utility.yul\":5395:5413   */\n  0x64\n  dup3\n  add\n    /* \"#utility.yul\":5388:5425   */\n  mstore\n    /* \"#utility.yul\":5442:5461   */\n  0x84\n  add\n    /* \"Revolt.sol\":5100:5161  require(!paused(), \"RevoltCoin: token transfer while paused\") */\n  tag_36\n    /* \"#utility.yul\":5064:5467   */\n  jump\n    /* \"Revolt.sol\":5100:5161  require(!paused(), \"RevoltCoin: token transfer while paused\") */\ntag_51:\n    /* \"Revolt.sol\":4916:5168  function _beforeTokenTransfer(... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14:141   */\ntag_57:\n    /* \"#utility.yul\":75:85   */\n  0x4e487b71\n    /* \"#utility.yul\":70:73   */\n  0xe0\n    /* \"#utility.yul\":66:86   */\n  shl\n    /* \"#utility.yul\":63:64   */\n  0x00\n    /* \"#utility.yul\":56:87   */\n  mstore\n    /* \"#utility.yul\":106:110   */\n  0x41\n    /* \"#utility.yul\":103:104   */\n  0x04\n    /* \"#utility.yul\":96:111   */\n  mstore\n    /* \"#utility.yul\":130:134   */\n  0x24\n    /* \"#utility.yul\":127:128   */\n  0x00\n    /* \"#utility.yul\":120:135   */\n  revert\n    /* \"#utility.yul\":146:526   */\ntag_58:\n    /* \"#utility.yul\":225:226   */\n  0x01\n    /* \"#utility.yul\":221:233   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":268:280   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":289:350   */\n  tag_68\n  jumpi\n    /* \"#utility.yul\":343:347   */\n  0x7f\n    /* \"#utility.yul\":335:341   */\n  dup3\n    /* \"#utility.yul\":331:348   */\n  and\n    /* \"#utility.yul\":321:348   */\n  swap2\n  pop\n    /* \"#utility.yul\":289:350   */\ntag_68:\n    /* \"#utility.yul\":396:398   */\n  0x20\n    /* \"#utility.yul\":388:394   */\n  dup3\n    /* \"#utility.yul\":385:399   */\n  lt\n    /* \"#utility.yul\":365:383   */\n  dup2\n    /* \"#utility.yul\":362:400   */\n  sub\n    /* \"#utility.yul\":359:520   */\n  tag_69\n  jumpi\n    /* \"#utility.yul\":442:452   */\n  0x4e487b71\n    /* \"#utility.yul\":437:440   */\n  0xe0\n    /* \"#utility.yul\":433:453   */\n  shl\n    /* \"#utility.yul\":430:431   */\n  0x00\n    /* \"#utility.yul\":423:454   */\n  mstore\n    /* \"#utility.yul\":477:481   */\n  0x22\n    /* \"#utility.yul\":474:475   */\n  0x04\n    /* \"#utility.yul\":467:482   */\n  mstore\n    /* \"#utility.yul\":505:509   */\n  0x24\n    /* \"#utility.yul\":502:503   */\n  0x00\n    /* \"#utility.yul\":495:510   */\n  revert\n    /* \"#utility.yul\":359:520   */\ntag_69:\n  pop\n    /* \"#utility.yul\":146:526   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":657:1175   */\ntag_60:\n    /* \"#utility.yul\":759:761   */\n  0x1f\n    /* \"#utility.yul\":754:757   */\n  dup3\n    /* \"#utility.yul\":751:762   */\n  gt\n    /* \"#utility.yul\":748:1169   */\n  iszero\n  tag_51\n  jumpi\n    /* \"#utility.yul\":795:800   */\n  dup1\n    /* \"#utility.yul\":792:793   */\n  0x00\n    /* \"#utility.yul\":785:801   */\n  mstore\n    /* \"#utility.yul\":839:843   */\n  0x20\n    /* \"#utility.yul\":836:837   */\n  0x00\n    /* \"#utility.yul\":826:844   */\n  keccak256\n    /* \"#utility.yul\":909:911   */\n  0x1f\n    /* \"#utility.yul\":897:907   */\n  dup5\n    /* \"#utility.yul\":893:912   */\n  add\n    /* \"#utility.yul\":890:891   */\n  0x05\n    /* \"#utility.yul\":886:913   */\n  shr\n    /* \"#utility.yul\":880:884   */\n  dup2\n    /* \"#utility.yul\":876:914   */\n  add\n    /* \"#utility.yul\":945:949   */\n  0x20\n    /* \"#utility.yul\":933:943   */\n  dup6\n    /* \"#utility.yul\":930:950   */\n  lt\n    /* \"#utility.yul\":927:974   */\n  iszero\n  tag_73\n  jumpi\n  pop\n    /* \"#utility.yul\":968:972   */\n  dup1\n    /* \"#utility.yul\":927:974   */\ntag_73:\n    /* \"#utility.yul\":1023:1025   */\n  0x1f\n    /* \"#utility.yul\":1018:1021   */\n  dup5\n    /* \"#utility.yul\":1014:1026   */\n  add\n    /* \"#utility.yul\":1011:1012   */\n  0x05\n    /* \"#utility.yul\":1007:1027   */\n  shr\n    /* \"#utility.yul\":1001:1005   */\n  dup3\n    /* \"#utility.yul\":997:1028   */\n  add\n    /* \"#utility.yul\":987:1028   */\n  swap2\n  pop\n    /* \"#utility.yul\":1078:1159   */\ntag_74:\n    /* \"#utility.yul\":1096:1098   */\n  dup2\n    /* \"#utility.yul\":1089:1094   */\n  dup2\n    /* \"#utility.yul\":1086:1099   */\n  lt\n    /* \"#utility.yul\":1078:1159   */\n  iszero\n  tag_76\n  jumpi\n    /* \"#utility.yul\":1155:1156   */\n  0x00\n    /* \"#utility.yul\":1141:1157   */\n  dup2\n  sstore\n    /* \"#utility.yul\":1122:1123   */\n  0x01\n    /* \"#utility.yul\":1111:1124   */\n  add\n    /* \"#utility.yul\":1078:1159   */\n  jump(tag_74)\ntag_76:\n    /* \"#utility.yul\":1082:1085   */\n  pop\n  pop\n    /* \"#utility.yul\":657:1175   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1351:2650   */\ntag_9:\n    /* \"#utility.yul\":1471:1481   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1493:1523   */\n  dup2\n  gt\n    /* \"#utility.yul\":1490:1546   */\n  iszero\n  tag_80\n  jumpi\n    /* \"#utility.yul\":1526:1544   */\n  tag_80\n  tag_57\n  jump\t// in\ntag_80:\n    /* \"#utility.yul\":1555:1652   */\n  tag_81\n    /* \"#utility.yul\":1645:1651   */\n  dup2\n    /* \"#utility.yul\":1605:1643   */\n  tag_82\n    /* \"#utility.yul\":1637:1641   */\n  dup5\n    /* \"#utility.yul\":1631:1642   */\n  sload\n    /* \"#utility.yul\":1605:1643   */\n  tag_58\n  jump\t// in\ntag_82:\n    /* \"#utility.yul\":1599:1603   */\n  dup5\n    /* \"#utility.yul\":1555:1652   */\n  tag_60\n  jump\t// in\ntag_81:\n    /* \"#utility.yul\":1701:1705   */\n  0x20\n    /* \"#utility.yul\":1732:1734   */\n  0x1f\n    /* \"#utility.yul\":1721:1735   */\n  dup3\n  gt\n    /* \"#utility.yul\":1749:1750   */\n  0x01\n    /* \"#utility.yul\":1744:2393   */\n  dup2\n  eq\n  tag_84\n  jumpi\n    /* \"#utility.yul\":2437:2438   */\n  0x00\n    /* \"#utility.yul\":2454:2460   */\n  dup4\n    /* \"#utility.yul\":2451:2540   */\n  iszero\n  tag_85\n  jumpi\n  pop\n    /* \"#utility.yul\":2506:2525   */\n  dup5\n  dup3\n  add\n    /* \"#utility.yul\":2500:2526   */\n  mload\n    /* \"#utility.yul\":2451:2540   */\ntag_85:\n  not(0x00)\n    /* \"#utility.yul\":1308:1309   */\n  0x03\n    /* \"#utility.yul\":1304:1315   */\n  dup6\n  swap1\n  shl\n    /* \"#utility.yul\":1300:1324   */\n  shr\n    /* \"#utility.yul\":1296:1325   */\n  not\n    /* \"#utility.yul\":1286:1326   */\n  and\n    /* \"#utility.yul\":1332:1333   */\n  0x01\n    /* \"#utility.yul\":1328:1339   */\n  dup5\n  swap1\n  shl\n    /* \"#utility.yul\":1283:1340   */\n  or\n    /* \"#utility.yul\":2553:2634   */\n  dup5\n  sstore\n    /* \"#utility.yul\":1714:2644   */\n  jump(tag_76)\n    /* \"#utility.yul\":1744:2393   */\ntag_84:\n    /* \"#utility.yul\":604:605   */\n  0x00\n    /* \"#utility.yul\":597:611   */\n  dup5\n  dup2\n  mstore\n    /* \"#utility.yul\":641:645   */\n  0x20\n    /* \"#utility.yul\":628:646   */\n  dup2\n  keccak256\n  not(0x1f)\n    /* \"#utility.yul\":1780:1800   */\n  dup6\n  and\n  swap2\n    /* \"#utility.yul\":1898:2120   */\ntag_88:\n    /* \"#utility.yul\":1912:1919   */\n  dup3\n    /* \"#utility.yul\":1909:1910   */\n  dup2\n    /* \"#utility.yul\":1906:1920   */\n  lt\n    /* \"#utility.yul\":1898:2120   */\n  iszero\n  tag_90\n  jumpi\n    /* \"#utility.yul\":1994:2013   */\n  dup8\n  dup6\n  add\n    /* \"#utility.yul\":1988:2014   */\n  mload\n    /* \"#utility.yul\":1973:2015   */\n  dup3\n  sstore\n    /* \"#utility.yul\":2101:2105   */\n  0x20\n    /* \"#utility.yul\":2086:2106   */\n  swap5\n  dup6\n  add\n  swap5\n    /* \"#utility.yul\":2054:2055   */\n  0x01\n    /* \"#utility.yul\":2042:2056   */\n  swap1\n  swap3\n  add\n  swap2\n    /* \"#utility.yul\":1928:1940   */\n  add\n    /* \"#utility.yul\":1898:2120   */\n  jump(tag_88)\ntag_90:\n    /* \"#utility.yul\":1902:1905   */\n  pop\n    /* \"#utility.yul\":2148:2154   */\n  dup5\n    /* \"#utility.yul\":2139:2146   */\n  dup3\n    /* \"#utility.yul\":2136:2155   */\n  lt\n    /* \"#utility.yul\":2133:2334   */\n  iszero\n  tag_91\n  jumpi\n    /* \"#utility.yul\":2209:2228   */\n  dup7\n  dup5\n  add\n    /* \"#utility.yul\":2203:2229   */\n  mload\n  not(0x00)\n    /* \"#utility.yul\":2292:2293   */\n  0x03\n    /* \"#utility.yul\":2288:2302   */\n  dup8\n  swap1\n  shl\n    /* \"#utility.yul\":2304:2307   */\n  0xf8\n    /* \"#utility.yul\":2284:2308   */\n  and\n    /* \"#utility.yul\":2280:2317   */\n  shr\n    /* \"#utility.yul\":2276:2318   */\n  not\n    /* \"#utility.yul\":2261:2319   */\n  and\n    /* \"#utility.yul\":2246:2320   */\n  dup2\n  sstore\n    /* \"#utility.yul\":2133:2334   */\ntag_91:\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":2380:2381   */\n  0x01\n    /* \"#utility.yul\":2364:2378   */\n  swap1\n  dup2\n  shl\n    /* \"#utility.yul\":2360:2382   */\n  add\n    /* \"#utility.yul\":2347:2383   */\n  swap1\n  sstore\n  pop\n    /* \"#utility.yul\":1351:2650   */\n  jump\t// out\n    /* \"#utility.yul\":2655:2782   */\ntag_62:\n    /* \"#utility.yul\":2716:2726   */\n  0x4e487b71\n    /* \"#utility.yul\":2711:2714   */\n  0xe0\n    /* \"#utility.yul\":2707:2727   */\n  shl\n    /* \"#utility.yul\":2704:2705   */\n  0x00\n    /* \"#utility.yul\":2697:2728   */\n  mstore\n    /* \"#utility.yul\":2747:2751   */\n  0x11\n    /* \"#utility.yul\":2744:2745   */\n  0x04\n    /* \"#utility.yul\":2737:2752   */\n  mstore\n    /* \"#utility.yul\":2771:2775   */\n  0x24\n    /* \"#utility.yul\":2768:2769   */\n  0x00\n    /* \"#utility.yul\":2761:2776   */\n  revert\n    /* \"#utility.yul\":2787:3162   */\ntag_63:\n    /* \"#utility.yul\":2875:2876   */\n  0x01\n    /* \"#utility.yul\":2893:2898   */\n  dup2\n    /* \"#utility.yul\":2907:3156   */\ntag_94:\n    /* \"#utility.yul\":2928:2929   */\n  0x01\n    /* \"#utility.yul\":2918:2926   */\n  dup5\n    /* \"#utility.yul\":2915:2930   */\n  gt\n    /* \"#utility.yul\":2907:3156   */\n  iszero\n  tag_96\n  jumpi\n    /* \"#utility.yul\":2978:2982   */\n  dup1\n    /* \"#utility.yul\":2973:2976   */\n  dup6\n    /* \"#utility.yul\":2969:2983   */\n  div\n    /* \"#utility.yul\":2963:2967   */\n  dup2\n    /* \"#utility.yul\":2960:2984   */\n  gt\n    /* \"#utility.yul\":2957:3007   */\n  iszero\n  tag_98\n  jumpi\n    /* \"#utility.yul\":2987:3005   */\n  tag_98\n  tag_62\n  jump\t// in\ntag_98:\n    /* \"#utility.yul\":3037:3038   */\n  0x01\n    /* \"#utility.yul\":3027:3035   */\n  dup5\n    /* \"#utility.yul\":3023:3039   */\n  and\n    /* \"#utility.yul\":3020:3069   */\n  iszero\n  tag_99\n  jumpi\n    /* \"#utility.yul\":3051:3067   */\n  swap1\n  dup2\n  mul\n  swap1\n    /* \"#utility.yul\":3020:3069   */\ntag_99:\n    /* \"#utility.yul\":3134:3135   */\n  0x01\n    /* \"#utility.yul\":3130:3146   */\n  swap4\n  swap1\n  swap4\n  shr\n  swap3\n    /* \"#utility.yul\":3090:3105   */\n  dup1\n  mul\n    /* \"#utility.yul\":2907:3156   */\n  jump(tag_94)\ntag_96:\n    /* \"#utility.yul\":2787:3162   */\n  swap4\n  pop\n  swap4\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3167:4069   */\ntag_64:\n    /* \"#utility.yul\":3216:3221   */\n  0x00\n    /* \"#utility.yul\":3246:3254   */\n  dup3\n    /* \"#utility.yul\":3236:3316   */\n  tag_101\n  jumpi\n  pop\n    /* \"#utility.yul\":3287:3288   */\n  0x01\n    /* \"#utility.yul\":3301:3306   */\n  jump(tag_100)\n    /* \"#utility.yul\":3236:3316   */\ntag_101:\n    /* \"#utility.yul\":3335:3339   */\n  dup2\n    /* \"#utility.yul\":3325:3401   */\n  tag_102\n  jumpi\n  pop\n    /* \"#utility.yul\":3372:3373   */\n  0x00\n    /* \"#utility.yul\":3386:3391   */\n  jump(tag_100)\n    /* \"#utility.yul\":3325:3401   */\ntag_102:\n    /* \"#utility.yul\":3417:3421   */\n  dup2\n    /* \"#utility.yul\":3435:3436   */\n  0x01\n    /* \"#utility.yul\":3430:3489   */\n  dup2\n  eq\n  tag_104\n  jumpi\n    /* \"#utility.yul\":3503:3504   */\n  0x02\n    /* \"#utility.yul\":3498:3672   */\n  dup2\n  eq\n  tag_105\n  jumpi\n    /* \"#utility.yul\":3410:3672   */\n  jump(tag_103)\n    /* \"#utility.yul\":3430:3489   */\ntag_104:\n    /* \"#utility.yul\":3460:3461   */\n  0x01\n    /* \"#utility.yul\":3451:3461   */\n  swap2\n  pop\n    /* \"#utility.yul\":3474:3479   */\n  pop\n  jump(tag_100)\n    /* \"#utility.yul\":3498:3672   */\ntag_105:\n    /* \"#utility.yul\":3535:3538   */\n  0xff\n    /* \"#utility.yul\":3525:3533   */\n  dup5\n    /* \"#utility.yul\":3522:3539   */\n  gt\n    /* \"#utility.yul\":3519:3562   */\n  iszero\n  tag_107\n  jumpi\n    /* \"#utility.yul\":3542:3560   */\n  tag_107\n  tag_62\n  jump\t// in\ntag_107:\n  pop\n  pop\n    /* \"#utility.yul\":3598:3599   */\n  0x01\n    /* \"#utility.yul\":3584:3600   */\n  dup3\n  shl\n    /* \"#utility.yul\":3657:3662   */\n  jump(tag_100)\n    /* \"#utility.yul\":3410:3672   */\ntag_103:\n  pop\n    /* \"#utility.yul\":3756:3758   */\n  0x20\n    /* \"#utility.yul\":3746:3754   */\n  dup4\n    /* \"#utility.yul\":3743:3759   */\n  lt\n    /* \"#utility.yul\":3737:3740   */\n  0x0133\n    /* \"#utility.yul\":3731:3735   */\n  dup4\n    /* \"#utility.yul\":3728:3741   */\n  lt\n    /* \"#utility.yul\":3724:3760   */\n  and\n    /* \"#utility.yul\":3718:3720   */\n  0x4e\n    /* \"#utility.yul\":3708:3716   */\n  dup5\n    /* \"#utility.yul\":3705:3721   */\n  lt\n    /* \"#utility.yul\":3700:3702   */\n  0x0b\n    /* \"#utility.yul\":3694:3698   */\n  dup5\n    /* \"#utility.yul\":3691:3703   */\n  lt\n    /* \"#utility.yul\":3687:3722   */\n  and\n    /* \"#utility.yul\":3684:3761   */\n  or\n    /* \"#utility.yul\":3681:3884   */\n  iszero\n  tag_108\n  jumpi\n  pop\n    /* \"#utility.yul\":3793:3812   */\n  dup2\n  dup2\n  exp\n    /* \"#utility.yul\":3869:3874   */\n  jump(tag_100)\n    /* \"#utility.yul\":3681:3884   */\ntag_108:\n    /* \"#utility.yul\":3916:3958   */\n  tag_109\n  not(0x00)\n    /* \"#utility.yul\":3941:3949   */\n  dup5\n    /* \"#utility.yul\":3935:3939   */\n  dup5\n    /* \"#utility.yul\":3916:3958   */\n  tag_63\n  jump\t// in\ntag_109:\n    /* \"#utility.yul\":3994:4000   */\n  dup1\n    /* \"#utility.yul\":3990:3991   */\n  0x00\n    /* \"#utility.yul\":3986:3992   */\n  not\n    /* \"#utility.yul\":3982:4001   */\n  div\n    /* \"#utility.yul\":3973:3980   */\n  dup3\n    /* \"#utility.yul\":3970:4002   */\n  gt\n    /* \"#utility.yul\":3967:4025   */\n  iszero\n  tag_111\n  jumpi\n    /* \"#utility.yul\":4005:4023   */\n  tag_111\n  tag_62\n  jump\t// in\ntag_111:\n    /* \"#utility.yul\":4043:4063   */\n  mul\n  swap1\n  pop\n    /* \"#utility.yul\":3167:4069   */\ntag_100:\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4074:4214   */\ntag_24:\n    /* \"#utility.yul\":4132:4137   */\n  0x00\n    /* \"#utility.yul\":4161:4208   */\n  tag_113\n    /* \"#utility.yul\":4202:4206   */\n  0xff\n    /* \"#utility.yul\":4192:4200   */\n  dup5\n    /* \"#utility.yul\":4188:4207   */\n  and\n    /* \"#utility.yul\":4182:4186   */\n  dup4\n    /* \"#utility.yul\":4161:4208   */\n  tag_64\n  jump\t// in\ntag_113:\n    /* \"#utility.yul\":4152:4208   */\n  swap4\n    /* \"#utility.yul\":4074:4214   */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4219:4387   */\ntag_26:\n    /* \"#utility.yul\":4292:4301   */\n  dup1\n  dup3\n  mul\n    /* \"#utility.yul\":4323:4332   */\n  dup2\n  iszero\n    /* \"#utility.yul\":4340:4355   */\n  dup3\n  dup3\n  div\n    /* \"#utility.yul\":4334:4356   */\n  dup5\n  eq\n    /* \"#utility.yul\":4320:4357   */\n  or\n    /* \"#utility.yul\":4310:4381   */\n  tag_100\n  jumpi\n    /* \"#utility.yul\":4361:4379   */\n  tag_100\n  tag_62\n  jump\t// in\n    /* \"#utility.yul\":4752:4877   */\ntag_41:\n    /* \"#utility.yul\":4817:4826   */\n  dup1\n  dup3\n  add\n    /* \"#utility.yul\":4838:4848   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":4835:4871   */\n  iszero\n  tag_100\n  jumpi\n    /* \"#utility.yul\":4851:4869   */\n  tag_100\n  tag_62\n  jump\t// in\n    /* \"#utility.yul\":5064:5467   */\ntag_65:\n    /* \"Revolt.sol\":539:6748  contract RevoltCoin is ERC20, Ownable, Pausable, ReentrancyGuard {... */\n  mload(0x80)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0x933c48a61c3bad621ebc5d57117f9e773fefae4468bceaf9d3198a3bf7c1d678\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"Revolt.sol\":539:6748  contract RevoltCoin is ERC20, Ownable, Pausable, ReentrancyGuard {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x67243482\n      gt\n      tag_31\n      jumpi\n      dup1\n      0xa457c2d7\n      gt\n      tag_32\n      jumpi\n      dup1\n      0xdd62ed3e\n      gt\n      tag_33\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_27\n      jumpi\n      dup1\n      0xe74b981b\n      eq\n      tag_28\n      jumpi\n      dup1\n      0xea2f0b37\n      eq\n      tag_29\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_30\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_33:\n      dup1\n      0xa457c2d7\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_25\n      jumpi\n      dup1\n      0xd5f39488\n      eq\n      tag_26\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_32:\n      dup1\n      0x8456cb59\n      gt\n      tag_34\n      jumpi\n      dup1\n      0x8456cb59\n      eq\n      tag_20\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_21\n      jumpi\n      dup1\n      0x94544e64\n      eq\n      tag_22\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_23\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_34:\n      dup1\n      0x67243482\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_19\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_31:\n      dup1\n      0x32cb6b0c\n      gt\n      tag_35\n      jumpi\n      dup1\n      0x40c10f19\n      gt\n      tag_36\n      jumpi\n      dup1\n      0x40c10f19\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x437823ec\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x46904840\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x5c975abb\n      eq\n      tag_16\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_36:\n      dup1\n      0x32cb6b0c\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x3f4ba83a\n      eq\n      tag_12\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_35:\n      dup1\n      0x18160ddd\n      gt\n      tag_37\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x1f36d925\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_9\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_37:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x1815c208\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":2158:2256  function name() public view virtual override returns (string memory) {... */\n    tag_3:\n      tag_38\n      tag_39\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      tag_40\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":4444:4641  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_4:\n      tag_42\n      tag_43\n      calldatasize\n      0x04\n      tag_44\n      jump\t// in\n    tag_43:\n      tag_45\n      jump\t// in\n    tag_42:\n      mload(0x40)\n        /* \"#utility.yul\":1085:1099   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1078:1100   */\n      iszero\n        /* \"#utility.yul\":1060:1101   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1048:1050   */\n      0x20\n        /* \"#utility.yul\":1033:1051   */\n      add\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":4444:4641  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n      tag_40\n        /* \"#utility.yul\":920:1107   */\n      jump\n        /* \"Revolt.sol\":3481:3706  function ownerTransfer(address newOwner) external onlyOwner {... */\n    tag_5:\n      tag_48\n      tag_49\n      calldatasize\n      0x04\n      tag_50\n      jump\t// in\n    tag_49:\n      tag_51\n      jump\t// in\n    tag_48:\n      stop\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":3255:3361  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_6:\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":3342:3354  _totalSupply */\n      sload(0x02)\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":3255:3361  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_52:\n      mload(0x40)\n        /* \"#utility.yul\":1449:1474   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1437:1439   */\n      0x20\n        /* \"#utility.yul\":1422:1440   */\n      add\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":3255:3361  function totalSupply() public view virtual override returns (uint256) {... */\n      tag_40\n        /* \"#utility.yul\":1303:1480   */\n      jump\n        /* \"Revolt.sol\":2281:2543  function setTransferFeePercent(uint256 newFee) external onlyOwner {... */\n    tag_7:\n      tag_48\n      tag_57\n      calldatasize\n      0x04\n      tag_58\n      jump\t// in\n    tag_57:\n      tag_59\n      jump\t// in\n        /* \"Revolt.sol\":5426:5763  function transferFrom(... */\n    tag_8:\n      tag_42\n      tag_61\n      calldatasize\n      0x04\n      tag_62\n      jump\t// in\n    tag_61:\n      tag_63\n      jump\t// in\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":3104:3195  function decimals() public view virtual override returns (uint8) {... */\n    tag_9:\n      mload(0x40)\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":3186:3188  18 */\n      0x12\n        /* \"#utility.yul\":2237:2273   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2225:2227   */\n      0x20\n        /* \"#utility.yul\":2210:2228   */\n      add\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":3104:3195  function decimals() public view virtual override returns (uint8) {... */\n      tag_40\n        /* \"#utility.yul\":2095:2279   */\n      jump\n        /* \"Revolt.sol\":669:727  uint256 public constant MAX_SUPPLY = 10_000_000 * 10 ** 18 */\n    tag_10:\n      tag_52\n        /* \"Revolt.sol\":706:727  10_000_000 * 10 ** 18 */\n      0x084595161401484a000000\n        /* \"Revolt.sol\":669:727  uint256 public constant MAX_SUPPLY = 10_000_000 * 10 ** 18 */\n      dup2\n      jump\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":5854:6088  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_11:\n      tag_42\n      tag_73\n      calldatasize\n      0x04\n      tag_44\n      jump\t// in\n    tag_73:\n      tag_74\n      jump\t// in\n        /* \"Revolt.sol\":4789:4854  function unpause() external onlyOwner {... */\n    tag_12:\n      tag_48\n      tag_77\n      jump\t// in\n        /* \"Revolt.sol\":2046:2218  function mint(address to, uint256 amount) external onlyOwner {... */\n    tag_13:\n      tag_48\n      tag_79\n      calldatasize\n      0x04\n      tag_44\n      jump\t// in\n    tag_79:\n      tag_80\n      jump\t// in\n        /* \"Revolt.sol\":3087:3236  function excludeFromFee(address account) external onlyOwner {... */\n    tag_14:\n      tag_48\n      tag_82\n      calldatasize\n      0x04\n      tag_50\n      jump\t// in\n    tag_82:\n      tag_83\n      jump\t// in\n        /* \"Revolt.sol\":827:854  address public feeRecipient */\n    tag_15:\n      sload(0x08)\n      tag_84\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n    tag_84:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2448:2480   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":2430:2481   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2418:2420   */\n      0x20\n        /* \"#utility.yul\":2403:2421   */\n      add\n        /* \"Revolt.sol\":827:854  address public feeRecipient */\n      tag_40\n        /* \"#utility.yul\":2284:2487   */\n      jump\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/security/Pausable.sol\":1615:1699  function paused() public view virtual returns (bool) {... */\n    tag_16:\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/security/Pausable.sol\":1685:1692  _paused */\n      sload(0x05)\n      shl(0xa0, 0x01)\n      swap1\n      div\n      0xff\n      and\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/security/Pausable.sol\":1615:1699  function paused() public view virtual returns (bool) {... */\n      jump(tag_42)\n        /* \"Revolt.sol\":5952:6746  function airdrop(address[] calldata recipients, uint256[] calldata amounts)... */\n    tag_17:\n      tag_48\n      tag_92\n      calldatasize\n      0x04\n      tag_93\n      jump\t// in\n    tag_92:\n      tag_94\n      jump\t// in\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":3419:3544  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_18:\n      tag_52\n      tag_96\n      calldatasize\n      0x04\n      tag_50\n      jump\t// in\n    tag_96:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":3519:3537  _balances[account] */\n      and\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":3493:3500  uint256 */\n      0x00\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":3519:3537  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":3419:3544  function balanceOf(address account) public view virtual override returns (uint256) {... */\n      jump\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/access/Ownable.sol\":1824:1925  function renounceOwnership() public virtual onlyOwner {... */\n    tag_19:\n      tag_48\n      tag_100\n      jump\t// in\n        /* \"Revolt.sol\":4693:4754  function pause() external onlyOwner {... */\n    tag_20:\n      tag_48\n      tag_102\n      jump\t// in\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n    tag_21:\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/access/Ownable.sol\":1273:1279  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x05))\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n      jump(tag_84)\n        /* \"Revolt.sol\":784:821  uint256 public transferFeePercent = 2 */\n    tag_22:\n      tag_52\n      sload(0x07)\n      dup2\n      jump\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":2369:2471  function symbol() public view virtual override returns (string memory) {... */\n    tag_23:\n      tag_38\n      tag_110\n      jump\t// in\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":6575:7002  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_24:\n      tag_42\n      tag_113\n      calldatasize\n      0x04\n      tag_44\n      jump\t// in\n    tag_113:\n      tag_114\n      jump\t// in\n        /* \"Revolt.sol\":5221:5420  function transfer(... */\n    tag_25:\n      tag_42\n      tag_117\n      calldatasize\n      0x04\n      tag_44\n      jump\t// in\n    tag_117:\n      tag_118\n      jump\t// in\n        /* \"Revolt.sol\":987:1020  address public immutable deployer */\n    tag_26:\n      tag_84\n      immutable(\"0x933c48a61c3bad621ebc5d57117f9e773fefae4468bceaf9d3198a3bf7c1d678\")\n      dup2\n      jump\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":3987:4136  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_27:\n      tag_52\n      tag_124\n      calldatasize\n      0x04\n      tag_125\n      jump\t// in\n    tag_124:\n      tag_126\n      jump\t// in\n        /* \"Revolt.sol\":2584:3058  function setFeeRecipient(address newRecipient) external onlyOwner {... */\n    tag_28:\n      tag_48\n      tag_129\n      calldatasize\n      0x04\n      tag_50\n      jump\t// in\n    tag_129:\n      tag_130\n      jump\t// in\n        /* \"Revolt.sol\":3242:3388  function includeInFee(address account) external onlyOwner {... */\n    tag_29:\n      tag_48\n      tag_132\n      calldatasize\n      0x04\n      tag_50\n      jump\t// in\n    tag_132:\n      tag_133\n      jump\t// in\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/access/Ownable.sol\":2074:2272  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_30:\n      tag_48\n      tag_135\n      calldatasize\n      0x04\n      tag_50\n      jump\t// in\n    tag_135:\n      tag_136\n      jump\t// in\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":2158:2256  function name() public view virtual override returns (string memory) {... */\n    tag_39:\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":2212:2225  string memory */\n      0x60\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":2244:2249  _name */\n      0x03\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":2237:2249  return _name */\n      dup1\n      sload\n      tag_138\n      swap1\n      tag_139\n      jump\t// in\n    tag_138:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_140\n      swap1\n      tag_139\n      jump\t// in\n    tag_140:\n      dup1\n      iszero\n      tag_141\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_142\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_141)\n    tag_142:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_143:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_143\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_141:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":2158:2256  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":4444:4641  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_45:\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":4527:4531  bool */\n      0x00\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":4581:4613  _approve(owner, spender, amount) */\n      tag_147\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/utils/Context.sol\":719:729  msg.sender */\n      dup2\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":4597:4604  spender */\n      dup6\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":4606:4612  amount */\n      dup6\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":4581:4589  _approve */\n      tag_148\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":4581:4613  _approve(owner, spender, amount) */\n      jump\t// in\n    tag_147:\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":4630:4634  true */\n      0x01\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":4623:4634  return true */\n      swap2\n      pop\n      pop\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":4444:4641  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_144:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"Revolt.sol\":3481:3706  function ownerTransfer(address newOwner) external onlyOwner {... */\n    tag_51:\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_150\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_151\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_150:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Revolt.sol\":3559:3581  newOwner != address(0) */\n      dup2\n      and\n        /* \"Revolt.sol\":3551:3615  require(newOwner != address(0), \"RevoltCoin: invalid new owner\") */\n      tag_153\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4489:4491   */\n      0x20\n        /* \"Revolt.sol\":3551:3615  require(newOwner != address(0), \"RevoltCoin: invalid new owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4471:4492   */\n      mstore\n        /* \"#utility.yul\":4528:4530   */\n      0x1d\n        /* \"#utility.yul\":4508:4526   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4501:4531   */\n      mstore\n        /* \"#utility.yul\":4567:4598   */\n      0x5265766f6c74436f696e3a20696e76616c6964206e6577206f776e6572000000\n        /* \"#utility.yul\":4547:4565   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4540:4599   */\n      mstore\n        /* \"#utility.yul\":4616:4634   */\n      0x64\n      add\n        /* \"Revolt.sol\":3551:3615  require(newOwner != address(0), \"RevoltCoin: invalid new owner\") */\n    tag_154:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_153:\n        /* \"Revolt.sol\":3652:3660  newOwner */\n      dup1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Revolt.sol\":3630:3661  OwnerUpdated(owner(), newOwner) */\n      and\n        /* \"Revolt.sol\":3643:3650  owner() */\n      tag_156\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/access/Ownable.sol\":1273:1279  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x05))\n      swap1\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n      jump\n        /* \"Revolt.sol\":3643:3650  owner() */\n    tag_156:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Revolt.sol\":3630:3661  OwnerUpdated(owner(), newOwner) */\n      and\n      0x8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d76\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"Revolt.sol\":3671:3699  _transferOwnership(newOwner) */\n      tag_157\n        /* \"Revolt.sol\":3690:3698  newOwner */\n      dup2\n        /* \"Revolt.sol\":3671:3689  _transferOwnership */\n      tag_158\n        /* \"Revolt.sol\":3671:3699  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_157:\n        /* \"Revolt.sol\":3481:3706  function ownerTransfer(address newOwner) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"Revolt.sol\":2281:2543  function setTransferFeePercent(uint256 newFee) external onlyOwner {... */\n    tag_59:\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_161\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_151\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_161:\n        /* \"Revolt.sol\":2375:2377  10 */\n      0x0a\n        /* \"Revolt.sol\":2365:2371  newFee */\n      dup2\n        /* \"Revolt.sol\":2365:2377  newFee <= 10 */\n      gt\n      iszero\n        /* \"Revolt.sol\":2357:2394  require(newFee <= 10, \"Fee too high\") */\n      tag_163\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4847:4849   */\n      0x20\n        /* \"Revolt.sol\":2357:2394  require(newFee <= 10, \"Fee too high\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4829:4850   */\n      mstore\n        /* \"#utility.yul\":4886:4888   */\n      0x0c\n        /* \"#utility.yul\":4866:4884   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4859:4889   */\n      mstore\n      shl(0xa3, 0x08ccaca40e8dede40d0d2ced)\n        /* \"#utility.yul\":4905:4923   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4898:4940   */\n      mstore\n        /* \"#utility.yul\":4957:4975   */\n      0x64\n      add\n        /* \"Revolt.sol\":2357:2394  require(newFee <= 10, \"Fee too high\") */\n      tag_154\n        /* \"#utility.yul\":4645:4981   */\n      jump\n        /* \"Revolt.sol\":2357:2394  require(newFee <= 10, \"Fee too high\") */\n    tag_163:\n        /* \"Revolt.sol\":2423:2441  transferFeePercent */\n      0x07\n      dup1\n      sload\n        /* \"Revolt.sol\":2451:2478  transferFeePercent = newFee */\n      swap1\n      dup3\n      swap1\n      sstore\n        /* \"Revolt.sol\":2493:2536  TransferFeePercentUpdated(previous, newFee) */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":5160:5185   */\n      dup3\n      dup2\n      mstore\n        /* \"#utility.yul\":5216:5218   */\n      0x20\n        /* \"#utility.yul\":5201:5219   */\n      dup2\n      add\n        /* \"#utility.yul\":5194:5228   */\n      dup5\n      swap1\n      mstore\n        /* \"Revolt.sol\":2493:2536  TransferFeePercentUpdated(previous, newFee) */\n      0xd141d90e37cff90c4910d122c1b6bc4951144bbf7ad06233ce2a2954e5c25e3b\n      swap2\n        /* \"#utility.yul\":5133:5151   */\n      add\n        /* \"Revolt.sol\":2493:2536  TransferFeePercentUpdated(previous, newFee) */\n    tag_166:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"Revolt.sol\":2347:2543  {... */\n      pop\n        /* \"Revolt.sol\":2281:2543  function setTransferFeePercent(uint256 newFee) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"Revolt.sol\":5426:5763  function transferFrom(... */\n    tag_63:\n        /* \"Revolt.sol\":5572:5576  bool */\n      0x00\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_169\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_170\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_169:\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      tag_172\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/security/Pausable.sol\":1239:1256  _requireNotPaused */\n      tag_173\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      jump\t// in\n    tag_172:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Revolt.sol\":5596:5612  to != address(0) */\n      dup4\n      and\n        /* \"Revolt.sol\":5588:5645  require(to != address(0), \"RevoltCoin: transfer to zero\") */\n      tag_175\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5441:5443   */\n      0x20\n        /* \"Revolt.sol\":5588:5645  require(to != address(0), \"RevoltCoin: transfer to zero\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5423:5444   */\n      mstore\n        /* \"#utility.yul\":5480:5482   */\n      0x1c\n        /* \"#utility.yul\":5460:5478   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5453:5483   */\n      mstore\n        /* \"#utility.yul\":5519:5549   */\n      0x5265766f6c74436f696e3a207472616e7366657220746f207a65726f00000000\n        /* \"#utility.yul\":5499:5517   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5492:5550   */\n      mstore\n        /* \"#utility.yul\":5567:5585   */\n      0x64\n      add\n        /* \"Revolt.sol\":5588:5645  require(to != address(0), \"RevoltCoin: transfer to zero\") */\n      tag_154\n        /* \"#utility.yul\":5239:5591   */\n      jump\n        /* \"Revolt.sol\":5588:5645  require(to != address(0), \"RevoltCoin: transfer to zero\") */\n    tag_175:\n        /* \"Revolt.sol\":5655:5698  _spendAllowance(from, _msgSender(), amount) */\n      tag_178\n        /* \"Revolt.sol\":5671:5675  from */\n      dup5\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"Revolt.sol\":5691:5697  amount */\n      dup5\n        /* \"Revolt.sol\":5655:5670  _spendAllowance */\n      tag_180\n        /* \"Revolt.sol\":5655:5698  _spendAllowance(from, _msgSender(), amount) */\n      jump\t// in\n    tag_178:\n        /* \"Revolt.sol\":5708:5735  _transfer(from, to, amount) */\n      tag_181\n        /* \"Revolt.sol\":5718:5722  from */\n      dup5\n        /* \"Revolt.sol\":5724:5726  to */\n      dup5\n        /* \"Revolt.sol\":5728:5734  amount */\n      dup5\n        /* \"Revolt.sol\":5708:5717  _transfer */\n      tag_182\n        /* \"Revolt.sol\":5708:5735  _transfer(from, to, amount) */\n      jump\t// in\n    tag_181:\n      pop\n        /* \"Revolt.sol\":5752:5756  true */\n      0x01\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_183\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n      0x01\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/security/ReentrancyGuard.sol\":2809:2816  _status */\n      0x06\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/security/ReentrancyGuard.sol\":2809:2831  _status = _NOT_ENTERED */\n      sstore\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n      jump\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n    tag_183:\n        /* \"Revolt.sol\":5426:5763  function transferFrom(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":5854:6088  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_74:\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":5942:5946  bool */\n      0x00\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":5996:6060  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      tag_147\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/utils/Context.sol\":719:729  msg.sender */\n      dup2\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":6012:6019  spender */\n      dup6\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":6049:6059  addedValue */\n      dup6\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":6021:6046  allowance(owner, spender) */\n      tag_189\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/utils/Context.sol\":719:729  msg.sender */\n      dup4\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":6012:6019  spender */\n      dup4\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":6021:6030  allowance */\n      tag_126\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":6021:6046  allowance(owner, spender) */\n      jump\t// in\n    tag_189:\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":6021:6059  allowance(owner, spender) + addedValue */\n      tag_190\n      swap2\n      swap1\n      tag_191\n      jump\t// in\n    tag_190:\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":5996:6004  _approve */\n      tag_148\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":5996:6060  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      jump\t// in\n        /* \"Revolt.sol\":4789:4854  function unpause() external onlyOwner {... */\n    tag_77:\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_193\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_151\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_193:\n        /* \"Revolt.sol\":4837:4847  _unpause() */\n      tag_195\n        /* \"Revolt.sol\":4837:4845  _unpause */\n      tag_196\n        /* \"Revolt.sol\":4837:4847  _unpause() */\n      jump\t// in\n    tag_195:\n        /* \"Revolt.sol\":4789:4854  function unpause() external onlyOwner {... */\n      jump\t// out\n        /* \"Revolt.sol\":2046:2218  function mint(address to, uint256 amount) external onlyOwner {... */\n    tag_80:\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_198\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_151\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_198:\n        /* \"Revolt.sol\":706:727  10_000_000 * 10 ** 18 */\n      0x084595161401484a000000\n        /* \"Revolt.sol\":2141:2147  amount */\n      dup2\n        /* \"Revolt.sol\":2125:2138  totalSupply() */\n      tag_200\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":3342:3354  _totalSupply */\n      sload(0x02)\n      swap1\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":3255:3361  function totalSupply() public view virtual override returns (uint256) {... */\n      jump\n        /* \"Revolt.sol\":2125:2138  totalSupply() */\n    tag_200:\n        /* \"Revolt.sol\":2125:2147  totalSupply() + amount */\n      tag_201\n      swap2\n      swap1\n      tag_191\n      jump\t// in\n    tag_201:\n        /* \"Revolt.sol\":2125:2161  totalSupply() + amount <= MAX_SUPPLY */\n      gt\n      iszero\n        /* \"Revolt.sol\":2117:2184  require(totalSupply() + amount <= MAX_SUPPLY, \"Exceeds max supply\") */\n      tag_202\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6060:6062   */\n      0x20\n        /* \"Revolt.sol\":2117:2184  require(totalSupply() + amount <= MAX_SUPPLY, \"Exceeds max supply\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6042:6063   */\n      mstore\n        /* \"#utility.yul\":6099:6101   */\n      0x12\n        /* \"#utility.yul\":6079:6097   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6072:6102   */\n      mstore\n      shl(0x70, 0x45786365656473206d617820737570706c79)\n        /* \"#utility.yul\":6118:6136   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6111:6159   */\n      mstore\n        /* \"#utility.yul\":6176:6194   */\n      0x64\n      add\n        /* \"Revolt.sol\":2117:2184  require(totalSupply() + amount <= MAX_SUPPLY, \"Exceeds max supply\") */\n      tag_154\n        /* \"#utility.yul\":5858:6200   */\n      jump\n        /* \"Revolt.sol\":2117:2184  require(totalSupply() + amount <= MAX_SUPPLY, \"Exceeds max supply\") */\n    tag_202:\n        /* \"Revolt.sol\":2194:2211  _mint(to, amount) */\n      tag_205\n        /* \"Revolt.sol\":2200:2202  to */\n      dup3\n        /* \"Revolt.sol\":2204:2210  amount */\n      dup3\n        /* \"Revolt.sol\":2194:2199  _mint */\n      tag_206\n        /* \"Revolt.sol\":2194:2211  _mint(to, amount) */\n      jump\t// in\n    tag_205:\n        /* \"Revolt.sol\":2046:2218  function mint(address to, uint256 amount) external onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"Revolt.sol\":3087:3236  function excludeFromFee(address account) external onlyOwner {... */\n    tag_83:\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_208\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_151\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_208:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Revolt.sol\":3157:3184  _isExcludedFromFee[account] */\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"Revolt.sol\":3157:3175  _isExcludedFromFee */\n      0x09\n        /* \"Revolt.sol\":3157:3184  _isExcludedFromFee[account] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"Revolt.sol\":3157:3191  _isExcludedFromFee[account] = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"Revolt.sol\":3187:3191  true */\n      0x01\n        /* \"Revolt.sol\":3157:3191  _isExcludedFromFee[account] = true */\n      or\n      swap1\n      sstore\n        /* \"Revolt.sol\":3206:3229  ExcludeFromFee(account) */\n      swap1\n      mload\n        /* \"#utility.yul\":2430:2481   */\n      swap2\n      dup3\n      mstore\n        /* \"Revolt.sol\":3206:3229  ExcludeFromFee(account) */\n      0x58c3e0504c69d3a92726966f152a771e0f8f6ad4daca1ae9055a38aba1fd2b62\n      swap2\n        /* \"#utility.yul\":2403:2421   */\n      add\n        /* \"Revolt.sol\":3206:3229  ExcludeFromFee(account) */\n    tag_210:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"Revolt.sol\":3087:3236  function excludeFromFee(address account) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"Revolt.sol\":5952:6746  function airdrop(address[] calldata recipients, uint256[] calldata amounts)... */\n    tag_94:\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_213\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_170\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_213:\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      tag_215\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/security/Pausable.sol\":1239:1256  _requireNotPaused */\n      tag_173\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      jump\t// in\n    tag_215:\n        /* \"Revolt.sol\":6110:6120  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Revolt.sol\":6124:6132  deployer */\n      immutable(\"0x933c48a61c3bad621ebc5d57117f9e773fefae4468bceaf9d3198a3bf7c1d678\")\n        /* \"Revolt.sol\":6110:6132  msg.sender == deployer */\n      and\n      eq\n        /* \"Revolt.sol\":6102:6174  require(msg.sender == deployer, \"RevoltCoin: only deployer can airdrop\") */\n      tag_217\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6407:6409   */\n      0x20\n        /* \"Revolt.sol\":6102:6174  require(msg.sender == deployer, \"RevoltCoin: only deployer can airdrop\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6389:6410   */\n      mstore\n        /* \"#utility.yul\":6446:6448   */\n      0x25\n        /* \"#utility.yul\":6426:6444   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6419:6449   */\n      mstore\n        /* \"#utility.yul\":6485:6519   */\n      0x5265766f6c74436f696e3a206f6e6c79206465706c6f7965722063616e206169\n        /* \"#utility.yul\":6465:6483   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6458:6520   */\n      mstore\n      shl(0xdc, 0x07264726f7)\n        /* \"#utility.yul\":6536:6554   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":6529:6564   */\n      mstore\n        /* \"#utility.yul\":6581:6600   */\n      0x84\n      add\n        /* \"Revolt.sol\":6102:6174  require(msg.sender == deployer, \"RevoltCoin: only deployer can airdrop\") */\n      tag_154\n        /* \"#utility.yul\":6205:6606   */\n      jump\n        /* \"Revolt.sol\":6102:6174  require(msg.sender == deployer, \"RevoltCoin: only deployer can airdrop\") */\n    tag_217:\n        /* \"Revolt.sol\":6192:6227  recipients.length == amounts.length */\n      dup3\n      dup2\n      eq\n        /* \"Revolt.sol\":6184:6267  require(recipients.length == amounts.length, \"RevoltCoin: airdrop arrays mismatch\") */\n      tag_220\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6813:6815   */\n      0x20\n        /* \"Revolt.sol\":6184:6267  require(recipients.length == amounts.length, \"RevoltCoin: airdrop arrays mismatch\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6795:6816   */\n      mstore\n        /* \"#utility.yul\":6852:6854   */\n      0x23\n        /* \"#utility.yul\":6832:6850   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6825:6855   */\n      mstore\n        /* \"#utility.yul\":6891:6925   */\n      0x5265766f6c74436f696e3a2061697264726f7020617272617973206d69736d61\n        /* \"#utility.yul\":6871:6889   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6864:6926   */\n      mstore\n      shl(0xeb, 0x0e8c6d)\n        /* \"#utility.yul\":6942:6960   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":6935:6968   */\n      mstore\n        /* \"#utility.yul\":6985:7004   */\n      0x84\n      add\n        /* \"Revolt.sol\":6184:6267  require(recipients.length == amounts.length, \"RevoltCoin: airdrop arrays mismatch\") */\n      tag_154\n        /* \"#utility.yul\":6611:7010   */\n      jump\n        /* \"Revolt.sol\":6184:6267  require(recipients.length == amounts.length, \"RevoltCoin: airdrop arrays mismatch\") */\n    tag_220:\n        /* \"Revolt.sol\":6277:6290  uint256 total */\n      0x00\n      dup1\n        /* \"Revolt.sol\":6330:6419  for (uint256 i = 0; i < amounts.length; i++) {... */\n    tag_223:\n        /* \"Revolt.sol\":6350:6368  i < amounts.length */\n      dup3\n      dup2\n      lt\n        /* \"Revolt.sol\":6330:6419  for (uint256 i = 0; i < amounts.length; i++) {... */\n      iszero\n      tag_224\n      jumpi\n        /* \"Revolt.sol\":6398:6405  amounts */\n      dup4\n      dup4\n        /* \"Revolt.sol\":6406:6407  i */\n      dup3\n        /* \"Revolt.sol\":6398:6408  amounts[i] */\n      dup2\n      dup2\n      lt\n      tag_227\n      jumpi\n      tag_227\n      tag_228\n      jump\t// in\n    tag_227:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      calldataload\n        /* \"Revolt.sol\":6389:6408  total += amounts[i] */\n      dup3\n      tag_229\n      swap2\n      swap1\n      tag_191\n      jump\t// in\n    tag_229:\n      swap2\n      pop\n        /* \"Revolt.sol\":6370:6373  i++ */\n      0x01\n      add\n        /* \"Revolt.sol\":6330:6419  for (uint256 i = 0; i < amounts.length; i++) {... */\n      jump(tag_223)\n    tag_224:\n      pop\n        /* \"Revolt.sol\":706:727  10_000_000 * 10 ** 18 */\n      0x084595161401484a000000\n        /* \"Revolt.sol\":6494:6499  total */\n      dup2\n        /* \"Revolt.sol\":6478:6491  totalSupply() */\n      tag_230\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":3342:3354  _totalSupply */\n      sload(0x02)\n      swap1\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":3255:3361  function totalSupply() public view virtual override returns (uint256) {... */\n      jump\n        /* \"Revolt.sol\":6478:6491  totalSupply() */\n    tag_230:\n        /* \"Revolt.sol\":6478:6499  totalSupply() + total */\n      tag_231\n      swap2\n      swap1\n      tag_191\n      jump\t// in\n    tag_231:\n        /* \"Revolt.sol\":6478:6513  totalSupply() + total <= MAX_SUPPLY */\n      gt\n      iszero\n        /* \"Revolt.sol\":6470:6548  require(totalSupply() + total <= MAX_SUPPLY, \"RevoltCoin: exceeds max supply\") */\n      tag_232\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7349:7351   */\n      0x20\n        /* \"Revolt.sol\":6470:6548  require(totalSupply() + total <= MAX_SUPPLY, \"RevoltCoin: exceeds max supply\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7331:7352   */\n      mstore\n        /* \"#utility.yul\":7388:7390   */\n      0x1e\n        /* \"#utility.yul\":7368:7386   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7361:7391   */\n      mstore\n        /* \"#utility.yul\":7427:7459   */\n      0x5265766f6c74436f696e3a2065786365656473206d617820737570706c790000\n        /* \"#utility.yul\":7407:7425   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7400:7460   */\n      mstore\n        /* \"#utility.yul\":7477:7495   */\n      0x64\n      add\n        /* \"Revolt.sol\":6470:6548  require(totalSupply() + total <= MAX_SUPPLY, \"RevoltCoin: exceeds max supply\") */\n      tag_154\n        /* \"#utility.yul\":7147:7501   */\n      jump\n        /* \"Revolt.sol\":6470:6548  require(totalSupply() + total <= MAX_SUPPLY, \"RevoltCoin: exceeds max supply\") */\n    tag_232:\n        /* \"Revolt.sol\":6587:6596  uint256 i */\n      0x00\n        /* \"Revolt.sol\":6582:6740  for (uint256 i = 0; i < recipients.length; i++) {... */\n    tag_235:\n        /* \"Revolt.sol\":6602:6623  i < recipients.length */\n      dup5\n      dup2\n      lt\n        /* \"Revolt.sol\":6582:6740  for (uint256 i = 0; i < recipients.length; i++) {... */\n      iszero\n      tag_236\n      jumpi\n        /* \"Revolt.sol\":6644:6676  _mint(recipients[i], amounts[i]) */\n      tag_238\n        /* \"Revolt.sol\":6650:6660  recipients */\n      dup7\n      dup7\n        /* \"Revolt.sol\":6661:6662  i */\n      dup4\n        /* \"Revolt.sol\":6650:6663  recipients[i] */\n      dup2\n      dup2\n      lt\n      tag_240\n      jumpi\n      tag_240\n      tag_228\n      jump\t// in\n    tag_240:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      0x20\n      dup2\n      add\n      swap1\n      tag_241\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_241:\n        /* \"Revolt.sol\":6665:6672  amounts */\n      dup6\n      dup6\n        /* \"Revolt.sol\":6673:6674  i */\n      dup5\n        /* \"Revolt.sol\":6665:6675  amounts[i] */\n      dup2\n      dup2\n      lt\n      tag_243\n      jumpi\n      tag_243\n      tag_228\n      jump\t// in\n    tag_243:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      calldataload\n        /* \"Revolt.sol\":6644:6649  _mint */\n      tag_206\n        /* \"Revolt.sol\":6644:6676  _mint(recipients[i], amounts[i]) */\n      jump\t// in\n    tag_238:\n        /* \"Revolt.sol\":6703:6713  recipients */\n      dup6\n      dup6\n        /* \"Revolt.sol\":6714:6715  i */\n      dup3\n        /* \"Revolt.sol\":6703:6716  recipients[i] */\n      dup2\n      dup2\n      lt\n      tag_245\n      jumpi\n      tag_245\n      tag_228\n      jump\t// in\n    tag_245:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      0x20\n      dup2\n      add\n      swap1\n      tag_246\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_246:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Revolt.sol\":6695:6729  Airdrop(recipients[i], amounts[i]) */\n      and\n      0x8c32c568416fcf97be35ce5b27844cfddcd63a67a1a602c3595ba5dac38f303a\n        /* \"Revolt.sol\":6718:6725  amounts */\n      dup6\n      dup6\n        /* \"Revolt.sol\":6726:6727  i */\n      dup5\n        /* \"Revolt.sol\":6718:6728  amounts[i] */\n      dup2\n      dup2\n      lt\n      tag_248\n      jumpi\n      tag_248\n      tag_228\n      jump\t// in\n    tag_248:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      calldataload\n        /* \"Revolt.sol\":6695:6729  Airdrop(recipients[i], amounts[i]) */\n      mload(0x40)\n      tag_249\n      swap2\n        /* \"#utility.yul\":1449:1474   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1437:1439   */\n      0x20\n        /* \"#utility.yul\":1422:1440   */\n      add\n      swap1\n        /* \"#utility.yul\":1303:1480   */\n      jump\n        /* \"Revolt.sol\":6695:6729  Airdrop(recipients[i], amounts[i]) */\n    tag_249:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"Revolt.sol\":6625:6628  i++ */\n      0x01\n      add\n        /* \"Revolt.sol\":6582:6740  for (uint256 i = 0; i < recipients.length; i++) {... */\n      jump(tag_235)\n    tag_236:\n      pop\n        /* \"Revolt.sol\":6092:6746  {... */\n      pop\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_250\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n      0x01\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/security/ReentrancyGuard.sol\":2809:2816  _status */\n      0x06\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/security/ReentrancyGuard.sol\":2809:2831  _status = _NOT_ENTERED */\n      sstore\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n      jump\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n    tag_250:\n        /* \"Revolt.sol\":5952:6746  function airdrop(address[] calldata recipients, uint256[] calldata amounts)... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/access/Ownable.sol\":1824:1925  function renounceOwnership() public virtual onlyOwner {... */\n    tag_100:\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_253\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_151\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_253:\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/access/Ownable.sol\":1888:1918  _transferOwnership(address(0)) */\n      tag_195\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/access/Ownable.sol\":1915:1916  0 */\n      0x00\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/access/Ownable.sol\":1888:1906  _transferOwnership */\n      tag_158\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/access/Ownable.sol\":1888:1918  _transferOwnership(address(0)) */\n      jump\t// in\n        /* \"Revolt.sol\":4693:4754  function pause() external onlyOwner {... */\n    tag_102:\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_257\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_151\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_257:\n        /* \"Revolt.sol\":4739:4747  _pause() */\n      tag_195\n        /* \"Revolt.sol\":4739:4745  _pause */\n      tag_260\n        /* \"Revolt.sol\":4739:4747  _pause() */\n      jump\t// in\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":2369:2471  function symbol() public view virtual override returns (string memory) {... */\n    tag_110:\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":2425:2438  string memory */\n      0x60\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":2457:2464  _symbol */\n      0x04\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":2450:2464  return _symbol */\n      dup1\n      sload\n      tag_138\n      swap1\n      tag_139\n      jump\t// in\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":6575:7002  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_114:\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":6668:6672  bool */\n      0x00\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":6668:6672  bool */\n      dup2\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":6749:6774  allowance(owner, spender) */\n      tag_270\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/utils/Context.sol\":719:729  msg.sender */\n      dup3\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":6766:6773  spender */\n      dup7\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":6749:6758  allowance */\n      tag_126\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":6749:6774  allowance(owner, spender) */\n      jump\t// in\n    tag_270:\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":6722:6774  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":6812:6827  subtractedValue */\n      dup4\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":6792:6808  currentAllowance */\n      dup2\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":6792:6827  currentAllowance >= subtractedValue */\n      lt\n      iszero\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":6784:6869  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_271\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7708:7710   */\n      0x20\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":6784:6869  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7690:7711   */\n      mstore\n        /* \"#utility.yul\":7747:7749   */\n      0x25\n        /* \"#utility.yul\":7727:7745   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7720:7750   */\n      mstore\n        /* \"#utility.yul\":7786:7820   */\n      0x45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77\n        /* \"#utility.yul\":7766:7784   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7759:7821   */\n      mstore\n      shl(0xd8, 0x207a65726f)\n        /* \"#utility.yul\":7837:7855   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":7830:7865   */\n      mstore\n        /* \"#utility.yul\":7882:7901   */\n      0x84\n      add\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":6784:6869  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_154\n        /* \"#utility.yul\":7506:7907   */\n      jump\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":6784:6869  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n    tag_271:\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":6903:6963  _approve(owner, spender, currentAllowance - subtractedValue) */\n      tag_274\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":6912:6917  owner */\n      dup3\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":6919:6926  spender */\n      dup7\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":6947:6962  subtractedValue */\n      dup7\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":6928:6944  currentAllowance */\n      dup5\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":6928:6962  currentAllowance - subtractedValue */\n      sub\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":6903:6911  _approve */\n      tag_148\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":6903:6963  _approve(owner, spender, currentAllowance - subtractedValue) */\n      jump\t// in\n    tag_274:\n      pop\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":6991:6995  true */\n      0x01\n      swap5\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":6575:7002  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Revolt.sol\":5221:5420  function transfer(... */\n    tag_118:\n        /* \"Revolt.sol\":5341:5345  bool */\n      0x00\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_276\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_170\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_276:\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      tag_278\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/security/Pausable.sol\":1239:1256  _requireNotPaused */\n      tag_173\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      jump\t// in\n    tag_278:\n        /* \"Revolt.sol\":5357:5392  _transfer(_msgSender(), to, amount) */\n      tag_280\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"Revolt.sol\":5381:5383  to */\n      dup5\n        /* \"Revolt.sol\":5385:5391  amount */\n      dup5\n        /* \"Revolt.sol\":5357:5366  _transfer */\n      tag_182\n        /* \"Revolt.sol\":5357:5392  _transfer(_msgSender(), to, amount) */\n      jump\t// in\n    tag_280:\n      pop\n        /* \"Revolt.sol\":5409:5413  true */\n      0x01\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_144\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n      0x01\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/security/ReentrancyGuard.sol\":2809:2816  _status */\n      0x06\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/security/ReentrancyGuard.sol\":2809:2831  _status = _NOT_ENTERED */\n      sstore\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n      jump\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":3987:4136  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_126:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":4102:4120  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":4076:4083  uint256 */\n      0x00\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":4102:4120  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":4102:4113  _allowances */\n      0x01\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":4102:4120  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":4102:4129  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":3987:4136  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n      jump\t// out\n        /* \"Revolt.sol\":2584:3058  function setFeeRecipient(address newRecipient) external onlyOwner {... */\n    tag_130:\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_285\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_151\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_285:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Revolt.sol\":2668:2694  newRecipient != address(0) */\n      dup2\n      and\n        /* \"Revolt.sol\":2660:2726  require(newRecipient != address(0), \"RevoltCoin: invalid address\") */\n      tag_287\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8114:8116   */\n      0x20\n        /* \"Revolt.sol\":2660:2726  require(newRecipient != address(0), \"RevoltCoin: invalid address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8096:8117   */\n      mstore\n        /* \"#utility.yul\":8153:8155   */\n      0x1b\n        /* \"#utility.yul\":8133:8151   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8126:8156   */\n      mstore\n        /* \"#utility.yul\":8192:8221   */\n      0x5265766f6c74436f696e3a20696e76616c696420616464726573730000000000\n        /* \"#utility.yul\":8172:8190   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8165:8222   */\n      mstore\n        /* \"#utility.yul\":8239:8257   */\n      0x64\n      add\n        /* \"Revolt.sol\":2660:2726  require(newRecipient != address(0), \"RevoltCoin: invalid address\") */\n      tag_154\n        /* \"#utility.yul\":7912:8263   */\n      jump\n        /* \"Revolt.sol\":2660:2726  require(newRecipient != address(0), \"RevoltCoin: invalid address\") */\n    tag_287:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Revolt.sol\":2823:2847  newRecipient.code.length */\n      dup2\n      and\n      extcodesize\n        /* \"Revolt.sol\":2823:2852  newRecipient.code.length == 0 */\n      iszero\n        /* \"Revolt.sol\":2802:2915  require(... */\n      tag_290\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8470:8472   */\n      0x20\n        /* \"Revolt.sol\":2802:2915  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8452:8473   */\n      mstore\n        /* \"#utility.yul\":8509:8511   */\n      0x25\n        /* \"#utility.yul\":8489:8507   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8482:8512   */\n      mstore\n        /* \"#utility.yul\":8548:8582   */\n      0x5265766f6c74436f696e3a2066656520726563697069656e74206d7573742062\n        /* \"#utility.yul\":8528:8546   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8521:8583   */\n      mstore\n      shl(0xd8, 0x6520454f41)\n        /* \"#utility.yul\":8599:8617   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":8592:8627   */\n      mstore\n        /* \"#utility.yul\":8644:8663   */\n      0x84\n      add\n        /* \"Revolt.sol\":2802:2915  require(... */\n      tag_154\n        /* \"#utility.yul\":8268:8669   */\n      jump\n        /* \"Revolt.sol\":2802:2915  require(... */\n    tag_290:\n        /* \"Revolt.sol\":2944:2956  feeRecipient */\n      0x08\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Revolt.sol\":2966:2993  feeRecipient = newRecipient */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      swap1\n      swap4\n      sstore\n        /* \"Revolt.sol\":3008:3051  FeeRecipientUpdated(previous, newRecipient) */\n      0x40\n      dup1\n      mload\n        /* \"Revolt.sol\":2944:2956  feeRecipient */\n      swap2\n      swap1\n      swap3\n      and\n        /* \"#utility.yul\":8848:8899   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":8930:8932   */\n      0x20\n        /* \"#utility.yul\":8915:8933   */\n      dup3\n      add\n        /* \"#utility.yul\":8908:8968   */\n      swap4\n      swap1\n      swap4\n      mstore\n        /* \"Revolt.sol\":3008:3051  FeeRecipientUpdated(previous, newRecipient) */\n      0xaaebcf1bfa00580e41d966056b48521fa9f202645c86d4ddf28113e617c1b1d3\n      swap2\n        /* \"#utility.yul\":8821:8839   */\n      add\n        /* \"Revolt.sol\":3008:3051  FeeRecipientUpdated(previous, newRecipient) */\n      tag_166\n        /* \"#utility.yul\":8674:8974   */\n      jump\n        /* \"Revolt.sol\":3242:3388  function includeInFee(address account) external onlyOwner {... */\n    tag_133:\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_296\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_151\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_296:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Revolt.sol\":3310:3337  _isExcludedFromFee[account] */\n      dup2\n      and\n        /* \"Revolt.sol\":3340:3345  false */\n      0x00\n        /* \"Revolt.sol\":3310:3337  _isExcludedFromFee[account] */\n      dup2\n      dup2\n      mstore\n        /* \"Revolt.sol\":3310:3328  _isExcludedFromFee */\n      0x09\n        /* \"Revolt.sol\":3310:3337  _isExcludedFromFee[account] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"Revolt.sol\":3310:3345  _isExcludedFromFee[account] = false */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \"Revolt.sol\":3360:3381  IncludeInFee(account) */\n      swap1\n      mload\n        /* \"#utility.yul\":2430:2481   */\n      swap2\n      dup3\n      mstore\n        /* \"Revolt.sol\":3360:3381  IncludeInFee(account) */\n      0x4f6a6b6efe34ec6478021aa9fb7f6980e78ea3a10c74074a8ce49d5d3ebf1f7e\n      swap2\n        /* \"#utility.yul\":2403:2421   */\n      add\n        /* \"Revolt.sol\":3360:3381  IncludeInFee(account) */\n      tag_210\n        /* \"#utility.yul\":2284:2487   */\n      jump\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/access/Ownable.sol\":2074:2272  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_136:\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_300\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_151\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_300:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/access/Ownable.sol\":2162:2184  newOwner != address(0) */\n      dup2\n      and\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/access/Ownable.sol\":2154:2227  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_302\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9181:9183   */\n      0x20\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/access/Ownable.sol\":2154:2227  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9163:9184   */\n      mstore\n        /* \"#utility.yul\":9220:9222   */\n      0x26\n        /* \"#utility.yul\":9200:9218   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9193:9223   */\n      mstore\n        /* \"#utility.yul\":9259:9293   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":9239:9257   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9232:9294   */\n      mstore\n      shl(0xd0, 0x646472657373)\n        /* \"#utility.yul\":9310:9328   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":9303:9339   */\n      mstore\n        /* \"#utility.yul\":9356:9375   */\n      0x84\n      add\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/access/Ownable.sol\":2154:2227  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_154\n        /* \"#utility.yul\":8979:9381   */\n      jump\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/access/Ownable.sol\":2154:2227  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n    tag_302:\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/access/Ownable.sol\":2237:2265  _transferOwnership(newOwner) */\n      tag_157\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/access/Ownable.sol\":2256:2264  newOwner */\n      dup2\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/access/Ownable.sol\":2237:2255  _transferOwnership */\n      tag_158\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/access/Ownable.sol\":2237:2265  _transferOwnership(newOwner) */\n      jump\t// in\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":10457:10797  function _approve(address owner, address spender, uint256 amount) internal virtual {... */\n    tag_148:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":10558:10577  owner != address(0) */\n      dup4\n      and\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":10550:10618  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_308\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9588:9590   */\n      0x20\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":10550:10618  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9570:9591   */\n      mstore\n        /* \"#utility.yul\":9627:9629   */\n      0x24\n        /* \"#utility.yul\":9607:9625   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":9600:9630   */\n      mstore\n        /* \"#utility.yul\":9666:9700   */\n      0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464\n        /* \"#utility.yul\":9646:9664   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9639:9701   */\n      mstore\n      shl(0xe0, 0x72657373)\n        /* \"#utility.yul\":9717:9735   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":9710:9744   */\n      mstore\n        /* \"#utility.yul\":9761:9780   */\n      0x84\n      add\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":10550:10618  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_154\n        /* \"#utility.yul\":9386:9786   */\n      jump\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":10550:10618  require(owner != address(0), \"ERC20: approve from the zero address\") */\n    tag_308:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":10636:10657  spender != address(0) */\n      dup3\n      and\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":10628:10696  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_311\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9993:9995   */\n      0x20\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":10628:10696  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9975:9996   */\n      mstore\n        /* \"#utility.yul\":10032:10034   */\n      0x22\n        /* \"#utility.yul\":10012:10030   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10005:10035   */\n      mstore\n        /* \"#utility.yul\":10071:10105   */\n      0x45524332303a20617070726f766520746f20746865207a65726f206164647265\n        /* \"#utility.yul\":10051:10069   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10044:10106   */\n      mstore\n      shl(0xf0, 0x7373)\n        /* \"#utility.yul\":10122:10140   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":10115:10147   */\n      mstore\n        /* \"#utility.yul\":10164:10183   */\n      0x84\n      add\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":10628:10696  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_154\n        /* \"#utility.yul\":9791:10189   */\n      jump\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":10628:10696  require(spender != address(0), \"ERC20: approve to the zero address\") */\n    tag_311:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":10707:10725  _allowances[owner] */\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":10707:10718  _allowances */\n      0x01\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":10707:10725  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":10707:10734  _allowances[owner][spender] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":10707:10743  _allowances[owner][spender] = amount */\n      dup6\n      swap1\n      sstore\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":10758:10790  Approval(owner, spender, amount) */\n      swap1\n      mload\n        /* \"#utility.yul\":1449:1474   */\n      dup5\n      dup2\n      mstore\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":10758:10790  Approval(owner, spender, amount) */\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap2\n        /* \"#utility.yul\":1422:1440   */\n      add\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":10758:10790  Approval(owner, spender, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":10457:10797  function _approve(address owner, address spender, uint256 amount) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/access/Ownable.sol\":1359:1489  function _checkOwner() internal view virtual {... */\n    tag_151:\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/access/Ownable.sol\":1273:1279  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x05))\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/access/Ownable.sol\":1422:1445  owner() == _msgSender() */\n      eq\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_195\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":10396:10398   */\n      0x20\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10378:10399   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":10415:10433   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10408:10438   */\n      mstore\n        /* \"#utility.yul\":10474:10508   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":10454:10472   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10447:10509   */\n      mstore\n        /* \"#utility.yul\":10526:10544   */\n      0x64\n      add\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_154\n        /* \"#utility.yul\":10194:10550   */\n      jump\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/access/Ownable.sol\":2426:2613  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_158:\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/access/Ownable.sol\":2518:2524  _owner */\n      0x05\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/access/Ownable.sol\":2534:2551  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      swap1\n      swap4\n      sstore\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/access/Ownable.sol\":2566:2606  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/access/Ownable.sol\":2518:2524  _owner */\n      swap2\n      and\n      swap2\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/access/Ownable.sol\":2534:2551  _owner = newOwner */\n      swap1\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/access/Ownable.sol\":2518:2524  _owner */\n      dup3\n      swap1\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/access/Ownable.sol\":2566:2606  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/access/Ownable.sol\":2499:2515  address oldOwner */\n      0x00\n      swap1\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/access/Ownable.sol\":2566:2606  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/access/Ownable.sol\":2489:2613  {... */\n      pop\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/access/Ownable.sol\":2426:2613  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n    tag_170:\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/security/ReentrancyGuard.sol\":2468:2475  _status */\n      sload(0x06)\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/security/ReentrancyGuard.sol\":2468:2487  _status != _ENTERED */\n      sub\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/security/ReentrancyGuard.sol\":2460:2523  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_323\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":10757:10759   */\n      0x20\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/security/ReentrancyGuard.sol\":2460:2523  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10739:10760   */\n      mstore\n        /* \"#utility.yul\":10796:10798   */\n      0x1f\n        /* \"#utility.yul\":10776:10794   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10769:10799   */\n      mstore\n        /* \"#utility.yul\":10835:10868   */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"#utility.yul\":10815:10833   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10808:10869   */\n      mstore\n        /* \"#utility.yul\":10886:10904   */\n      0x64\n      add\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/security/ReentrancyGuard.sol\":2460:2523  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_154\n        /* \"#utility.yul\":10555:10910   */\n      jump\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/security/ReentrancyGuard.sol\":2460:2523  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n    tag_323:\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/security/ReentrancyGuard.sol\":2598:2605  _status */\n      0x06\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/security/ReentrancyGuard.sol\":2598:2616  _status = _ENTERED */\n      sstore\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n      jump\t// out\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/security/Pausable.sol\":1767:1873  function _requireNotPaused() internal view virtual {... */\n    tag_173:\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/security/Pausable.sol\":1685:1692  _paused */\n      sload(0x05)\n      shl(0xa0, 0x01)\n      swap1\n      div\n      0xff\n      and\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/security/Pausable.sol\":1836:1845  !paused() */\n      iszero\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/security/Pausable.sol\":1828:1866  require(!paused(), \"Pausable: paused\") */\n      tag_195\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":11117:11119   */\n      0x20\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/security/Pausable.sol\":1828:1866  require(!paused(), \"Pausable: paused\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11099:11120   */\n      mstore\n        /* \"#utility.yul\":11156:11158   */\n      0x10\n        /* \"#utility.yul\":11136:11154   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":11129:11159   */\n      mstore\n      shl(0x82, 0x14185d5cd8589b194e881c185d5cd959)\n        /* \"#utility.yul\":11175:11193   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":11168:11214   */\n      mstore\n        /* \"#utility.yul\":11231:11249   */\n      0x64\n      add\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/security/Pausable.sol\":1828:1866  require(!paused(), \"Pausable: paused\") */\n      tag_154\n        /* \"#utility.yul\":10915:11255   */\n      jump\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":11078:11489  function _spendAllowance(address owner, address spender, uint256 amount) internal virtual {... */\n    tag_180:\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":11178:11202  uint256 currentAllowance */\n      0x00\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":11205:11230  allowance(owner, spender) */\n      tag_332\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":11215:11220  owner */\n      dup5\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":11222:11229  spender */\n      dup5\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":11205:11214  allowance */\n      tag_126\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":11205:11230  allowance(owner, spender) */\n      jump\t// in\n    tag_332:\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":11178:11230  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n      not(0x00)\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":11244:11260  currentAllowance */\n      dup2\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":11244:11281  currentAllowance != type(uint256).max */\n      eq\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":11240:11483  if (currentAllowance != type(uint256).max) {... */\n      tag_250\n      jumpi\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":11325:11331  amount */\n      dup2\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":11305:11321  currentAllowance */\n      dup2\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":11305:11331  currentAllowance >= amount */\n      lt\n      iszero\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":11297:11365  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      tag_334\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":11462:11464   */\n      0x20\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":11297:11365  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11444:11465   */\n      mstore\n        /* \"#utility.yul\":11501:11503   */\n      0x1d\n        /* \"#utility.yul\":11481:11499   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":11474:11504   */\n      mstore\n        /* \"#utility.yul\":11540:11571   */\n      0x45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000\n        /* \"#utility.yul\":11520:11538   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":11513:11572   */\n      mstore\n        /* \"#utility.yul\":11589:11607   */\n      0x64\n      add\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":11297:11365  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      tag_154\n        /* \"#utility.yul\":11260:11613   */\n      jump\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":11297:11365  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n    tag_334:\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":11407:11458  _approve(owner, spender, currentAllowance - amount) */\n      tag_250\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":11416:11421  owner */\n      dup5\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":11423:11430  spender */\n      dup5\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":11451:11457  amount */\n      dup5\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":11432:11448  currentAllowance */\n      dup5\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":11432:11457  currentAllowance - amount */\n      sub\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":11407:11415  _approve */\n      tag_148\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":11407:11458  _approve(owner, spender, currentAllowance - amount) */\n      jump\t// in\n        /* \"Revolt.sol\":3809:4652  function _transfer(... */\n    tag_182:\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      tag_339\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/security/Pausable.sol\":1239:1256  _requireNotPaused */\n      tag_173\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      jump\t// in\n    tag_339:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Revolt.sol\":3959:3979  sender != address(0) */\n      dup4\n      and\n        /* \"Revolt.sol\":3951:4014  require(sender != address(0), \"RevoltCoin: transfer from zero\") */\n      tag_341\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":11820:11822   */\n      0x20\n        /* \"Revolt.sol\":3951:4014  require(sender != address(0), \"RevoltCoin: transfer from zero\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11802:11823   */\n      mstore\n        /* \"#utility.yul\":11859:11861   */\n      0x1e\n        /* \"#utility.yul\":11839:11857   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":11832:11862   */\n      mstore\n        /* \"#utility.yul\":11898:11930   */\n      0x5265766f6c74436f696e3a207472616e736665722066726f6d207a65726f0000\n        /* \"#utility.yul\":11878:11896   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":11871:11931   */\n      mstore\n        /* \"#utility.yul\":11948:11966   */\n      0x64\n      add\n        /* \"Revolt.sol\":3951:4014  require(sender != address(0), \"RevoltCoin: transfer from zero\") */\n      tag_154\n        /* \"#utility.yul\":11618:11972   */\n      jump\n        /* \"Revolt.sol\":3951:4014  require(sender != address(0), \"RevoltCoin: transfer from zero\") */\n    tag_341:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Revolt.sol\":4032:4055  recipient != address(0) */\n      dup3\n      and\n        /* \"Revolt.sol\":4024:4088  require(recipient != address(0), \"RevoltCoin: transfer to zero\") */\n      tag_344\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5441:5443   */\n      0x20\n        /* \"Revolt.sol\":4024:4088  require(recipient != address(0), \"RevoltCoin: transfer to zero\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5423:5444   */\n      mstore\n        /* \"#utility.yul\":5480:5482   */\n      0x1c\n        /* \"#utility.yul\":5460:5478   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5453:5483   */\n      mstore\n        /* \"#utility.yul\":5519:5549   */\n      0x5265766f6c74436f696e3a207472616e7366657220746f207a65726f00000000\n        /* \"#utility.yul\":5499:5517   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5492:5550   */\n      mstore\n        /* \"#utility.yul\":5567:5585   */\n      0x64\n      add\n        /* \"Revolt.sol\":4024:4088  require(recipient != address(0), \"RevoltCoin: transfer to zero\") */\n      tag_154\n        /* \"#utility.yul\":5239:5591   */\n      jump\n        /* \"Revolt.sol\":4024:4088  require(recipient != address(0), \"RevoltCoin: transfer to zero\") */\n    tag_344:\n        /* \"Revolt.sol\":4136:4137  0 */\n      0x00\n        /* \"Revolt.sol\":4115:4133  transferFeePercent */\n      sload(0x07)\n        /* \"Revolt.sol\":4115:4137  transferFeePercent > 0 */\n      gt\n        /* \"Revolt.sol\":4115:4179  transferFeePercent > 0 &&... */\n      dup1\n      iszero\n      tag_346\n      jumpi\n      pop\n        /* \"Revolt.sol\":4153:4165  feeRecipient */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x08))\n        /* \"Revolt.sol\":4153:4179  feeRecipient != address(0) */\n      iszero\n      iszero\n        /* \"Revolt.sol\":4115:4179  transferFeePercent > 0 &&... */\n    tag_346:\n        /* \"Revolt.sol\":4115:4222  transferFeePercent > 0 &&... */\n      dup1\n      iszero\n      tag_347\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Revolt.sol\":4196:4222  _isExcludedFromFee[sender] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"Revolt.sol\":4196:4214  _isExcludedFromFee */\n      0x09\n        /* \"Revolt.sol\":4196:4222  _isExcludedFromFee[sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"Revolt.sol\":4195:4222  !_isExcludedFromFee[sender] */\n      iszero\n        /* \"Revolt.sol\":4115:4222  transferFeePercent > 0 &&... */\n    tag_347:\n        /* \"Revolt.sol\":4115:4268  transferFeePercent > 0 &&... */\n      dup1\n      iszero\n      tag_348\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Revolt.sol\":4239:4268  _isExcludedFromFee[recipient] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"Revolt.sol\":4239:4257  _isExcludedFromFee */\n      0x09\n        /* \"Revolt.sol\":4239:4268  _isExcludedFromFee[recipient] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"Revolt.sol\":4238:4268  !_isExcludedFromFee[recipient] */\n      iszero\n        /* \"Revolt.sol\":4115:4268  transferFeePercent > 0 &&... */\n    tag_348:\n        /* \"Revolt.sol\":4098:4646  if (... */\n      iszero\n      tag_349\n      jumpi\n        /* \"Revolt.sol\":4293:4304  uint256 fee */\n      0x00\n        /* \"Revolt.sol\":4339:4342  100 */\n      0x64\n        /* \"Revolt.sol\":4317:4335  transferFeePercent */\n      sload(0x07)\n        /* \"Revolt.sol\":4308:4314  amount */\n      dup4\n        /* \"Revolt.sol\":4308:4335  amount * transferFeePercent */\n      tag_350\n      swap2\n      swap1\n      tag_351\n      jump\t// in\n    tag_350:\n        /* \"Revolt.sol\":4307:4342  (amount * transferFeePercent) / 100 */\n      tag_352\n      swap2\n      swap1\n      tag_353\n      jump\t// in\n    tag_352:\n        /* \"Revolt.sol\":4293:4342  uint256 fee = (amount * transferFeePercent) / 100 */\n      swap1\n      pop\n        /* \"Revolt.sol\":4356:4373  uint256 remaining */\n      0x00\n        /* \"Revolt.sol\":4376:4388  amount - fee */\n      tag_354\n        /* \"Revolt.sol\":4293:4342  uint256 fee = (amount * transferFeePercent) / 100 */\n      dup3\n        /* \"Revolt.sol\":4376:4382  amount */\n      dup5\n        /* \"Revolt.sol\":4376:4388  amount - fee */\n      tag_355\n      jump\t// in\n    tag_354:\n        /* \"Revolt.sol\":4457:4469  feeRecipient */\n      sload(0x08)\n        /* \"Revolt.sol\":4356:4388  uint256 remaining = amount - fee */\n      swap1\n      swap2\n      pop\n        /* \"Revolt.sol\":4433:4475  super._transfer(sender, feeRecipient, fee) */\n      tag_356\n      swap1\n        /* \"Revolt.sol\":4449:4455  sender */\n      dup7\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Revolt.sol\":4457:4469  feeRecipient */\n      and\n        /* \"Revolt.sol\":4471:4474  fee */\n      dup5\n        /* \"Revolt.sol\":4433:4448  super._transfer */\n      tag_357\n        /* \"Revolt.sol\":4433:4475  super._transfer(sender, feeRecipient, fee) */\n      jump\t// in\n    tag_356:\n        /* \"Revolt.sol\":4517:4562  super._transfer(sender, recipient, remaining) */\n      tag_358\n        /* \"Revolt.sol\":4533:4539  sender */\n      dup6\n        /* \"Revolt.sol\":4541:4550  recipient */\n      dup6\n        /* \"Revolt.sol\":4552:4561  remaining */\n      dup4\n        /* \"Revolt.sol\":4517:4532  super._transfer */\n      tag_357\n        /* \"Revolt.sol\":4517:4562  super._transfer(sender, recipient, remaining) */\n      jump\t// in\n    tag_358:\n        /* \"Revolt.sol\":4279:4573  {... */\n      pop\n      pop\n        /* \"Revolt.sol\":3809:4652  function _transfer(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Revolt.sol\":4098:4646  if (... */\n    tag_349:\n        /* \"Revolt.sol\":4593:4635  super._transfer(sender, recipient, amount) */\n      tag_360\n        /* \"Revolt.sol\":4609:4615  sender */\n      dup4\n        /* \"Revolt.sol\":4617:4626  recipient */\n      dup4\n        /* \"Revolt.sol\":4628:4634  amount */\n      dup4\n        /* \"Revolt.sol\":4593:4608  super._transfer */\n      tag_357\n        /* \"Revolt.sol\":4593:4635  super._transfer(sender, recipient, amount) */\n      jump\t// in\n    tag_360:\n        /* \"Revolt.sol\":3809:4652  function _transfer(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/security/Pausable.sol\":2433:2550  function _unpause() internal virtual whenPaused {... */\n    tag_196:\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/security/Pausable.sol\":1486:1502  _requirePaused() */\n      tag_363\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/security/Pausable.sol\":1486:1500  _requirePaused */\n      tag_364\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/security/Pausable.sol\":1486:1502  _requirePaused() */\n      jump\t// in\n    tag_363:\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/security/Pausable.sol\":2491:2498  _paused */\n      0x05\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/security/Pausable.sol\":2491:2506  _paused = false */\n      dup1\n      sload\n      not(shl(0xa0, 0xff))\n      and\n      swap1\n      sstore\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/security/Pausable.sol\":2521:2543  Unpaused(_msgSender()) */\n      0x5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/security/Pausable.sol\":2530:2542  _msgSender() */\n    tag_366:\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/security/Pausable.sol\":2521:2543  Unpaused(_msgSender()) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2448:2480   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":2430:2481   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2418:2420   */\n      0x20\n        /* \"#utility.yul\":2403:2421   */\n      add\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/security/Pausable.sol\":2521:2543  Unpaused(_msgSender()) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/security/Pausable.sol\":2433:2550  function _unpause() internal virtual whenPaused {... */\n      jump\t// out\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":8520:9055  function _mint(address account, uint256 amount) internal virtual {... */\n    tag_206:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":8603:8624  account != address(0) */\n      dup3\n      and\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":8595:8660  require(account != address(0), \"ERC20: mint to the zero address\") */\n      tag_369\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":12707:12709   */\n      0x20\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":8595:8660  require(account != address(0), \"ERC20: mint to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12689:12710   */\n      mstore\n        /* \"#utility.yul\":12746:12748   */\n      0x1f\n        /* \"#utility.yul\":12726:12744   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":12719:12749   */\n      mstore\n        /* \"#utility.yul\":12785:12818   */\n      0x45524332303a206d696e7420746f20746865207a65726f206164647265737300\n        /* \"#utility.yul\":12765:12783   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":12758:12819   */\n      mstore\n        /* \"#utility.yul\":12836:12854   */\n      0x64\n      add\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":8595:8660  require(account != address(0), \"ERC20: mint to the zero address\") */\n      tag_154\n        /* \"#utility.yul\":12505:12860   */\n      jump\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":8595:8660  require(account != address(0), \"ERC20: mint to the zero address\") */\n    tag_369:\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":8671:8720  _beforeTokenTransfer(address(0), account, amount) */\n      tag_372\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":8700:8701  0 */\n      0x00\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":8704:8711  account */\n      dup4\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":8713:8719  amount */\n      dup4\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":8671:8691  _beforeTokenTransfer */\n      tag_373\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":8671:8720  _beforeTokenTransfer(address(0), account, amount) */\n      jump\t// in\n    tag_372:\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":8747:8753  amount */\n      dup1\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":8731:8743  _totalSupply */\n      0x02\n      0x00\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":8731:8753  _totalSupply += amount */\n      dup3\n      dup3\n      sload\n      tag_374\n      swap2\n      swap1\n      tag_191\n      jump\t// in\n    tag_374:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":8899:8917  _balances[account] */\n      dup3\n      and\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":8899:8908  _balances */\n      0x00\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":8899:8917  _balances[account] */\n      dup2\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":8899:8927  _balances[account] += amount */\n      dup1\n      sload\n      dup7\n      add\n      swap1\n      sstore\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":8952:8989  Transfer(address(0), account, amount) */\n      mload\n        /* \"#utility.yul\":1449:1474   */\n      dup5\n      dup2\n      mstore\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":8952:8989  Transfer(address(0), account, amount) */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap2\n        /* \"#utility.yul\":1422:1440   */\n      add\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":8952:8989  Transfer(address(0), account, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"Revolt.sol\":2046:2218  function mint(address to, uint256 amount) external onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/security/Pausable.sol\":2186:2301  function _pause() internal virtual whenNotPaused {... */\n    tag_260:\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      tag_379\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/security/Pausable.sol\":1239:1256  _requireNotPaused */\n      tag_173\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      jump\t// in\n    tag_379:\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/security/Pausable.sol\":2245:2252  _paused */\n      0x05\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/security/Pausable.sol\":2245:2259  _paused = true */\n      dup1\n      sload\n      not(shl(0xa0, 0xff))\n      and\n      shl(0xa0, 0x01)\n      or\n      swap1\n      sstore\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/security/Pausable.sol\":2274:2294  Paused(_msgSender()) */\n      0x62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/security/Pausable.sol\":2281:2293  _msgSender() */\n      tag_366\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n      swap1\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n      jump\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":7456:8244  function _transfer(address from, address to, uint256 amount) internal virtual {... */\n    tag_357:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":7552:7570  from != address(0) */\n      dup4\n      and\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":7544:7612  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_384\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":13067:13069   */\n      0x20\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":7544:7612  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":13049:13070   */\n      mstore\n        /* \"#utility.yul\":13106:13108   */\n      0x25\n        /* \"#utility.yul\":13086:13104   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":13079:13109   */\n      mstore\n        /* \"#utility.yul\":13145:13179   */\n      0x45524332303a207472616e736665722066726f6d20746865207a65726f206164\n        /* \"#utility.yul\":13125:13143   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":13118:13180   */\n      mstore\n      shl(0xd8, 0x6472657373)\n        /* \"#utility.yul\":13196:13214   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":13189:13224   */\n      mstore\n        /* \"#utility.yul\":13241:13260   */\n      0x84\n      add\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":7544:7612  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_154\n        /* \"#utility.yul\":12865:13266   */\n      jump\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":7544:7612  require(from != address(0), \"ERC20: transfer from the zero address\") */\n    tag_384:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":7630:7646  to != address(0) */\n      dup3\n      and\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":7622:7686  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_387\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":13473:13475   */\n      0x20\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":7622:7686  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":13455:13476   */\n      mstore\n        /* \"#utility.yul\":13512:13514   */\n      0x23\n        /* \"#utility.yul\":13492:13510   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":13485:13515   */\n      mstore\n        /* \"#utility.yul\":13551:13585   */\n      0x45524332303a207472616e7366657220746f20746865207a65726f2061646472\n        /* \"#utility.yul\":13531:13549   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":13524:13586   */\n      mstore\n      shl(0xe8, 0x657373)\n        /* \"#utility.yul\":13602:13620   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":13595:13628   */\n      mstore\n        /* \"#utility.yul\":13645:13664   */\n      0x84\n      add\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":7622:7686  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_154\n        /* \"#utility.yul\":13271:13670   */\n      jump\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":7622:7686  require(to != address(0), \"ERC20: transfer to the zero address\") */\n    tag_387:\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":7697:7735  _beforeTokenTransfer(from, to, amount) */\n      tag_390\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":7718:7722  from */\n      dup4\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":7724:7726  to */\n      dup4\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":7728:7734  amount */\n      dup4\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":7697:7717  _beforeTokenTransfer */\n      tag_373\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":7697:7735  _beforeTokenTransfer(from, to, amount) */\n      jump\t// in\n    tag_390:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":7768:7783  _balances[from] */\n      dup4\n      and\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":7746:7765  uint256 fromBalance */\n      0x00\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":7768:7783  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":7801:7822  fromBalance >= amount */\n      dup2\n      dup2\n      lt\n      iszero\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":7793:7865  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_391\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":13877:13879   */\n      0x20\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":7793:7865  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":13859:13880   */\n      mstore\n        /* \"#utility.yul\":13916:13918   */\n      0x26\n        /* \"#utility.yul\":13896:13914   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":13889:13919   */\n      mstore\n        /* \"#utility.yul\":13955:13989   */\n      0x45524332303a207472616e7366657220616d6f756e7420657863656564732062\n        /* \"#utility.yul\":13935:13953   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":13928:13990   */\n      mstore\n      shl(0xd0, 0x616c616e6365)\n        /* \"#utility.yul\":14006:14024   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":13999:14035   */\n      mstore\n        /* \"#utility.yul\":14052:14071   */\n      0x84\n      add\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":7793:7865  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_154\n        /* \"#utility.yul\":13675:14077   */\n      jump\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":7793:7865  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n    tag_391:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":7899:7914  _balances[from] */\n      dup5\n      dup2\n      and\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":7899:7908  _balances */\n      0x00\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":7899:7914  _balances[from] */\n      dup2\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":7917:7937  fromBalance - amount */\n      dup8\n      dup8\n      sub\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":7899:7937  _balances[from] = fromBalance - amount */\n      swap1\n      sstore\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":8114:8127  _balances[to] */\n      swap4\n      dup8\n      and\n      dup1\n      dup4\n      mstore\n      swap2\n      dup5\n      swap1\n      keccak256\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":8114:8137  _balances[to] += amount */\n      dup1\n      sload\n      dup8\n      add\n      swap1\n      sstore\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":8163:8189  Transfer(from, to, amount) */\n      swap3\n      mload\n        /* \"#utility.yul\":1449:1474   */\n      dup6\n      dup2\n      mstore\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":8114:8127  _balances[to] */\n      swap1\n      swap3\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":8163:8189  Transfer(from, to, amount) */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap2\n        /* \"#utility.yul\":1422:1440   */\n      add\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":8163:8189  Transfer(from, to, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":8200:8237  _afterTokenTransfer(from, to, amount) */\n      tag_250\n        /* \"Revolt.sol\":3809:4652  function _transfer(... */\n      jump\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/security/Pausable.sol\":1945:2051  function _requirePaused() internal view virtual {... */\n    tag_364:\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/security/Pausable.sol\":1685:1692  _paused */\n      sload(0x05)\n      shl(0xa0, 0x01)\n      swap1\n      div\n      0xff\n      and\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/security/Pausable.sol\":2003:2044  require(paused(), \"Pausable: not paused\") */\n      tag_195\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":14284:14286   */\n      0x20\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/security/Pausable.sol\":2003:2044  require(paused(), \"Pausable: not paused\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":14266:14287   */\n      mstore\n        /* \"#utility.yul\":14323:14325   */\n      0x14\n        /* \"#utility.yul\":14303:14321   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":14296:14326   */\n      mstore\n      shl(0x62, 0x14185d5cd8589b194e881b9bdd081c185d5cd959)\n        /* \"#utility.yul\":14342:14360   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":14335:14385   */\n      mstore\n        /* \"#utility.yul\":14402:14420   */\n      0x64\n      add\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/security/Pausable.sol\":2003:2044  require(paused(), \"Pausable: not paused\") */\n      tag_154\n        /* \"#utility.yul\":14082:14426   */\n      jump\n        /* \"Revolt.sol\":4916:5168  function _beforeTokenTransfer(... */\n    tag_373:\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/security/Pausable.sol\":1685:1692  _paused */\n      sload(0x05)\n      shl(0xa0, 0x01)\n      swap1\n      div\n      0xff\n      and\n        /* \"Revolt.sol\":5108:5117  !paused() */\n      iszero\n        /* \"Revolt.sol\":5100:5161  require(!paused(), \"RevoltCoin: token transfer while paused\") */\n      tag_360\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":14633:14635   */\n      0x20\n        /* \"Revolt.sol\":5100:5161  require(!paused(), \"RevoltCoin: token transfer while paused\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":14615:14636   */\n      mstore\n        /* \"#utility.yul\":14672:14674   */\n      0x27\n        /* \"#utility.yul\":14652:14670   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":14645:14675   */\n      mstore\n        /* \"#utility.yul\":14711:14745   */\n      0x5265766f6c74436f696e3a20746f6b656e207472616e73666572207768696c65\n        /* \"#utility.yul\":14691:14709   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":14684:14746   */\n      mstore\n      shl(0xca, 0x081c185d5cd959)\n        /* \"#utility.yul\":14762:14780   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":14755:14792   */\n      mstore\n        /* \"#utility.yul\":14809:14828   */\n      0x84\n      add\n        /* \"Revolt.sol\":5100:5161  require(!paused(), \"RevoltCoin: token transfer while paused\") */\n      tag_154\n        /* \"#utility.yul\":14431:14834   */\n      jump\n        /* \"#utility.yul\":14:432   */\n    tag_41:\n        /* \"#utility.yul\":163:165   */\n      0x20\n        /* \"#utility.yul\":152:161   */\n      dup2\n        /* \"#utility.yul\":145:166   */\n      mstore\n        /* \"#utility.yul\":126:130   */\n      0x00\n        /* \"#utility.yul\":195:201   */\n      dup3\n        /* \"#utility.yul\":189:202   */\n      mload\n        /* \"#utility.yul\":238:244   */\n      dup1\n        /* \"#utility.yul\":233:235   */\n      0x20\n        /* \"#utility.yul\":222:231   */\n      dup5\n        /* \"#utility.yul\":218:236   */\n      add\n        /* \"#utility.yul\":211:245   */\n      mstore\n        /* \"#utility.yul\":297:303   */\n      dup1\n        /* \"#utility.yul\":292:294   */\n      0x20\n        /* \"#utility.yul\":284:290   */\n      dup6\n        /* \"#utility.yul\":280:295   */\n      add\n        /* \"#utility.yul\":275:277   */\n      0x40\n        /* \"#utility.yul\":264:273   */\n      dup6\n        /* \"#utility.yul\":260:278   */\n      add\n        /* \"#utility.yul\":254:304   */\n      mcopy\n        /* \"#utility.yul\":353:354   */\n      0x00\n        /* \"#utility.yul\":348:350   */\n      0x40\n        /* \"#utility.yul\":339:345   */\n      dup3\n        /* \"#utility.yul\":328:337   */\n      dup6\n        /* \"#utility.yul\":324:346   */\n      add\n        /* \"#utility.yul\":320:351   */\n      add\n        /* \"#utility.yul\":313:355   */\n      mstore\n        /* \"#utility.yul\":423:425   */\n      0x40\n        /* \"#utility.yul\":416:418   */\n      0x1f\n        /* \"#utility.yul\":412:419   */\n      not\n        /* \"#utility.yul\":407:409   */\n      0x1f\n        /* \"#utility.yul\":399:405   */\n      dup4\n        /* \"#utility.yul\":395:410   */\n      add\n        /* \"#utility.yul\":391:420   */\n      and\n        /* \"#utility.yul\":380:389   */\n      dup5\n        /* \"#utility.yul\":376:421   */\n      add\n        /* \"#utility.yul\":372:426   */\n      add\n        /* \"#utility.yul\":364:426   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":14:432   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":437:610   */\n    tag_410:\n        /* \"#utility.yul\":505:525   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":554:585   */\n      dup2\n      and\n        /* \"#utility.yul\":544:586   */\n      dup2\n      eq\n        /* \"#utility.yul\":534:604   */\n      tag_416\n      jumpi\n        /* \"#utility.yul\":600:601   */\n      0x00\n        /* \"#utility.yul\":597:598   */\n      dup1\n        /* \"#utility.yul\":590:602   */\n      revert\n        /* \"#utility.yul\":534:604   */\n    tag_416:\n        /* \"#utility.yul\":437:610   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":615:915   */\n    tag_44:\n        /* \"#utility.yul\":683:689   */\n      0x00\n        /* \"#utility.yul\":691:697   */\n      dup1\n        /* \"#utility.yul\":744:746   */\n      0x40\n        /* \"#utility.yul\":732:741   */\n      dup4\n        /* \"#utility.yul\":723:730   */\n      dup6\n        /* \"#utility.yul\":719:742   */\n      sub\n        /* \"#utility.yul\":715:747   */\n      slt\n        /* \"#utility.yul\":712:764   */\n      iszero\n      tag_418\n      jumpi\n        /* \"#utility.yul\":760:761   */\n      0x00\n        /* \"#utility.yul\":757:758   */\n      dup1\n        /* \"#utility.yul\":750:762   */\n      revert\n        /* \"#utility.yul\":712:764   */\n    tag_418:\n        /* \"#utility.yul\":783:812   */\n      tag_419\n        /* \"#utility.yul\":802:811   */\n      dup4\n        /* \"#utility.yul\":783:812   */\n      tag_410\n      jump\t// in\n    tag_419:\n        /* \"#utility.yul\":773:812   */\n      swap5\n        /* \"#utility.yul\":881:883   */\n      0x20\n        /* \"#utility.yul\":866:884   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":853:885   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":615:915   */\n      jump\t// out\n        /* \"#utility.yul\":1112:1298   */\n    tag_50:\n        /* \"#utility.yul\":1171:1177   */\n      0x00\n        /* \"#utility.yul\":1224:1226   */\n      0x20\n        /* \"#utility.yul\":1212:1221   */\n      dup3\n        /* \"#utility.yul\":1203:1210   */\n      dup5\n        /* \"#utility.yul\":1199:1222   */\n      sub\n        /* \"#utility.yul\":1195:1227   */\n      slt\n        /* \"#utility.yul\":1192:1244   */\n      iszero\n      tag_422\n      jumpi\n        /* \"#utility.yul\":1240:1241   */\n      0x00\n        /* \"#utility.yul\":1237:1238   */\n      dup1\n        /* \"#utility.yul\":1230:1242   */\n      revert\n        /* \"#utility.yul\":1192:1244   */\n    tag_422:\n        /* \"#utility.yul\":1263:1292   */\n      tag_183\n        /* \"#utility.yul\":1282:1291   */\n      dup3\n        /* \"#utility.yul\":1263:1292   */\n      tag_410\n      jump\t// in\n        /* \"#utility.yul\":1485:1711   */\n    tag_58:\n        /* \"#utility.yul\":1544:1550   */\n      0x00\n        /* \"#utility.yul\":1597:1599   */\n      0x20\n        /* \"#utility.yul\":1585:1594   */\n      dup3\n        /* \"#utility.yul\":1576:1583   */\n      dup5\n        /* \"#utility.yul\":1572:1595   */\n      sub\n        /* \"#utility.yul\":1568:1600   */\n      slt\n        /* \"#utility.yul\":1565:1617   */\n      iszero\n      tag_426\n      jumpi\n        /* \"#utility.yul\":1613:1614   */\n      0x00\n        /* \"#utility.yul\":1610:1611   */\n      dup1\n        /* \"#utility.yul\":1603:1615   */\n      revert\n        /* \"#utility.yul\":1565:1617   */\n    tag_426:\n      pop\n        /* \"#utility.yul\":1658:1681   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":1485:1711   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1716:2090   */\n    tag_62:\n        /* \"#utility.yul\":1793:1799   */\n      0x00\n        /* \"#utility.yul\":1801:1807   */\n      dup1\n        /* \"#utility.yul\":1809:1815   */\n      0x00\n        /* \"#utility.yul\":1862:1864   */\n      0x60\n        /* \"#utility.yul\":1850:1859   */\n      dup5\n        /* \"#utility.yul\":1841:1848   */\n      dup7\n        /* \"#utility.yul\":1837:1860   */\n      sub\n        /* \"#utility.yul\":1833:1865   */\n      slt\n        /* \"#utility.yul\":1830:1882   */\n      iszero\n      tag_428\n      jumpi\n        /* \"#utility.yul\":1878:1879   */\n      0x00\n        /* \"#utility.yul\":1875:1876   */\n      dup1\n        /* \"#utility.yul\":1868:1880   */\n      revert\n        /* \"#utility.yul\":1830:1882   */\n    tag_428:\n        /* \"#utility.yul\":1901:1930   */\n      tag_429\n        /* \"#utility.yul\":1920:1929   */\n      dup5\n        /* \"#utility.yul\":1901:1930   */\n      tag_410\n      jump\t// in\n    tag_429:\n        /* \"#utility.yul\":1891:1930   */\n      swap3\n      pop\n        /* \"#utility.yul\":1949:1987   */\n      tag_430\n        /* \"#utility.yul\":1983:1985   */\n      0x20\n        /* \"#utility.yul\":1972:1981   */\n      dup6\n        /* \"#utility.yul\":1968:1986   */\n      add\n        /* \"#utility.yul\":1949:1987   */\n      tag_410\n      jump\t// in\n    tag_430:\n        /* \"#utility.yul\":1716:2090   */\n      swap3\n      swap6\n        /* \"#utility.yul\":1939:1987   */\n      swap3\n      swap5\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":2056:2058   */\n      0x40\n        /* \"#utility.yul\":2041:2059   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":2028:2060   */\n      calldataload\n      swap1\n        /* \"#utility.yul\":1716:2090   */\n      jump\t// out\n        /* \"#utility.yul\":2492:2859   */\n    tag_411:\n        /* \"#utility.yul\":2555:2563   */\n      0x00\n        /* \"#utility.yul\":2565:2571   */\n      dup1\n        /* \"#utility.yul\":2619:2622   */\n      dup4\n        /* \"#utility.yul\":2612:2616   */\n      0x1f\n        /* \"#utility.yul\":2604:2610   */\n      dup5\n        /* \"#utility.yul\":2600:2617   */\n      add\n        /* \"#utility.yul\":2596:2623   */\n      slt\n        /* \"#utility.yul\":2586:2641   */\n      tag_434\n      jumpi\n        /* \"#utility.yul\":2637:2638   */\n      0x00\n        /* \"#utility.yul\":2634:2635   */\n      dup1\n        /* \"#utility.yul\":2627:2639   */\n      revert\n        /* \"#utility.yul\":2586:2641   */\n    tag_434:\n      pop\n        /* \"#utility.yul\":2660:2680   */\n      dup2\n      calldataload\n        /* \"#utility.yul\":2703:2721   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2692:2722   */\n      dup2\n      gt\n        /* \"#utility.yul\":2689:2739   */\n      iszero\n      tag_435\n      jumpi\n        /* \"#utility.yul\":2735:2736   */\n      0x00\n        /* \"#utility.yul\":2732:2733   */\n      dup1\n        /* \"#utility.yul\":2725:2737   */\n      revert\n        /* \"#utility.yul\":2689:2739   */\n    tag_435:\n        /* \"#utility.yul\":2772:2776   */\n      0x20\n        /* \"#utility.yul\":2764:2770   */\n      dup4\n        /* \"#utility.yul\":2760:2777   */\n      add\n        /* \"#utility.yul\":2748:2777   */\n      swap2\n      pop\n        /* \"#utility.yul\":2832:2835   */\n      dup4\n        /* \"#utility.yul\":2825:2829   */\n      0x20\n        /* \"#utility.yul\":2815:2821   */\n      dup3\n        /* \"#utility.yul\":2812:2813   */\n      0x05\n        /* \"#utility.yul\":2808:2822   */\n      shl\n        /* \"#utility.yul\":2800:2806   */\n      dup6\n        /* \"#utility.yul\":2796:2823   */\n      add\n        /* \"#utility.yul\":2792:2830   */\n      add\n        /* \"#utility.yul\":2789:2836   */\n      gt\n        /* \"#utility.yul\":2786:2853   */\n      iszero\n      tag_436\n      jumpi\n        /* \"#utility.yul\":2849:2850   */\n      0x00\n        /* \"#utility.yul\":2846:2847   */\n      dup1\n        /* \"#utility.yul\":2839:2851   */\n      revert\n        /* \"#utility.yul\":2786:2853   */\n    tag_436:\n        /* \"#utility.yul\":2492:2859   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2864:3632   */\n    tag_93:\n        /* \"#utility.yul\":2986:2992   */\n      0x00\n        /* \"#utility.yul\":2994:3000   */\n      dup1\n        /* \"#utility.yul\":3002:3008   */\n      0x00\n        /* \"#utility.yul\":3010:3016   */\n      dup1\n        /* \"#utility.yul\":3063:3065   */\n      0x40\n        /* \"#utility.yul\":3051:3060   */\n      dup6\n        /* \"#utility.yul\":3042:3049   */\n      dup8\n        /* \"#utility.yul\":3038:3061   */\n      sub\n        /* \"#utility.yul\":3034:3066   */\n      slt\n        /* \"#utility.yul\":3031:3083   */\n      iszero\n      tag_438\n      jumpi\n        /* \"#utility.yul\":3079:3080   */\n      0x00\n        /* \"#utility.yul\":3076:3077   */\n      dup1\n        /* \"#utility.yul\":3069:3081   */\n      revert\n        /* \"#utility.yul\":3031:3083   */\n    tag_438:\n        /* \"#utility.yul\":3119:3128   */\n      dup5\n        /* \"#utility.yul\":3106:3129   */\n      calldataload\n        /* \"#utility.yul\":3152:3170   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3144:3150   */\n      dup2\n        /* \"#utility.yul\":3141:3171   */\n      gt\n        /* \"#utility.yul\":3138:3188   */\n      iszero\n      tag_439\n      jumpi\n        /* \"#utility.yul\":3184:3185   */\n      0x00\n        /* \"#utility.yul\":3181:3182   */\n      dup1\n        /* \"#utility.yul\":3174:3186   */\n      revert\n        /* \"#utility.yul\":3138:3188   */\n    tag_439:\n        /* \"#utility.yul\":3223:3293   */\n      tag_440\n        /* \"#utility.yul\":3285:3292   */\n      dup8\n        /* \"#utility.yul\":3276:3282   */\n      dup3\n        /* \"#utility.yul\":3265:3274   */\n      dup9\n        /* \"#utility.yul\":3261:3283   */\n      add\n        /* \"#utility.yul\":3223:3293   */\n      tag_411\n      jump\t// in\n    tag_440:\n        /* \"#utility.yul\":3312:3320   */\n      swap1\n      swap6\n      pop\n        /* \"#utility.yul\":3197:3293   */\n      swap4\n      pop\n      pop\n        /* \"#utility.yul\":3400:3402   */\n      0x20\n        /* \"#utility.yul\":3385:3403   */\n      dup6\n      add\n        /* \"#utility.yul\":3372:3404   */\n      calldataload\n        /* \"#utility.yul\":3429:3447   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3416:3448   */\n      dup2\n      gt\n        /* \"#utility.yul\":3413:3465   */\n      iszero\n      tag_441\n      jumpi\n        /* \"#utility.yul\":3461:3462   */\n      0x00\n        /* \"#utility.yul\":3458:3459   */\n      dup1\n        /* \"#utility.yul\":3451:3463   */\n      revert\n        /* \"#utility.yul\":3413:3465   */\n    tag_441:\n        /* \"#utility.yul\":3500:3572   */\n      tag_442\n        /* \"#utility.yul\":3564:3571   */\n      dup8\n        /* \"#utility.yul\":3553:3561   */\n      dup3\n        /* \"#utility.yul\":3542:3551   */\n      dup9\n        /* \"#utility.yul\":3538:3562   */\n      add\n        /* \"#utility.yul\":3500:3572   */\n      tag_411\n      jump\t// in\n    tag_442:\n        /* \"#utility.yul\":2864:3632   */\n      swap6\n      swap9\n      swap5\n      swap8\n      pop\n        /* \"#utility.yul\":3591:3599   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":2864:3632   */\n      jump\t// out\n        /* \"#utility.yul\":3637:3897   */\n    tag_125:\n        /* \"#utility.yul\":3705:3711   */\n      0x00\n        /* \"#utility.yul\":3713:3719   */\n      dup1\n        /* \"#utility.yul\":3766:3768   */\n      0x40\n        /* \"#utility.yul\":3754:3763   */\n      dup4\n        /* \"#utility.yul\":3745:3752   */\n      dup6\n        /* \"#utility.yul\":3741:3764   */\n      sub\n        /* \"#utility.yul\":3737:3769   */\n      slt\n        /* \"#utility.yul\":3734:3786   */\n      iszero\n      tag_444\n      jumpi\n        /* \"#utility.yul\":3782:3783   */\n      0x00\n        /* \"#utility.yul\":3779:3780   */\n      dup1\n        /* \"#utility.yul\":3772:3784   */\n      revert\n        /* \"#utility.yul\":3734:3786   */\n    tag_444:\n        /* \"#utility.yul\":3805:3834   */\n      tag_445\n        /* \"#utility.yul\":3824:3833   */\n      dup4\n        /* \"#utility.yul\":3805:3834   */\n      tag_410\n      jump\t// in\n    tag_445:\n        /* \"#utility.yul\":3795:3834   */\n      swap2\n      pop\n        /* \"#utility.yul\":3853:3891   */\n      tag_446\n        /* \"#utility.yul\":3887:3889   */\n      0x20\n        /* \"#utility.yul\":3876:3885   */\n      dup5\n        /* \"#utility.yul\":3872:3890   */\n      add\n        /* \"#utility.yul\":3853:3891   */\n      tag_410\n      jump\t// in\n    tag_446:\n        /* \"#utility.yul\":3843:3891   */\n      swap1\n      pop\n        /* \"#utility.yul\":3637:3897   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3902:4282   */\n    tag_139:\n        /* \"#utility.yul\":3981:3982   */\n      0x01\n        /* \"#utility.yul\":3977:3989   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":4024:4036   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":4045:4106   */\n      tag_448\n      jumpi\n        /* \"#utility.yul\":4099:4103   */\n      0x7f\n        /* \"#utility.yul\":4091:4097   */\n      dup3\n        /* \"#utility.yul\":4087:4104   */\n      and\n        /* \"#utility.yul\":4077:4104   */\n      swap2\n      pop\n        /* \"#utility.yul\":4045:4106   */\n    tag_448:\n        /* \"#utility.yul\":4152:4154   */\n      0x20\n        /* \"#utility.yul\":4144:4150   */\n      dup3\n        /* \"#utility.yul\":4141:4155   */\n      lt\n        /* \"#utility.yul\":4121:4139   */\n      dup2\n        /* \"#utility.yul\":4118:4156   */\n      sub\n        /* \"#utility.yul\":4115:4276   */\n      tag_449\n      jumpi\n        /* \"#utility.yul\":4198:4208   */\n      0x4e487b71\n        /* \"#utility.yul\":4193:4196   */\n      0xe0\n        /* \"#utility.yul\":4189:4209   */\n      shl\n        /* \"#utility.yul\":4186:4187   */\n      0x00\n        /* \"#utility.yul\":4179:4210   */\n      mstore\n        /* \"#utility.yul\":4233:4237   */\n      0x22\n        /* \"#utility.yul\":4230:4231   */\n      0x04\n        /* \"#utility.yul\":4223:4238   */\n      mstore\n        /* \"#utility.yul\":4261:4265   */\n      0x24\n        /* \"#utility.yul\":4258:4259   */\n      0x00\n        /* \"#utility.yul\":4251:4266   */\n      revert\n        /* \"#utility.yul\":4115:4276   */\n    tag_449:\n      pop\n        /* \"#utility.yul\":3902:4282   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5596:5723   */\n    tag_412:\n        /* \"#utility.yul\":5657:5667   */\n      0x4e487b71\n        /* \"#utility.yul\":5652:5655   */\n      0xe0\n        /* \"#utility.yul\":5648:5668   */\n      shl\n        /* \"#utility.yul\":5645:5646   */\n      0x00\n        /* \"#utility.yul\":5638:5669   */\n      mstore\n        /* \"#utility.yul\":5688:5692   */\n      0x11\n        /* \"#utility.yul\":5685:5686   */\n      0x04\n        /* \"#utility.yul\":5678:5693   */\n      mstore\n        /* \"#utility.yul\":5712:5716   */\n      0x24\n        /* \"#utility.yul\":5709:5710   */\n      0x00\n        /* \"#utility.yul\":5702:5717   */\n      revert\n        /* \"#utility.yul\":5728:5853   */\n    tag_191:\n        /* \"#utility.yul\":5793:5802   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":5814:5824   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":5811:5847   */\n      iszero\n      tag_144\n      jumpi\n        /* \"#utility.yul\":5827:5845   */\n      tag_144\n      tag_412\n      jump\t// in\n        /* \"#utility.yul\":7015:7142   */\n    tag_228:\n        /* \"#utility.yul\":7076:7086   */\n      0x4e487b71\n        /* \"#utility.yul\":7071:7074   */\n      0xe0\n        /* \"#utility.yul\":7067:7087   */\n      shl\n        /* \"#utility.yul\":7064:7065   */\n      0x00\n        /* \"#utility.yul\":7057:7088   */\n      mstore\n        /* \"#utility.yul\":7107:7111   */\n      0x32\n        /* \"#utility.yul\":7104:7105   */\n      0x04\n        /* \"#utility.yul\":7097:7112   */\n      mstore\n        /* \"#utility.yul\":7131:7135   */\n      0x24\n        /* \"#utility.yul\":7128:7129   */\n      0x00\n        /* \"#utility.yul\":7121:7136   */\n      revert\n        /* \"#utility.yul\":11977:12145   */\n    tag_351:\n        /* \"#utility.yul\":12050:12059   */\n      dup1\n      dup3\n      mul\n        /* \"#utility.yul\":12081:12090   */\n      dup2\n      iszero\n        /* \"#utility.yul\":12098:12113   */\n      dup3\n      dup3\n      div\n        /* \"#utility.yul\":12092:12114   */\n      dup5\n      eq\n        /* \"#utility.yul\":12078:12115   */\n      or\n        /* \"#utility.yul\":12068:12139   */\n      tag_144\n      jumpi\n        /* \"#utility.yul\":12119:12137   */\n      tag_144\n      tag_412\n      jump\t// in\n        /* \"#utility.yul\":12150:12367   */\n    tag_353:\n        /* \"#utility.yul\":12190:12191   */\n      0x00\n        /* \"#utility.yul\":12216:12217   */\n      dup3\n        /* \"#utility.yul\":12206:12338   */\n      tag_479\n      jumpi\n        /* \"#utility.yul\":12260:12270   */\n      0x4e487b71\n        /* \"#utility.yul\":12255:12258   */\n      0xe0\n        /* \"#utility.yul\":12251:12271   */\n      shl\n        /* \"#utility.yul\":12248:12249   */\n      0x00\n        /* \"#utility.yul\":12241:12272   */\n      mstore\n        /* \"#utility.yul\":12295:12299   */\n      0x12\n        /* \"#utility.yul\":12292:12293   */\n      0x04\n        /* \"#utility.yul\":12285:12300   */\n      mstore\n        /* \"#utility.yul\":12323:12327   */\n      0x24\n        /* \"#utility.yul\":12320:12321   */\n      0x00\n        /* \"#utility.yul\":12313:12328   */\n      revert\n        /* \"#utility.yul\":12206:12338   */\n    tag_479:\n      pop\n        /* \"#utility.yul\":12352:12361   */\n      div\n      swap1\n        /* \"#utility.yul\":12150:12367   */\n      jump\t// out\n        /* \"#utility.yul\":12372:12500   */\n    tag_355:\n        /* \"#utility.yul\":12439:12448   */\n      dup2\n      dup2\n      sub\n        /* \"#utility.yul\":12460:12471   */\n      dup2\n      dup2\n      gt\n        /* \"#utility.yul\":12457:12494   */\n      iszero\n      tag_144\n      jumpi\n        /* \"#utility.yul\":12474:12492   */\n      tag_144\n      tag_412\n      jump\t// in\n\n    auxdata: 0xa26469706673582212206177a80f47e19f1f67f937535d0fa502028a4161efa47f80aeac788d78c4264764736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_109": {
									"entryPoint": null,
									"id": 109,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_597": {
									"entryPoint": null,
									"id": 597,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_713": {
									"entryPoint": null,
									"id": 713,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_813": {
									"entryPoint": null,
									"id": 813,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_904": {
									"entryPoint": null,
									"id": 904,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_afterTokenTransfer_1445": {
									"entryPoint": null,
									"id": 1445,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_beforeTokenTransfer_1434": {
									"entryPoint": null,
									"id": 1434,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_beforeTokenTransfer_410": {
									"entryPoint": 617,
									"id": 410,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_mint_1263": {
									"entryPoint": 412,
									"id": 1263,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_1561": {
									"entryPoint": 327,
									"id": 1561,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_685": {
									"entryPoint": 331,
									"id": 685,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@decimals_934": {
									"entryPoint": null,
									"id": 934,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_614": {
									"entryPoint": null,
									"id": 614,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@paused_738": {
									"entryPoint": null,
									"id": 738,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9d18d00bc92e4e4805f27a8b4b8bfb1589f27d087a4178b7035486f9b373e88c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 1364,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_helper": {
									"entryPoint": 1091,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 2
								},
								"checked_exp_t_uint256_t_uint8": {
									"entryPoint": 1320,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_unsigned": {
									"entryPoint": 1158,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 1341,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 810,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 885,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 754,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 1071,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 734,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:5469:8",
										"nodeType": "YulBlock",
										"src": "0:5469:8",
										"statements": [
											{
												"nativeSrc": "6:3:8",
												"nodeType": "YulBlock",
												"src": "6:3:8",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "46:95:8",
													"nodeType": "YulBlock",
													"src": "46:95:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "63:1:8",
																		"nodeType": "YulLiteral",
																		"src": "63:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "70:3:8",
																				"nodeType": "YulLiteral",
																				"src": "70:3:8",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "75:10:8",
																				"nodeType": "YulLiteral",
																				"src": "75:10:8",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "66:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "66:3:8"
																		},
																		"nativeSrc": "66:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "66:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "56:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "56:6:8"
																},
																"nativeSrc": "56:31:8",
																"nodeType": "YulFunctionCall",
																"src": "56:31:8"
															},
															"nativeSrc": "56:31:8",
															"nodeType": "YulExpressionStatement",
															"src": "56:31:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "103:1:8",
																		"nodeType": "YulLiteral",
																		"src": "103:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "106:4:8",
																		"nodeType": "YulLiteral",
																		"src": "106:4:8",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "96:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "96:6:8"
																},
																"nativeSrc": "96:15:8",
																"nodeType": "YulFunctionCall",
																"src": "96:15:8"
															},
															"nativeSrc": "96:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "96:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "127:1:8",
																		"nodeType": "YulLiteral",
																		"src": "127:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "130:4:8",
																		"nodeType": "YulLiteral",
																		"src": "130:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "120:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "120:6:8"
																},
																"nativeSrc": "120:15:8",
																"nodeType": "YulFunctionCall",
																"src": "120:15:8"
															},
															"nativeSrc": "120:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "120:15:8"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "14:127:8",
												"nodeType": "YulFunctionDefinition",
												"src": "14:127:8"
											},
											{
												"body": {
													"nativeSrc": "201:325:8",
													"nodeType": "YulBlock",
													"src": "201:325:8",
													"statements": [
														{
															"nativeSrc": "211:22:8",
															"nodeType": "YulAssignment",
															"src": "211:22:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "225:1:8",
																		"nodeType": "YulLiteral",
																		"src": "225:1:8",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "228:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "228:4:8"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "221:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "221:3:8"
																},
																"nativeSrc": "221:12:8",
																"nodeType": "YulFunctionCall",
																"src": "221:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "211:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "211:6:8"
																}
															]
														},
														{
															"nativeSrc": "242:38:8",
															"nodeType": "YulVariableDeclaration",
															"src": "242:38:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "272:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "272:4:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "278:1:8",
																		"nodeType": "YulLiteral",
																		"src": "278:1:8",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "268:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "268:3:8"
																},
																"nativeSrc": "268:12:8",
																"nodeType": "YulFunctionCall",
																"src": "268:12:8"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "246:18:8",
																	"nodeType": "YulTypedName",
																	"src": "246:18:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "319:31:8",
																"nodeType": "YulBlock",
																"src": "319:31:8",
																"statements": [
																	{
																		"nativeSrc": "321:27:8",
																		"nodeType": "YulAssignment",
																		"src": "321:27:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "335:6:8",
																					"nodeType": "YulIdentifier",
																					"src": "335:6:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "343:4:8",
																					"nodeType": "YulLiteral",
																					"src": "343:4:8",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "331:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "331:3:8"
																			},
																			"nativeSrc": "331:17:8",
																			"nodeType": "YulFunctionCall",
																			"src": "331:17:8"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "321:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "321:6:8"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "299:18:8",
																		"nodeType": "YulIdentifier",
																		"src": "299:18:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "292:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "292:6:8"
																},
																"nativeSrc": "292:26:8",
																"nodeType": "YulFunctionCall",
																"src": "292:26:8"
															},
															"nativeSrc": "289:61:8",
															"nodeType": "YulIf",
															"src": "289:61:8"
														},
														{
															"body": {
																"nativeSrc": "409:111:8",
																"nodeType": "YulBlock",
																"src": "409:111:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "430:1:8",
																					"nodeType": "YulLiteral",
																					"src": "430:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "437:3:8",
																							"nodeType": "YulLiteral",
																							"src": "437:3:8",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "442:10:8",
																							"nodeType": "YulLiteral",
																							"src": "442:10:8",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "433:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "433:3:8"
																					},
																					"nativeSrc": "433:20:8",
																					"nodeType": "YulFunctionCall",
																					"src": "433:20:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "423:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "423:6:8"
																			},
																			"nativeSrc": "423:31:8",
																			"nodeType": "YulFunctionCall",
																			"src": "423:31:8"
																		},
																		"nativeSrc": "423:31:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "423:31:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "474:1:8",
																					"nodeType": "YulLiteral",
																					"src": "474:1:8",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "477:4:8",
																					"nodeType": "YulLiteral",
																					"src": "477:4:8",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "467:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "467:6:8"
																			},
																			"nativeSrc": "467:15:8",
																			"nodeType": "YulFunctionCall",
																			"src": "467:15:8"
																		},
																		"nativeSrc": "467:15:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "467:15:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "502:1:8",
																					"nodeType": "YulLiteral",
																					"src": "502:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "505:4:8",
																					"nodeType": "YulLiteral",
																					"src": "505:4:8",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "495:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "495:6:8"
																			},
																			"nativeSrc": "495:15:8",
																			"nodeType": "YulFunctionCall",
																			"src": "495:15:8"
																		},
																		"nativeSrc": "495:15:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "495:15:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "365:18:8",
																		"nodeType": "YulIdentifier",
																		"src": "365:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "388:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "388:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "396:2:8",
																				"nodeType": "YulLiteral",
																				"src": "396:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "385:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "385:2:8"
																		},
																		"nativeSrc": "385:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "385:14:8"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "362:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "362:2:8"
																},
																"nativeSrc": "362:38:8",
																"nodeType": "YulFunctionCall",
																"src": "362:38:8"
															},
															"nativeSrc": "359:161:8",
															"nodeType": "YulIf",
															"src": "359:161:8"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "146:380:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "181:4:8",
														"nodeType": "YulTypedName",
														"src": "181:4:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "190:6:8",
														"nodeType": "YulTypedName",
														"src": "190:6:8",
														"type": ""
													}
												],
												"src": "146:380:8"
											},
											{
												"body": {
													"nativeSrc": "587:65:8",
													"nodeType": "YulBlock",
													"src": "587:65:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "604:1:8",
																		"nodeType": "YulLiteral",
																		"src": "604:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "607:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "607:3:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "597:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "597:6:8"
																},
																"nativeSrc": "597:14:8",
																"nodeType": "YulFunctionCall",
																"src": "597:14:8"
															},
															"nativeSrc": "597:14:8",
															"nodeType": "YulExpressionStatement",
															"src": "597:14:8"
														},
														{
															"nativeSrc": "620:26:8",
															"nodeType": "YulAssignment",
															"src": "620:26:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "638:1:8",
																		"nodeType": "YulLiteral",
																		"src": "638:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "641:4:8",
																		"nodeType": "YulLiteral",
																		"src": "641:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "628:9:8",
																	"nodeType": "YulIdentifier",
																	"src": "628:9:8"
																},
																"nativeSrc": "628:18:8",
																"nodeType": "YulFunctionCall",
																"src": "628:18:8"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "620:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "620:4:8"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nativeSrc": "531:121:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "570:3:8",
														"nodeType": "YulTypedName",
														"src": "570:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "578:4:8",
														"nodeType": "YulTypedName",
														"src": "578:4:8",
														"type": ""
													}
												],
												"src": "531:121:8"
											},
											{
												"body": {
													"nativeSrc": "738:437:8",
													"nodeType": "YulBlock",
													"src": "738:437:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "771:398:8",
																"nodeType": "YulBlock",
																"src": "771:398:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "792:1:8",
																					"nodeType": "YulLiteral",
																					"src": "792:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"name": "array",
																					"nativeSrc": "795:5:8",
																					"nodeType": "YulIdentifier",
																					"src": "795:5:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "785:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "785:6:8"
																			},
																			"nativeSrc": "785:16:8",
																			"nodeType": "YulFunctionCall",
																			"src": "785:16:8"
																		},
																		"nativeSrc": "785:16:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "785:16:8"
																	},
																	{
																		"nativeSrc": "814:30:8",
																		"nodeType": "YulVariableDeclaration",
																		"src": "814:30:8",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "836:1:8",
																					"nodeType": "YulLiteral",
																					"src": "836:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "839:4:8",
																					"nodeType": "YulLiteral",
																					"src": "839:4:8",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nativeSrc": "826:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "826:9:8"
																			},
																			"nativeSrc": "826:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "826:18:8"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nativeSrc": "818:4:8",
																				"nodeType": "YulTypedName",
																				"src": "818:4:8",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "857:57:8",
																		"nodeType": "YulVariableDeclaration",
																		"src": "857:57:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "880:4:8",
																					"nodeType": "YulIdentifier",
																					"src": "880:4:8"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "890:1:8",
																							"nodeType": "YulLiteral",
																							"src": "890:1:8",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nativeSrc": "897:10:8",
																									"nodeType": "YulIdentifier",
																									"src": "897:10:8"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "909:2:8",
																									"nodeType": "YulLiteral",
																									"src": "909:2:8",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "893:3:8",
																								"nodeType": "YulIdentifier",
																								"src": "893:3:8"
																							},
																							"nativeSrc": "893:19:8",
																							"nodeType": "YulFunctionCall",
																							"src": "893:19:8"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "886:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "886:3:8"
																					},
																					"nativeSrc": "886:27:8",
																					"nodeType": "YulFunctionCall",
																					"src": "886:27:8"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "876:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "876:3:8"
																			},
																			"nativeSrc": "876:38:8",
																			"nodeType": "YulFunctionCall",
																			"src": "876:38:8"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "861:11:8",
																				"nodeType": "YulTypedName",
																				"src": "861:11:8",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "951:23:8",
																			"nodeType": "YulBlock",
																			"src": "951:23:8",
																			"statements": [
																				{
																					"nativeSrc": "953:19:8",
																					"nodeType": "YulAssignment",
																					"src": "953:19:8",
																					"value": {
																						"name": "data",
																						"nativeSrc": "968:4:8",
																						"nodeType": "YulIdentifier",
																						"src": "968:4:8"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "953:11:8",
																							"nodeType": "YulIdentifier",
																							"src": "953:11:8"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "933:10:8",
																					"nodeType": "YulIdentifier",
																					"src": "933:10:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "945:4:8",
																					"nodeType": "YulLiteral",
																					"src": "945:4:8",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "930:2:8",
																				"nodeType": "YulIdentifier",
																				"src": "930:2:8"
																			},
																			"nativeSrc": "930:20:8",
																			"nodeType": "YulFunctionCall",
																			"src": "930:20:8"
																		},
																		"nativeSrc": "927:47:8",
																		"nodeType": "YulIf",
																		"src": "927:47:8"
																	},
																	{
																		"nativeSrc": "987:41:8",
																		"nodeType": "YulVariableDeclaration",
																		"src": "987:41:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "1001:4:8",
																					"nodeType": "YulIdentifier",
																					"src": "1001:4:8"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "1011:1:8",
																							"nodeType": "YulLiteral",
																							"src": "1011:1:8",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "1018:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "1018:3:8"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "1023:2:8",
																									"nodeType": "YulLiteral",
																									"src": "1023:2:8",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "1014:3:8",
																								"nodeType": "YulIdentifier",
																								"src": "1014:3:8"
																							},
																							"nativeSrc": "1014:12:8",
																							"nodeType": "YulFunctionCall",
																							"src": "1014:12:8"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "1007:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "1007:3:8"
																					},
																					"nativeSrc": "1007:20:8",
																					"nodeType": "YulFunctionCall",
																					"src": "1007:20:8"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "997:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "997:3:8"
																			},
																			"nativeSrc": "997:31:8",
																			"nodeType": "YulFunctionCall",
																			"src": "997:31:8"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nativeSrc": "991:2:8",
																				"nodeType": "YulTypedName",
																				"src": "991:2:8",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "1041:24:8",
																		"nodeType": "YulVariableDeclaration",
																		"src": "1041:24:8",
																		"value": {
																			"name": "deleteStart",
																			"nativeSrc": "1054:11:8",
																			"nodeType": "YulIdentifier",
																			"src": "1054:11:8"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nativeSrc": "1045:5:8",
																				"nodeType": "YulTypedName",
																				"src": "1045:5:8",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "1139:20:8",
																			"nodeType": "YulBlock",
																			"src": "1139:20:8",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "1148:5:8",
																								"nodeType": "YulIdentifier",
																								"src": "1148:5:8"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1155:1:8",
																								"nodeType": "YulLiteral",
																								"src": "1155:1:8",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nativeSrc": "1141:6:8",
																							"nodeType": "YulIdentifier",
																							"src": "1141:6:8"
																						},
																						"nativeSrc": "1141:16:8",
																						"nodeType": "YulFunctionCall",
																						"src": "1141:16:8"
																					},
																					"nativeSrc": "1141:16:8",
																					"nodeType": "YulExpressionStatement",
																					"src": "1141:16:8"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "1089:5:8",
																					"nodeType": "YulIdentifier",
																					"src": "1089:5:8"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "1096:2:8",
																					"nodeType": "YulIdentifier",
																					"src": "1096:2:8"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "1086:2:8",
																				"nodeType": "YulIdentifier",
																				"src": "1086:2:8"
																			},
																			"nativeSrc": "1086:13:8",
																			"nodeType": "YulFunctionCall",
																			"src": "1086:13:8"
																		},
																		"nativeSrc": "1078:81:8",
																		"nodeType": "YulForLoop",
																		"post": {
																			"nativeSrc": "1100:26:8",
																			"nodeType": "YulBlock",
																			"src": "1100:26:8",
																			"statements": [
																				{
																					"nativeSrc": "1102:22:8",
																					"nodeType": "YulAssignment",
																					"src": "1102:22:8",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "1115:5:8",
																								"nodeType": "YulIdentifier",
																								"src": "1115:5:8"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1122:1:8",
																								"nodeType": "YulLiteral",
																								"src": "1122:1:8",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "1111:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "1111:3:8"
																						},
																						"nativeSrc": "1111:13:8",
																						"nodeType": "YulFunctionCall",
																						"src": "1111:13:8"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nativeSrc": "1102:5:8",
																							"nodeType": "YulIdentifier",
																							"src": "1102:5:8"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nativeSrc": "1082:3:8",
																			"nodeType": "YulBlock",
																			"src": "1082:3:8",
																			"statements": []
																		},
																		"src": "1078:81:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "754:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "754:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "759:2:8",
																		"nodeType": "YulLiteral",
																		"src": "759:2:8",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "751:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "751:2:8"
																},
																"nativeSrc": "751:11:8",
																"nodeType": "YulFunctionCall",
																"src": "751:11:8"
															},
															"nativeSrc": "748:421:8",
															"nodeType": "YulIf",
															"src": "748:421:8"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nativeSrc": "657:518:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "710:5:8",
														"nodeType": "YulTypedName",
														"src": "710:5:8",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "717:3:8",
														"nodeType": "YulTypedName",
														"src": "717:3:8",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "722:10:8",
														"nodeType": "YulTypedName",
														"src": "722:10:8",
														"type": ""
													}
												],
												"src": "657:518:8"
											},
											{
												"body": {
													"nativeSrc": "1265:81:8",
													"nodeType": "YulBlock",
													"src": "1265:81:8",
													"statements": [
														{
															"nativeSrc": "1275:65:8",
															"nodeType": "YulAssignment",
															"src": "1275:65:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "1290:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "1290:4:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "1308:1:8",
																										"nodeType": "YulLiteral",
																										"src": "1308:1:8",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nativeSrc": "1311:3:8",
																										"nodeType": "YulIdentifier",
																										"src": "1311:3:8"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "1304:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "1304:3:8"
																								},
																								"nativeSrc": "1304:11:8",
																								"nodeType": "YulFunctionCall",
																								"src": "1304:11:8"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "1321:1:8",
																										"nodeType": "YulLiteral",
																										"src": "1321:1:8",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nativeSrc": "1317:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "1317:3:8"
																								},
																								"nativeSrc": "1317:6:8",
																								"nodeType": "YulFunctionCall",
																								"src": "1317:6:8"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nativeSrc": "1300:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "1300:3:8"
																						},
																						"nativeSrc": "1300:24:8",
																						"nodeType": "YulFunctionCall",
																						"src": "1300:24:8"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "1296:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "1296:3:8"
																				},
																				"nativeSrc": "1296:29:8",
																				"nodeType": "YulFunctionCall",
																				"src": "1296:29:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1286:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1286:3:8"
																		},
																		"nativeSrc": "1286:40:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1286:40:8"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "1332:1:8",
																				"nodeType": "YulLiteral",
																				"src": "1332:1:8",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "1335:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "1335:3:8"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "1328:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1328:3:8"
																		},
																		"nativeSrc": "1328:11:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1328:11:8"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1283:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "1283:2:8"
																},
																"nativeSrc": "1283:57:8",
																"nodeType": "YulFunctionCall",
																"src": "1283:57:8"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "1275:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "1275:4:8"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "1180:166:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "1242:4:8",
														"nodeType": "YulTypedName",
														"src": "1242:4:8",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "1248:3:8",
														"nodeType": "YulTypedName",
														"src": "1248:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "1256:4:8",
														"nodeType": "YulTypedName",
														"src": "1256:4:8",
														"type": ""
													}
												],
												"src": "1180:166:8"
											},
											{
												"body": {
													"nativeSrc": "1447:1203:8",
													"nodeType": "YulBlock",
													"src": "1447:1203:8",
													"statements": [
														{
															"nativeSrc": "1457:24:8",
															"nodeType": "YulVariableDeclaration",
															"src": "1457:24:8",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "1477:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "1477:3:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1471:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "1471:5:8"
																},
																"nativeSrc": "1471:10:8",
																"nodeType": "YulFunctionCall",
																"src": "1471:10:8"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "1461:6:8",
																	"nodeType": "YulTypedName",
																	"src": "1461:6:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1524:22:8",
																"nodeType": "YulBlock",
																"src": "1524:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1526:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "1526:16:8"
																			},
																			"nativeSrc": "1526:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "1526:18:8"
																		},
																		"nativeSrc": "1526:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "1526:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "1496:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "1496:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "1512:2:8",
																						"nodeType": "YulLiteral",
																						"src": "1512:2:8",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1516:1:8",
																						"nodeType": "YulLiteral",
																						"src": "1516:1:8",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "1508:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "1508:3:8"
																				},
																				"nativeSrc": "1508:10:8",
																				"nodeType": "YulFunctionCall",
																				"src": "1508:10:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1520:1:8",
																				"nodeType": "YulLiteral",
																				"src": "1520:1:8",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1504:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1504:3:8"
																		},
																		"nativeSrc": "1504:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1504:18:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1493:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "1493:2:8"
																},
																"nativeSrc": "1493:30:8",
																"nodeType": "YulFunctionCall",
																"src": "1493:30:8"
															},
															"nativeSrc": "1490:56:8",
															"nodeType": "YulIf",
															"src": "1490:56:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "1599:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "1599:4:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "1637:4:8",
																						"nodeType": "YulIdentifier",
																						"src": "1637:4:8"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "1631:5:8",
																					"nodeType": "YulIdentifier",
																					"src": "1631:5:8"
																				},
																				"nativeSrc": "1631:11:8",
																				"nodeType": "YulFunctionCall",
																				"src": "1631:11:8"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nativeSrc": "1605:25:8",
																			"nodeType": "YulIdentifier",
																			"src": "1605:25:8"
																		},
																		"nativeSrc": "1605:38:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1605:38:8"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "1645:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "1645:6:8"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nativeSrc": "1555:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "1555:43:8"
																},
																"nativeSrc": "1555:97:8",
																"nodeType": "YulFunctionCall",
																"src": "1555:97:8"
															},
															"nativeSrc": "1555:97:8",
															"nodeType": "YulExpressionStatement",
															"src": "1555:97:8"
														},
														{
															"nativeSrc": "1661:18:8",
															"nodeType": "YulVariableDeclaration",
															"src": "1661:18:8",
															"value": {
																"kind": "number",
																"nativeSrc": "1678:1:8",
																"nodeType": "YulLiteral",
																"src": "1678:1:8",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "1665:9:8",
																	"nodeType": "YulTypedName",
																	"src": "1665:9:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1688:17:8",
															"nodeType": "YulAssignment",
															"src": "1688:17:8",
															"value": {
																"kind": "number",
																"nativeSrc": "1701:4:8",
																"nodeType": "YulLiteral",
																"src": "1701:4:8",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "1688:9:8",
																	"nodeType": "YulIdentifier",
																	"src": "1688:9:8"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "1751:642:8",
																		"nodeType": "YulBlock",
																		"src": "1751:642:8",
																		"statements": [
																			{
																				"nativeSrc": "1765:35:8",
																				"nodeType": "YulVariableDeclaration",
																				"src": "1765:35:8",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "1784:6:8",
																							"nodeType": "YulIdentifier",
																							"src": "1784:6:8"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "1796:2:8",
																									"nodeType": "YulLiteral",
																									"src": "1796:2:8",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "1792:3:8",
																								"nodeType": "YulIdentifier",
																								"src": "1792:3:8"
																							},
																							"nativeSrc": "1792:7:8",
																							"nodeType": "YulFunctionCall",
																							"src": "1792:7:8"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "1780:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "1780:3:8"
																					},
																					"nativeSrc": "1780:20:8",
																					"nodeType": "YulFunctionCall",
																					"src": "1780:20:8"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "1769:7:8",
																						"nodeType": "YulTypedName",
																						"src": "1769:7:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "1813:49:8",
																				"nodeType": "YulVariableDeclaration",
																				"src": "1813:49:8",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "1857:4:8",
																							"nodeType": "YulIdentifier",
																							"src": "1857:4:8"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nativeSrc": "1827:29:8",
																						"nodeType": "YulIdentifier",
																						"src": "1827:29:8"
																					},
																					"nativeSrc": "1827:35:8",
																					"nodeType": "YulFunctionCall",
																					"src": "1827:35:8"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "1817:6:8",
																						"nodeType": "YulTypedName",
																						"src": "1817:6:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "1875:10:8",
																				"nodeType": "YulVariableDeclaration",
																				"src": "1875:10:8",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "1884:1:8",
																					"nodeType": "YulLiteral",
																					"src": "1884:1:8",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "1879:1:8",
																						"nodeType": "YulTypedName",
																						"src": "1879:1:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "1955:165:8",
																					"nodeType": "YulBlock",
																					"src": "1955:165:8",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "1980:6:8",
																										"nodeType": "YulIdentifier",
																										"src": "1980:6:8"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "1998:3:8",
																														"nodeType": "YulIdentifier",
																														"src": "1998:3:8"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "2003:9:8",
																														"nodeType": "YulIdentifier",
																														"src": "2003:9:8"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "1994:3:8",
																													"nodeType": "YulIdentifier",
																													"src": "1994:3:8"
																												},
																												"nativeSrc": "1994:19:8",
																												"nodeType": "YulFunctionCall",
																												"src": "1994:19:8"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "1988:5:8",
																											"nodeType": "YulIdentifier",
																											"src": "1988:5:8"
																										},
																										"nativeSrc": "1988:26:8",
																										"nodeType": "YulFunctionCall",
																										"src": "1988:26:8"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "1973:6:8",
																									"nodeType": "YulIdentifier",
																									"src": "1973:6:8"
																								},
																								"nativeSrc": "1973:42:8",
																								"nodeType": "YulFunctionCall",
																								"src": "1973:42:8"
																							},
																							"nativeSrc": "1973:42:8",
																							"nodeType": "YulExpressionStatement",
																							"src": "1973:42:8"
																						},
																						{
																							"nativeSrc": "2032:24:8",
																							"nodeType": "YulAssignment",
																							"src": "2032:24:8",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "2046:6:8",
																										"nodeType": "YulIdentifier",
																										"src": "2046:6:8"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "2054:1:8",
																										"nodeType": "YulLiteral",
																										"src": "2054:1:8",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "2042:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "2042:3:8"
																								},
																								"nativeSrc": "2042:14:8",
																								"nodeType": "YulFunctionCall",
																								"src": "2042:14:8"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "2032:6:8",
																									"nodeType": "YulIdentifier",
																									"src": "2032:6:8"
																								}
																							]
																						},
																						{
																							"nativeSrc": "2073:33:8",
																							"nodeType": "YulAssignment",
																							"src": "2073:33:8",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "2090:9:8",
																										"nodeType": "YulIdentifier",
																										"src": "2090:9:8"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "2101:4:8",
																										"nodeType": "YulLiteral",
																										"src": "2101:4:8",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "2086:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "2086:3:8"
																								},
																								"nativeSrc": "2086:20:8",
																								"nodeType": "YulFunctionCall",
																								"src": "2086:20:8"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "2073:9:8",
																									"nodeType": "YulIdentifier",
																									"src": "2073:9:8"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "1909:1:8",
																							"nodeType": "YulIdentifier",
																							"src": "1909:1:8"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "1912:7:8",
																							"nodeType": "YulIdentifier",
																							"src": "1912:7:8"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "1906:2:8",
																						"nodeType": "YulIdentifier",
																						"src": "1906:2:8"
																					},
																					"nativeSrc": "1906:14:8",
																					"nodeType": "YulFunctionCall",
																					"src": "1906:14:8"
																				},
																				"nativeSrc": "1898:222:8",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "1921:21:8",
																					"nodeType": "YulBlock",
																					"src": "1921:21:8",
																					"statements": [
																						{
																							"nativeSrc": "1923:17:8",
																							"nodeType": "YulAssignment",
																							"src": "1923:17:8",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "1932:1:8",
																										"nodeType": "YulIdentifier",
																										"src": "1932:1:8"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "1935:4:8",
																										"nodeType": "YulLiteral",
																										"src": "1935:4:8",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "1928:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "1928:3:8"
																								},
																								"nativeSrc": "1928:12:8",
																								"nodeType": "YulFunctionCall",
																								"src": "1928:12:8"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "1923:1:8",
																									"nodeType": "YulIdentifier",
																									"src": "1923:1:8"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "1902:3:8",
																					"nodeType": "YulBlock",
																					"src": "1902:3:8",
																					"statements": []
																				},
																				"src": "1898:222:8"
																			},
																			{
																				"body": {
																					"nativeSrc": "2168:166:8",
																					"nodeType": "YulBlock",
																					"src": "2168:166:8",
																					"statements": [
																						{
																							"nativeSrc": "2186:43:8",
																							"nodeType": "YulVariableDeclaration",
																							"src": "2186:43:8",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "2213:3:8",
																												"nodeType": "YulIdentifier",
																												"src": "2213:3:8"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "2218:9:8",
																												"nodeType": "YulIdentifier",
																												"src": "2218:9:8"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "2209:3:8",
																											"nodeType": "YulIdentifier",
																											"src": "2209:3:8"
																										},
																										"nativeSrc": "2209:19:8",
																										"nodeType": "YulFunctionCall",
																										"src": "2209:19:8"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "2203:5:8",
																									"nodeType": "YulIdentifier",
																									"src": "2203:5:8"
																								},
																								"nativeSrc": "2203:26:8",
																								"nodeType": "YulFunctionCall",
																								"src": "2203:26:8"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "2190:9:8",
																									"nodeType": "YulTypedName",
																									"src": "2190:9:8",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "2253:6:8",
																										"nodeType": "YulIdentifier",
																										"src": "2253:6:8"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "2265:9:8",
																												"nodeType": "YulIdentifier",
																												"src": "2265:9:8"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nativeSrc": "2292:1:8",
																																				"nodeType": "YulLiteral",
																																				"src": "2292:1:8",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nativeSrc": "2295:6:8",
																																				"nodeType": "YulIdentifier",
																																				"src": "2295:6:8"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nativeSrc": "2288:3:8",
																																			"nodeType": "YulIdentifier",
																																			"src": "2288:3:8"
																																		},
																																		"nativeSrc": "2288:14:8",
																																		"nodeType": "YulFunctionCall",
																																		"src": "2288:14:8"
																																	},
																																	{
																																		"kind": "number",
																																		"nativeSrc": "2304:3:8",
																																		"nodeType": "YulLiteral",
																																		"src": "2304:3:8",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nativeSrc": "2284:3:8",
																																	"nodeType": "YulIdentifier",
																																	"src": "2284:3:8"
																																},
																																"nativeSrc": "2284:24:8",
																																"nodeType": "YulFunctionCall",
																																"src": "2284:24:8"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nativeSrc": "2314:1:8",
																																		"nodeType": "YulLiteral",
																																		"src": "2314:1:8",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nativeSrc": "2310:3:8",
																																	"nodeType": "YulIdentifier",
																																	"src": "2310:3:8"
																																},
																																"nativeSrc": "2310:6:8",
																																"nodeType": "YulFunctionCall",
																																"src": "2310:6:8"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nativeSrc": "2280:3:8",
																															"nodeType": "YulIdentifier",
																															"src": "2280:3:8"
																														},
																														"nativeSrc": "2280:37:8",
																														"nodeType": "YulFunctionCall",
																														"src": "2280:37:8"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nativeSrc": "2276:3:8",
																													"nodeType": "YulIdentifier",
																													"src": "2276:3:8"
																												},
																												"nativeSrc": "2276:42:8",
																												"nodeType": "YulFunctionCall",
																												"src": "2276:42:8"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nativeSrc": "2261:3:8",
																											"nodeType": "YulIdentifier",
																											"src": "2261:3:8"
																										},
																										"nativeSrc": "2261:58:8",
																										"nodeType": "YulFunctionCall",
																										"src": "2261:58:8"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "2246:6:8",
																									"nodeType": "YulIdentifier",
																									"src": "2246:6:8"
																								},
																								"nativeSrc": "2246:74:8",
																								"nodeType": "YulFunctionCall",
																								"src": "2246:74:8"
																							},
																							"nativeSrc": "2246:74:8",
																							"nodeType": "YulExpressionStatement",
																							"src": "2246:74:8"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "2139:7:8",
																							"nodeType": "YulIdentifier",
																							"src": "2139:7:8"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "2148:6:8",
																							"nodeType": "YulIdentifier",
																							"src": "2148:6:8"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "2136:2:8",
																						"nodeType": "YulIdentifier",
																						"src": "2136:2:8"
																					},
																					"nativeSrc": "2136:19:8",
																					"nodeType": "YulFunctionCall",
																					"src": "2136:19:8"
																				},
																				"nativeSrc": "2133:201:8",
																				"nodeType": "YulIf",
																				"src": "2133:201:8"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "2354:4:8",
																							"nodeType": "YulIdentifier",
																							"src": "2354:4:8"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "2368:1:8",
																											"nodeType": "YulLiteral",
																											"src": "2368:1:8",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nativeSrc": "2371:6:8",
																											"nodeType": "YulIdentifier",
																											"src": "2371:6:8"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nativeSrc": "2364:3:8",
																										"nodeType": "YulIdentifier",
																										"src": "2364:3:8"
																									},
																									"nativeSrc": "2364:14:8",
																									"nodeType": "YulFunctionCall",
																									"src": "2364:14:8"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "2380:1:8",
																									"nodeType": "YulLiteral",
																									"src": "2380:1:8",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "2360:3:8",
																								"nodeType": "YulIdentifier",
																								"src": "2360:3:8"
																							},
																							"nativeSrc": "2360:22:8",
																							"nodeType": "YulFunctionCall",
																							"src": "2360:22:8"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "2347:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "2347:6:8"
																					},
																					"nativeSrc": "2347:36:8",
																					"nodeType": "YulFunctionCall",
																					"src": "2347:36:8"
																				},
																				"nativeSrc": "2347:36:8",
																				"nodeType": "YulExpressionStatement",
																				"src": "2347:36:8"
																			}
																		]
																	},
																	"nativeSrc": "1744:649:8",
																	"nodeType": "YulCase",
																	"src": "1744:649:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1749:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1749:1:8",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "2410:234:8",
																		"nodeType": "YulBlock",
																		"src": "2410:234:8",
																		"statements": [
																			{
																				"nativeSrc": "2424:14:8",
																				"nodeType": "YulVariableDeclaration",
																				"src": "2424:14:8",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "2437:1:8",
																					"nodeType": "YulLiteral",
																					"src": "2437:1:8",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "2428:5:8",
																						"nodeType": "YulTypedName",
																						"src": "2428:5:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "2473:67:8",
																					"nodeType": "YulBlock",
																					"src": "2473:67:8",
																					"statements": [
																						{
																							"nativeSrc": "2491:35:8",
																							"nodeType": "YulAssignment",
																							"src": "2491:35:8",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "2510:3:8",
																												"nodeType": "YulIdentifier",
																												"src": "2510:3:8"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "2515:9:8",
																												"nodeType": "YulIdentifier",
																												"src": "2515:9:8"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "2506:3:8",
																											"nodeType": "YulIdentifier",
																											"src": "2506:3:8"
																										},
																										"nativeSrc": "2506:19:8",
																										"nodeType": "YulFunctionCall",
																										"src": "2506:19:8"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "2500:5:8",
																									"nodeType": "YulIdentifier",
																									"src": "2500:5:8"
																								},
																								"nativeSrc": "2500:26:8",
																								"nodeType": "YulFunctionCall",
																								"src": "2500:26:8"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "2491:5:8",
																									"nodeType": "YulIdentifier",
																									"src": "2491:5:8"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "2454:6:8",
																					"nodeType": "YulIdentifier",
																					"src": "2454:6:8"
																				},
																				"nativeSrc": "2451:89:8",
																				"nodeType": "YulIf",
																				"src": "2451:89:8"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "2560:4:8",
																							"nodeType": "YulIdentifier",
																							"src": "2560:4:8"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "2619:5:8",
																									"nodeType": "YulIdentifier",
																									"src": "2619:5:8"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "2626:6:8",
																									"nodeType": "YulIdentifier",
																									"src": "2626:6:8"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "2566:52:8",
																								"nodeType": "YulIdentifier",
																								"src": "2566:52:8"
																							},
																							"nativeSrc": "2566:67:8",
																							"nodeType": "YulFunctionCall",
																							"src": "2566:67:8"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "2553:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "2553:6:8"
																					},
																					"nativeSrc": "2553:81:8",
																					"nodeType": "YulFunctionCall",
																					"src": "2553:81:8"
																				},
																				"nativeSrc": "2553:81:8",
																				"nodeType": "YulExpressionStatement",
																				"src": "2553:81:8"
																			}
																		]
																	},
																	"nativeSrc": "2402:242:8",
																	"nodeType": "YulCase",
																	"src": "2402:242:8",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "1724:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "1724:6:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1732:2:8",
																		"nodeType": "YulLiteral",
																		"src": "1732:2:8",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1721:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "1721:2:8"
																},
																"nativeSrc": "1721:14:8",
																"nodeType": "YulFunctionCall",
																"src": "1721:14:8"
															},
															"nativeSrc": "1714:930:8",
															"nodeType": "YulSwitch",
															"src": "1714:930:8"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "1351:1299:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "1432:4:8",
														"nodeType": "YulTypedName",
														"src": "1432:4:8",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "1438:3:8",
														"nodeType": "YulTypedName",
														"src": "1438:3:8",
														"type": ""
													}
												],
												"src": "1351:1299:8"
											},
											{
												"body": {
													"nativeSrc": "2687:95:8",
													"nodeType": "YulBlock",
													"src": "2687:95:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2704:1:8",
																		"nodeType": "YulLiteral",
																		"src": "2704:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "2711:3:8",
																				"nodeType": "YulLiteral",
																				"src": "2711:3:8",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2716:10:8",
																				"nodeType": "YulLiteral",
																				"src": "2716:10:8",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "2707:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "2707:3:8"
																		},
																		"nativeSrc": "2707:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2707:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2697:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2697:6:8"
																},
																"nativeSrc": "2697:31:8",
																"nodeType": "YulFunctionCall",
																"src": "2697:31:8"
															},
															"nativeSrc": "2697:31:8",
															"nodeType": "YulExpressionStatement",
															"src": "2697:31:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2744:1:8",
																		"nodeType": "YulLiteral",
																		"src": "2744:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2747:4:8",
																		"nodeType": "YulLiteral",
																		"src": "2747:4:8",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2737:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2737:6:8"
																},
																"nativeSrc": "2737:15:8",
																"nodeType": "YulFunctionCall",
																"src": "2737:15:8"
															},
															"nativeSrc": "2737:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "2737:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2768:1:8",
																		"nodeType": "YulLiteral",
																		"src": "2768:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2771:4:8",
																		"nodeType": "YulLiteral",
																		"src": "2771:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2761:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2761:6:8"
																},
																"nativeSrc": "2761:15:8",
																"nodeType": "YulFunctionCall",
																"src": "2761:15:8"
															},
															"nativeSrc": "2761:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "2761:15:8"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "2655:127:8",
												"nodeType": "YulFunctionDefinition",
												"src": "2655:127:8"
											},
											{
												"body": {
													"nativeSrc": "2856:306:8",
													"nodeType": "YulBlock",
													"src": "2856:306:8",
													"statements": [
														{
															"nativeSrc": "2866:10:8",
															"nodeType": "YulAssignment",
															"src": "2866:10:8",
															"value": {
																"kind": "number",
																"nativeSrc": "2875:1:8",
																"nodeType": "YulLiteral",
																"src": "2875:1:8",
																"type": "",
																"value": "1"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "2866:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "2866:5:8"
																}
															]
														},
														{
															"nativeSrc": "2885:13:8",
															"nodeType": "YulAssignment",
															"src": "2885:13:8",
															"value": {
																"name": "_base",
																"nativeSrc": "2893:5:8",
																"nodeType": "YulIdentifier",
																"src": "2893:5:8"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "2885:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "2885:4:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2943:213:8",
																"nodeType": "YulBlock",
																"src": "2943:213:8",
																"statements": [
																	{
																		"body": {
																			"nativeSrc": "2985:22:8",
																			"nodeType": "YulBlock",
																			"src": "2985:22:8",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nativeSrc": "2987:16:8",
																							"nodeType": "YulIdentifier",
																							"src": "2987:16:8"
																						},
																						"nativeSrc": "2987:18:8",
																						"nodeType": "YulFunctionCall",
																						"src": "2987:18:8"
																					},
																					"nativeSrc": "2987:18:8",
																					"nodeType": "YulExpressionStatement",
																					"src": "2987:18:8"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "2963:4:8",
																					"nodeType": "YulIdentifier",
																					"src": "2963:4:8"
																				},
																				{
																					"arguments": [
																						{
																							"name": "max",
																							"nativeSrc": "2973:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "2973:3:8"
																						},
																						{
																							"name": "base",
																							"nativeSrc": "2978:4:8",
																							"nodeType": "YulIdentifier",
																							"src": "2978:4:8"
																						}
																					],
																					"functionName": {
																						"name": "div",
																						"nativeSrc": "2969:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "2969:3:8"
																					},
																					"nativeSrc": "2969:14:8",
																					"nodeType": "YulFunctionCall",
																					"src": "2969:14:8"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "2960:2:8",
																				"nodeType": "YulIdentifier",
																				"src": "2960:2:8"
																			},
																			"nativeSrc": "2960:24:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2960:24:8"
																		},
																		"nativeSrc": "2957:50:8",
																		"nodeType": "YulIf",
																		"src": "2957:50:8"
																	},
																	{
																		"body": {
																			"nativeSrc": "3040:29:8",
																			"nodeType": "YulBlock",
																			"src": "3040:29:8",
																			"statements": [
																				{
																					"nativeSrc": "3042:25:8",
																					"nodeType": "YulAssignment",
																					"src": "3042:25:8",
																					"value": {
																						"arguments": [
																							{
																								"name": "power",
																								"nativeSrc": "3055:5:8",
																								"nodeType": "YulIdentifier",
																								"src": "3055:5:8"
																							},
																							{
																								"name": "base",
																								"nativeSrc": "3062:4:8",
																								"nodeType": "YulIdentifier",
																								"src": "3062:4:8"
																							}
																						],
																						"functionName": {
																							"name": "mul",
																							"nativeSrc": "3051:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "3051:3:8"
																						},
																						"nativeSrc": "3051:16:8",
																						"nodeType": "YulFunctionCall",
																						"src": "3051:16:8"
																					},
																					"variableNames": [
																						{
																							"name": "power",
																							"nativeSrc": "3042:5:8",
																							"nodeType": "YulIdentifier",
																							"src": "3042:5:8"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nativeSrc": "3027:8:8",
																					"nodeType": "YulIdentifier",
																					"src": "3027:8:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3037:1:8",
																					"nodeType": "YulLiteral",
																					"src": "3037:1:8",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "3023:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "3023:3:8"
																			},
																			"nativeSrc": "3023:16:8",
																			"nodeType": "YulFunctionCall",
																			"src": "3023:16:8"
																		},
																		"nativeSrc": "3020:49:8",
																		"nodeType": "YulIf",
																		"src": "3020:49:8"
																	},
																	{
																		"nativeSrc": "3082:23:8",
																		"nodeType": "YulAssignment",
																		"src": "3082:23:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "3094:4:8",
																					"nodeType": "YulIdentifier",
																					"src": "3094:4:8"
																				},
																				{
																					"name": "base",
																					"nativeSrc": "3100:4:8",
																					"nodeType": "YulIdentifier",
																					"src": "3100:4:8"
																				}
																			],
																			"functionName": {
																				"name": "mul",
																				"nativeSrc": "3090:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "3090:3:8"
																			},
																			"nativeSrc": "3090:15:8",
																			"nodeType": "YulFunctionCall",
																			"src": "3090:15:8"
																		},
																		"variableNames": [
																			{
																				"name": "base",
																				"nativeSrc": "3082:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "3082:4:8"
																			}
																		]
																	},
																	{
																		"nativeSrc": "3118:28:8",
																		"nodeType": "YulAssignment",
																		"src": "3118:28:8",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3134:1:8",
																					"nodeType": "YulLiteral",
																					"src": "3134:1:8",
																					"type": "",
																					"value": "1"
																				},
																				{
																					"name": "exponent",
																					"nativeSrc": "3137:8:8",
																					"nodeType": "YulIdentifier",
																					"src": "3137:8:8"
																				}
																			],
																			"functionName": {
																				"name": "shr",
																				"nativeSrc": "3130:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "3130:3:8"
																			},
																			"nativeSrc": "3130:16:8",
																			"nodeType": "YulFunctionCall",
																			"src": "3130:16:8"
																		},
																		"variableNames": [
																			{
																				"name": "exponent",
																				"nativeSrc": "3118:8:8",
																				"nodeType": "YulIdentifier",
																				"src": "3118:8:8"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "2918:8:8",
																		"nodeType": "YulIdentifier",
																		"src": "2918:8:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2928:1:8",
																		"nodeType": "YulLiteral",
																		"src": "2928:1:8",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2915:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "2915:2:8"
																},
																"nativeSrc": "2915:15:8",
																"nodeType": "YulFunctionCall",
																"src": "2915:15:8"
															},
															"nativeSrc": "2907:249:8",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "2931:3:8",
																"nodeType": "YulBlock",
																"src": "2931:3:8",
																"statements": []
															},
															"pre": {
																"nativeSrc": "2911:3:8",
																"nodeType": "YulBlock",
																"src": "2911:3:8",
																"statements": []
															},
															"src": "2907:249:8"
														}
													]
												},
												"name": "checked_exp_helper",
												"nativeSrc": "2787:375:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "_base",
														"nativeSrc": "2815:5:8",
														"nodeType": "YulTypedName",
														"src": "2815:5:8",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "2822:8:8",
														"nodeType": "YulTypedName",
														"src": "2822:8:8",
														"type": ""
													},
													{
														"name": "max",
														"nativeSrc": "2832:3:8",
														"nodeType": "YulTypedName",
														"src": "2832:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "2840:5:8",
														"nodeType": "YulTypedName",
														"src": "2840:5:8",
														"type": ""
													},
													{
														"name": "base",
														"nativeSrc": "2847:4:8",
														"nodeType": "YulTypedName",
														"src": "2847:4:8",
														"type": ""
													}
												],
												"src": "2787:375:8"
											},
											{
												"body": {
													"nativeSrc": "3226:843:8",
													"nodeType": "YulBlock",
													"src": "3226:843:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "3264:52:8",
																"nodeType": "YulBlock",
																"src": "3264:52:8",
																"statements": [
																	{
																		"nativeSrc": "3278:10:8",
																		"nodeType": "YulAssignment",
																		"src": "3278:10:8",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "3287:1:8",
																			"nodeType": "YulLiteral",
																			"src": "3287:1:8",
																			"type": "",
																			"value": "1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "3278:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "3278:5:8"
																			}
																		]
																	},
																	{
																		"nativeSrc": "3301:5:8",
																		"nodeType": "YulLeave",
																		"src": "3301:5:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "3246:8:8",
																		"nodeType": "YulIdentifier",
																		"src": "3246:8:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3239:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3239:6:8"
																},
																"nativeSrc": "3239:16:8",
																"nodeType": "YulFunctionCall",
																"src": "3239:16:8"
															},
															"nativeSrc": "3236:80:8",
															"nodeType": "YulIf",
															"src": "3236:80:8"
														},
														{
															"body": {
																"nativeSrc": "3349:52:8",
																"nodeType": "YulBlock",
																"src": "3349:52:8",
																"statements": [
																	{
																		"nativeSrc": "3363:10:8",
																		"nodeType": "YulAssignment",
																		"src": "3363:10:8",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "3372:1:8",
																			"nodeType": "YulLiteral",
																			"src": "3372:1:8",
																			"type": "",
																			"value": "0"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "3363:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "3363:5:8"
																			}
																		]
																	},
																	{
																		"nativeSrc": "3386:5:8",
																		"nodeType": "YulLeave",
																		"src": "3386:5:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "3335:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "3335:4:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3328:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3328:6:8"
																},
																"nativeSrc": "3328:12:8",
																"nodeType": "YulFunctionCall",
																"src": "3328:12:8"
															},
															"nativeSrc": "3325:76:8",
															"nodeType": "YulIf",
															"src": "3325:76:8"
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "3437:52:8",
																		"nodeType": "YulBlock",
																		"src": "3437:52:8",
																		"statements": [
																			{
																				"nativeSrc": "3451:10:8",
																				"nodeType": "YulAssignment",
																				"src": "3451:10:8",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "3460:1:8",
																					"nodeType": "YulLiteral",
																					"src": "3460:1:8",
																					"type": "",
																					"value": "1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "3451:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "3451:5:8"
																					}
																				]
																			},
																			{
																				"nativeSrc": "3474:5:8",
																				"nodeType": "YulLeave",
																				"src": "3474:5:8"
																			}
																		]
																	},
																	"nativeSrc": "3430:59:8",
																	"nodeType": "YulCase",
																	"src": "3430:59:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3435:1:8",
																		"nodeType": "YulLiteral",
																		"src": "3435:1:8",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "3505:167:8",
																		"nodeType": "YulBlock",
																		"src": "3505:167:8",
																		"statements": [
																			{
																				"body": {
																					"nativeSrc": "3540:22:8",
																					"nodeType": "YulBlock",
																					"src": "3540:22:8",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nativeSrc": "3542:16:8",
																									"nodeType": "YulIdentifier",
																									"src": "3542:16:8"
																								},
																								"nativeSrc": "3542:18:8",
																								"nodeType": "YulFunctionCall",
																								"src": "3542:18:8"
																							},
																							"nativeSrc": "3542:18:8",
																							"nodeType": "YulExpressionStatement",
																							"src": "3542:18:8"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nativeSrc": "3525:8:8",
																							"nodeType": "YulIdentifier",
																							"src": "3525:8:8"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "3535:3:8",
																							"nodeType": "YulLiteral",
																							"src": "3535:3:8",
																							"type": "",
																							"value": "255"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nativeSrc": "3522:2:8",
																						"nodeType": "YulIdentifier",
																						"src": "3522:2:8"
																					},
																					"nativeSrc": "3522:17:8",
																					"nodeType": "YulFunctionCall",
																					"src": "3522:17:8"
																				},
																				"nativeSrc": "3519:43:8",
																				"nodeType": "YulIf",
																				"src": "3519:43:8"
																			},
																			{
																				"nativeSrc": "3575:25:8",
																				"nodeType": "YulAssignment",
																				"src": "3575:25:8",
																				"value": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nativeSrc": "3588:8:8",
																							"nodeType": "YulIdentifier",
																							"src": "3588:8:8"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "3598:1:8",
																							"nodeType": "YulLiteral",
																							"src": "3598:1:8",
																							"type": "",
																							"value": "1"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "3584:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "3584:3:8"
																					},
																					"nativeSrc": "3584:16:8",
																					"nodeType": "YulFunctionCall",
																					"src": "3584:16:8"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "3575:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "3575:5:8"
																					}
																				]
																			},
																			{
																				"nativeSrc": "3613:11:8",
																				"nodeType": "YulVariableDeclaration",
																				"src": "3613:11:8",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "3623:1:8",
																					"nodeType": "YulLiteral",
																					"src": "3623:1:8",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "_1",
																						"nativeSrc": "3617:2:8",
																						"nodeType": "YulTypedName",
																						"src": "3617:2:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "3637:7:8",
																				"nodeType": "YulAssignment",
																				"src": "3637:7:8",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "3643:1:8",
																					"nodeType": "YulLiteral",
																					"src": "3643:1:8",
																					"type": "",
																					"value": "0"
																				},
																				"variableNames": [
																					{
																						"name": "_1",
																						"nativeSrc": "3637:2:8",
																						"nodeType": "YulIdentifier",
																						"src": "3637:2:8"
																					}
																				]
																			},
																			{
																				"nativeSrc": "3657:5:8",
																				"nodeType": "YulLeave",
																				"src": "3657:5:8"
																			}
																		]
																	},
																	"nativeSrc": "3498:174:8",
																	"nodeType": "YulCase",
																	"src": "3498:174:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3503:1:8",
																		"nodeType": "YulLiteral",
																		"src": "3503:1:8",
																		"type": "",
																		"value": "2"
																	}
																}
															],
															"expression": {
																"name": "base",
																"nativeSrc": "3417:4:8",
																"nodeType": "YulIdentifier",
																"src": "3417:4:8"
															},
															"nativeSrc": "3410:262:8",
															"nodeType": "YulSwitch",
															"src": "3410:262:8"
														},
														{
															"body": {
																"nativeSrc": "3770:114:8",
																"nodeType": "YulBlock",
																"src": "3770:114:8",
																"statements": [
																	{
																		"nativeSrc": "3784:28:8",
																		"nodeType": "YulAssignment",
																		"src": "3784:28:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "3797:4:8",
																					"nodeType": "YulIdentifier",
																					"src": "3797:4:8"
																				},
																				{
																					"name": "exponent",
																					"nativeSrc": "3803:8:8",
																					"nodeType": "YulIdentifier",
																					"src": "3803:8:8"
																				}
																			],
																			"functionName": {
																				"name": "exp",
																				"nativeSrc": "3793:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "3793:3:8"
																			},
																			"nativeSrc": "3793:19:8",
																			"nodeType": "YulFunctionCall",
																			"src": "3793:19:8"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "3784:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "3784:5:8"
																			}
																		]
																	},
																	{
																		"nativeSrc": "3825:11:8",
																		"nodeType": "YulVariableDeclaration",
																		"src": "3825:11:8",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "3835:1:8",
																			"nodeType": "YulLiteral",
																			"src": "3835:1:8",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "_2",
																				"nativeSrc": "3829:2:8",
																				"nodeType": "YulTypedName",
																				"src": "3829:2:8",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "3849:7:8",
																		"nodeType": "YulAssignment",
																		"src": "3849:7:8",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "3855:1:8",
																			"nodeType": "YulLiteral",
																			"src": "3855:1:8",
																			"type": "",
																			"value": "0"
																		},
																		"variableNames": [
																			{
																				"name": "_2",
																				"nativeSrc": "3849:2:8",
																				"nodeType": "YulIdentifier",
																				"src": "3849:2:8"
																			}
																		]
																	},
																	{
																		"nativeSrc": "3869:5:8",
																		"nodeType": "YulLeave",
																		"src": "3869:5:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "3694:4:8",
																						"nodeType": "YulIdentifier",
																						"src": "3694:4:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3700:2:8",
																						"nodeType": "YulLiteral",
																						"src": "3700:2:8",
																						"type": "",
																						"value": "11"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "3691:2:8",
																					"nodeType": "YulIdentifier",
																					"src": "3691:2:8"
																				},
																				"nativeSrc": "3691:12:8",
																				"nodeType": "YulFunctionCall",
																				"src": "3691:12:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "3708:8:8",
																						"nodeType": "YulIdentifier",
																						"src": "3708:8:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3718:2:8",
																						"nodeType": "YulLiteral",
																						"src": "3718:2:8",
																						"type": "",
																						"value": "78"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "3705:2:8",
																					"nodeType": "YulIdentifier",
																					"src": "3705:2:8"
																				},
																				"nativeSrc": "3705:16:8",
																				"nodeType": "YulFunctionCall",
																				"src": "3705:16:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3687:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3687:3:8"
																		},
																		"nativeSrc": "3687:35:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3687:35:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "3731:4:8",
																						"nodeType": "YulIdentifier",
																						"src": "3731:4:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3737:3:8",
																						"nodeType": "YulLiteral",
																						"src": "3737:3:8",
																						"type": "",
																						"value": "307"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "3728:2:8",
																					"nodeType": "YulIdentifier",
																					"src": "3728:2:8"
																				},
																				"nativeSrc": "3728:13:8",
																				"nodeType": "YulFunctionCall",
																				"src": "3728:13:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "3746:8:8",
																						"nodeType": "YulIdentifier",
																						"src": "3746:8:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3756:2:8",
																						"nodeType": "YulLiteral",
																						"src": "3756:2:8",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "3743:2:8",
																					"nodeType": "YulIdentifier",
																					"src": "3743:2:8"
																				},
																				"nativeSrc": "3743:16:8",
																				"nodeType": "YulFunctionCall",
																				"src": "3743:16:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3724:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3724:3:8"
																		},
																		"nativeSrc": "3724:36:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3724:36:8"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "3684:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "3684:2:8"
																},
																"nativeSrc": "3684:77:8",
																"nodeType": "YulFunctionCall",
																"src": "3684:77:8"
															},
															"nativeSrc": "3681:203:8",
															"nodeType": "YulIf",
															"src": "3681:203:8"
														},
														{
															"nativeSrc": "3893:65:8",
															"nodeType": "YulVariableDeclaration",
															"src": "3893:65:8",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "3935:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "3935:4:8"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "3941:8:8",
																		"nodeType": "YulIdentifier",
																		"src": "3941:8:8"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "3955:1:8",
																				"nodeType": "YulLiteral",
																				"src": "3955:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "3951:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3951:3:8"
																		},
																		"nativeSrc": "3951:6:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3951:6:8"
																	}
																],
																"functionName": {
																	"name": "checked_exp_helper",
																	"nativeSrc": "3916:18:8",
																	"nodeType": "YulIdentifier",
																	"src": "3916:18:8"
																},
																"nativeSrc": "3916:42:8",
																"nodeType": "YulFunctionCall",
																"src": "3916:42:8"
															},
															"variables": [
																{
																	"name": "power_1",
																	"nativeSrc": "3897:7:8",
																	"nodeType": "YulTypedName",
																	"src": "3897:7:8",
																	"type": ""
																},
																{
																	"name": "base_1",
																	"nativeSrc": "3906:6:8",
																	"nodeType": "YulTypedName",
																	"src": "3906:6:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4003:22:8",
																"nodeType": "YulBlock",
																"src": "4003:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "4005:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "4005:16:8"
																			},
																			"nativeSrc": "4005:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "4005:18:8"
																		},
																		"nativeSrc": "4005:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "4005:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "power_1",
																		"nativeSrc": "3973:7:8",
																		"nodeType": "YulIdentifier",
																		"src": "3973:7:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "3990:1:8",
																						"nodeType": "YulLiteral",
																						"src": "3990:1:8",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "3986:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "3986:3:8"
																				},
																				"nativeSrc": "3986:6:8",
																				"nodeType": "YulFunctionCall",
																				"src": "3986:6:8"
																			},
																			{
																				"name": "base_1",
																				"nativeSrc": "3994:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "3994:6:8"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "3982:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3982:3:8"
																		},
																		"nativeSrc": "3982:19:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3982:19:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3970:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "3970:2:8"
																},
																"nativeSrc": "3970:32:8",
																"nodeType": "YulFunctionCall",
																"src": "3970:32:8"
															},
															"nativeSrc": "3967:58:8",
															"nodeType": "YulIf",
															"src": "3967:58:8"
														},
														{
															"nativeSrc": "4034:29:8",
															"nodeType": "YulAssignment",
															"src": "4034:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "power_1",
																		"nativeSrc": "4047:7:8",
																		"nodeType": "YulIdentifier",
																		"src": "4047:7:8"
																	},
																	{
																		"name": "base_1",
																		"nativeSrc": "4056:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "4056:6:8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "4043:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "4043:3:8"
																},
																"nativeSrc": "4043:20:8",
																"nodeType": "YulFunctionCall",
																"src": "4043:20:8"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "4034:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "4034:5:8"
																}
															]
														}
													]
												},
												"name": "checked_exp_unsigned",
												"nativeSrc": "3167:902:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "3197:4:8",
														"nodeType": "YulTypedName",
														"src": "3197:4:8",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "3203:8:8",
														"nodeType": "YulTypedName",
														"src": "3203:8:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "3216:5:8",
														"nodeType": "YulTypedName",
														"src": "3216:5:8",
														"type": ""
													}
												],
												"src": "3167:902:8"
											},
											{
												"body": {
													"nativeSrc": "4142:72:8",
													"nodeType": "YulBlock",
													"src": "4142:72:8",
													"statements": [
														{
															"nativeSrc": "4152:56:8",
															"nodeType": "YulAssignment",
															"src": "4152:56:8",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "4182:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "4182:4:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "exponent",
																				"nativeSrc": "4192:8:8",
																				"nodeType": "YulIdentifier",
																				"src": "4192:8:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4202:4:8",
																				"nodeType": "YulLiteral",
																				"src": "4202:4:8",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "4188:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "4188:3:8"
																		},
																		"nativeSrc": "4188:19:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4188:19:8"
																	}
																],
																"functionName": {
																	"name": "checked_exp_unsigned",
																	"nativeSrc": "4161:20:8",
																	"nodeType": "YulIdentifier",
																	"src": "4161:20:8"
																},
																"nativeSrc": "4161:47:8",
																"nodeType": "YulFunctionCall",
																"src": "4161:47:8"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "4152:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "4152:5:8"
																}
															]
														}
													]
												},
												"name": "checked_exp_t_uint256_t_uint8",
												"nativeSrc": "4074:140:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "4113:4:8",
														"nodeType": "YulTypedName",
														"src": "4113:4:8",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "4119:8:8",
														"nodeType": "YulTypedName",
														"src": "4119:8:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "4132:5:8",
														"nodeType": "YulTypedName",
														"src": "4132:5:8",
														"type": ""
													}
												],
												"src": "4074:140:8"
											},
											{
												"body": {
													"nativeSrc": "4271:116:8",
													"nodeType": "YulBlock",
													"src": "4271:116:8",
													"statements": [
														{
															"nativeSrc": "4281:20:8",
															"nodeType": "YulAssignment",
															"src": "4281:20:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4296:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "4296:1:8"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "4299:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "4299:1:8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "4292:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "4292:3:8"
																},
																"nativeSrc": "4292:9:8",
																"nodeType": "YulFunctionCall",
																"src": "4292:9:8"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "4281:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "4281:7:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4359:22:8",
																"nodeType": "YulBlock",
																"src": "4359:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "4361:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "4361:16:8"
																			},
																			"nativeSrc": "4361:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "4361:18:8"
																		},
																		"nativeSrc": "4361:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "4361:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "4330:1:8",
																						"nodeType": "YulIdentifier",
																						"src": "4330:1:8"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "4323:6:8",
																					"nodeType": "YulIdentifier",
																					"src": "4323:6:8"
																				},
																				"nativeSrc": "4323:9:8",
																				"nodeType": "YulFunctionCall",
																				"src": "4323:9:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "4337:1:8",
																						"nodeType": "YulIdentifier",
																						"src": "4337:1:8"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "4344:7:8",
																								"nodeType": "YulIdentifier",
																								"src": "4344:7:8"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "4353:1:8",
																								"nodeType": "YulIdentifier",
																								"src": "4353:1:8"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "4340:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "4340:3:8"
																						},
																						"nativeSrc": "4340:15:8",
																						"nodeType": "YulFunctionCall",
																						"src": "4340:15:8"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "4334:2:8",
																					"nodeType": "YulIdentifier",
																					"src": "4334:2:8"
																				},
																				"nativeSrc": "4334:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "4334:22:8"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "4320:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "4320:2:8"
																		},
																		"nativeSrc": "4320:37:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4320:37:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4313:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "4313:6:8"
																},
																"nativeSrc": "4313:45:8",
																"nodeType": "YulFunctionCall",
																"src": "4313:45:8"
															},
															"nativeSrc": "4310:71:8",
															"nodeType": "YulIf",
															"src": "4310:71:8"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "4219:168:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "4250:1:8",
														"nodeType": "YulTypedName",
														"src": "4250:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "4253:1:8",
														"nodeType": "YulTypedName",
														"src": "4253:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "4259:7:8",
														"nodeType": "YulTypedName",
														"src": "4259:7:8",
														"type": ""
													}
												],
												"src": "4219:168:8"
											},
											{
												"body": {
													"nativeSrc": "4566:181:8",
													"nodeType": "YulBlock",
													"src": "4566:181:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4583:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "4583:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4594:2:8",
																		"nodeType": "YulLiteral",
																		"src": "4594:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4576:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "4576:6:8"
																},
																"nativeSrc": "4576:21:8",
																"nodeType": "YulFunctionCall",
																"src": "4576:21:8"
															},
															"nativeSrc": "4576:21:8",
															"nodeType": "YulExpressionStatement",
															"src": "4576:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4617:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "4617:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4628:2:8",
																				"nodeType": "YulLiteral",
																				"src": "4628:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4613:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "4613:3:8"
																		},
																		"nativeSrc": "4613:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4613:18:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4633:2:8",
																		"nodeType": "YulLiteral",
																		"src": "4633:2:8",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4606:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "4606:6:8"
																},
																"nativeSrc": "4606:30:8",
																"nodeType": "YulFunctionCall",
																"src": "4606:30:8"
															},
															"nativeSrc": "4606:30:8",
															"nodeType": "YulExpressionStatement",
															"src": "4606:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4656:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "4656:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4667:2:8",
																				"nodeType": "YulLiteral",
																				"src": "4667:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4652:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "4652:3:8"
																		},
																		"nativeSrc": "4652:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4652:18:8"
																	},
																	{
																		"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
																		"kind": "string",
																		"nativeSrc": "4672:33:8",
																		"nodeType": "YulLiteral",
																		"src": "4672:33:8",
																		"type": "",
																		"value": "ERC20: mint to the zero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4645:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "4645:6:8"
																},
																"nativeSrc": "4645:61:8",
																"nodeType": "YulFunctionCall",
																"src": "4645:61:8"
															},
															"nativeSrc": "4645:61:8",
															"nodeType": "YulExpressionStatement",
															"src": "4645:61:8"
														},
														{
															"nativeSrc": "4715:26:8",
															"nodeType": "YulAssignment",
															"src": "4715:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4727:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "4727:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4738:2:8",
																		"nodeType": "YulLiteral",
																		"src": "4738:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4723:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "4723:3:8"
																},
																"nativeSrc": "4723:18:8",
																"nodeType": "YulFunctionCall",
																"src": "4723:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4715:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "4715:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4392:355:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4543:9:8",
														"nodeType": "YulTypedName",
														"src": "4543:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4557:4:8",
														"nodeType": "YulTypedName",
														"src": "4557:4:8",
														"type": ""
													}
												],
												"src": "4392:355:8"
											},
											{
												"body": {
													"nativeSrc": "4800:77:8",
													"nodeType": "YulBlock",
													"src": "4800:77:8",
													"statements": [
														{
															"nativeSrc": "4810:16:8",
															"nodeType": "YulAssignment",
															"src": "4810:16:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4821:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "4821:1:8"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "4824:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "4824:1:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4817:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "4817:3:8"
																},
																"nativeSrc": "4817:9:8",
																"nodeType": "YulFunctionCall",
																"src": "4817:9:8"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "4810:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "4810:3:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4849:22:8",
																"nodeType": "YulBlock",
																"src": "4849:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "4851:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "4851:16:8"
																			},
																			"nativeSrc": "4851:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "4851:18:8"
																		},
																		"nativeSrc": "4851:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "4851:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4841:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "4841:1:8"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "4844:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "4844:3:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4838:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "4838:2:8"
																},
																"nativeSrc": "4838:10:8",
																"nodeType": "YulFunctionCall",
																"src": "4838:10:8"
															},
															"nativeSrc": "4835:36:8",
															"nodeType": "YulIf",
															"src": "4835:36:8"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "4752:125:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "4783:1:8",
														"nodeType": "YulTypedName",
														"src": "4783:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "4786:1:8",
														"nodeType": "YulTypedName",
														"src": "4786:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "4792:3:8",
														"nodeType": "YulTypedName",
														"src": "4792:3:8",
														"type": ""
													}
												],
												"src": "4752:125:8"
											},
											{
												"body": {
													"nativeSrc": "4983:76:8",
													"nodeType": "YulBlock",
													"src": "4983:76:8",
													"statements": [
														{
															"nativeSrc": "4993:26:8",
															"nodeType": "YulAssignment",
															"src": "4993:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5005:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "5005:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5016:2:8",
																		"nodeType": "YulLiteral",
																		"src": "5016:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5001:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "5001:3:8"
																},
																"nativeSrc": "5001:18:8",
																"nodeType": "YulFunctionCall",
																"src": "5001:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4993:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "4993:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5035:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "5035:9:8"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "5046:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "5046:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5028:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5028:6:8"
																},
																"nativeSrc": "5028:25:8",
																"nodeType": "YulFunctionCall",
																"src": "5028:25:8"
															},
															"nativeSrc": "5028:25:8",
															"nodeType": "YulExpressionStatement",
															"src": "5028:25:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "4882:177:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4952:9:8",
														"nodeType": "YulTypedName",
														"src": "4952:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4963:6:8",
														"nodeType": "YulTypedName",
														"src": "4963:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4974:4:8",
														"nodeType": "YulTypedName",
														"src": "4974:4:8",
														"type": ""
													}
												],
												"src": "4882:177:8"
											},
											{
												"body": {
													"nativeSrc": "5238:229:8",
													"nodeType": "YulBlock",
													"src": "5238:229:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5255:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "5255:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5266:2:8",
																		"nodeType": "YulLiteral",
																		"src": "5266:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5248:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5248:6:8"
																},
																"nativeSrc": "5248:21:8",
																"nodeType": "YulFunctionCall",
																"src": "5248:21:8"
															},
															"nativeSrc": "5248:21:8",
															"nodeType": "YulExpressionStatement",
															"src": "5248:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5289:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "5289:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5300:2:8",
																				"nodeType": "YulLiteral",
																				"src": "5300:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5285:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "5285:3:8"
																		},
																		"nativeSrc": "5285:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5285:18:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5305:2:8",
																		"nodeType": "YulLiteral",
																		"src": "5305:2:8",
																		"type": "",
																		"value": "39"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5278:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5278:6:8"
																},
																"nativeSrc": "5278:30:8",
																"nodeType": "YulFunctionCall",
																"src": "5278:30:8"
															},
															"nativeSrc": "5278:30:8",
															"nodeType": "YulExpressionStatement",
															"src": "5278:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5328:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "5328:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5339:2:8",
																				"nodeType": "YulLiteral",
																				"src": "5339:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5324:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "5324:3:8"
																		},
																		"nativeSrc": "5324:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5324:18:8"
																	},
																	{
																		"hexValue": "5265766f6c74436f696e3a20746f6b656e207472616e73666572207768696c65",
																		"kind": "string",
																		"nativeSrc": "5344:34:8",
																		"nodeType": "YulLiteral",
																		"src": "5344:34:8",
																		"type": "",
																		"value": "RevoltCoin: token transfer while"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5317:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5317:6:8"
																},
																"nativeSrc": "5317:62:8",
																"nodeType": "YulFunctionCall",
																"src": "5317:62:8"
															},
															"nativeSrc": "5317:62:8",
															"nodeType": "YulExpressionStatement",
															"src": "5317:62:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5399:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "5399:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5410:2:8",
																				"nodeType": "YulLiteral",
																				"src": "5410:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5395:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "5395:3:8"
																		},
																		"nativeSrc": "5395:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5395:18:8"
																	},
																	{
																		"hexValue": "20706175736564",
																		"kind": "string",
																		"nativeSrc": "5415:9:8",
																		"nodeType": "YulLiteral",
																		"src": "5415:9:8",
																		"type": "",
																		"value": " paused"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5388:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5388:6:8"
																},
																"nativeSrc": "5388:37:8",
																"nodeType": "YulFunctionCall",
																"src": "5388:37:8"
															},
															"nativeSrc": "5388:37:8",
															"nodeType": "YulExpressionStatement",
															"src": "5388:37:8"
														},
														{
															"nativeSrc": "5434:27:8",
															"nodeType": "YulAssignment",
															"src": "5434:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5446:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "5446:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5457:3:8",
																		"nodeType": "YulLiteral",
																		"src": "5457:3:8",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5442:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "5442:3:8"
																},
																"nativeSrc": "5442:19:8",
																"nodeType": "YulFunctionCall",
																"src": "5442:19:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5434:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "5434:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9d18d00bc92e4e4805f27a8b4b8bfb1589f27d087a4178b7035486f9b373e88c__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5064:403:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5215:9:8",
														"nodeType": "YulTypedName",
														"src": "5215:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5229:4:8",
														"nodeType": "YulTypedName",
														"src": "5229:4:8",
														"type": ""
													}
												],
												"src": "5064:403:8"
											}
										]
									},
									"contents": "{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            mstore(0, array)\n            let data := keccak256(0, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _1 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _1) { start := add(start, 1) }\n            { sstore(start, 0) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        srcOffset := 0x20\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 0x20)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_exp_helper(_base, exponent, max) -> power, base\n    {\n        power := 1\n        base := _base\n        for { } gt(exponent, 1) { }\n        {\n            if gt(base, div(max, base)) { panic_error_0x11() }\n            if and(exponent, 1) { power := mul(power, base) }\n            base := mul(base, base)\n            exponent := shr(1, exponent)\n        }\n    }\n    function checked_exp_unsigned(base, exponent) -> power\n    {\n        if iszero(exponent)\n        {\n            power := 1\n            leave\n        }\n        if iszero(base)\n        {\n            power := 0\n            leave\n        }\n        switch base\n        case 1 {\n            power := 1\n            leave\n        }\n        case 2 {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := shl(exponent, 1)\n            let _1 := 0\n            _1 := 0\n            leave\n        }\n        if or(and(lt(base, 11), lt(exponent, 78)), and(lt(base, 307), lt(exponent, 32)))\n        {\n            power := exp(base, exponent)\n            let _2 := 0\n            _2 := 0\n            leave\n        }\n        let power_1, base_1 := checked_exp_helper(base, exponent, not(0))\n        if gt(power_1, div(not(0), base_1)) { panic_error_0x11() }\n        power := mul(power_1, base_1)\n    }\n    function checked_exp_t_uint256_t_uint8(base, exponent) -> power\n    {\n        power := checked_exp_unsigned(base, and(exponent, 0xff))\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ERC20: mint to the zero address\")\n        tail := add(headStart, 96)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_stringliteral_9d18d00bc92e4e4805f27a8b4b8bfb1589f27d087a4178b7035486f9b373e88c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 39)\n        mstore(add(headStart, 64), \"RevoltCoin: token transfer while\")\n        mstore(add(headStart, 96), \" paused\")\n        tail := add(headStart, 128)\n    }\n}",
									"id": 8,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE PUSH1 0x2 PUSH1 0x7 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x14 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xA DUP2 MSTORE PUSH1 0x20 ADD PUSH10 0x2932BB37B63A21B7B4B7 PUSH1 0xB1 SHL DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 DUP2 MSTORE PUSH1 0x20 ADD PUSH6 0x14995D9BDB1D PUSH1 0xD2 SHL DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH2 0x66 SWAP2 SWAP1 PUSH2 0x375 JUMP JUMPDEST POP PUSH1 0x4 PUSH2 0x73 DUP3 DUP3 PUSH2 0x375 JUMP JUMPDEST POP POP POP PUSH2 0x8C PUSH2 0x87 PUSH2 0x147 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x14B JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND SWAP1 SSTORE PUSH1 0x1 PUSH1 0x6 DUP2 SWAP1 SSTORE CALLER PUSH1 0x80 DUP2 SWAP1 MSTORE PUSH1 0x8 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x9 PUSH0 PUSH2 0xCE PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH0 SWAP1 DUP2 KECCAK256 DUP1 SLOAD SWAP6 ISZERO ISZERO PUSH1 0xFF NOT SWAP7 DUP8 AND OR SWAP1 SSTORE PUSH1 0x8 SLOAD SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x9 SWAP1 SWAP3 MSTORE DUP2 KECCAK256 DUP1 SLOAD SWAP1 SWAP3 AND PUSH1 0x1 OR SWAP1 SWAP2 SSTORE PUSH2 0x11D PUSH1 0x12 SWAP1 JUMP JUMPDEST PUSH2 0x128 SWAP1 PUSH1 0xA PUSH2 0x528 JUMP JUMPDEST PUSH2 0x135 SWAP1 PUSH3 0xF4240 PUSH2 0x53D JUMP JUMPDEST SWAP1 POP PUSH2 0x141 CALLER DUP3 PUSH2 0x19C JUMP JUMPDEST POP PUSH2 0x567 JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1F7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x202 PUSH0 DUP4 DUP4 PUSH2 0x269 JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x213 SWAP2 SWAP1 PUSH2 0x554 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP7 ADD SWAP1 SSTORE MLOAD DUP5 DUP2 MSTORE PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x27C PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x2D9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265766F6C74436F696E3A20746F6B656E207472616E73666572207768696C65 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x81C185D5CD959 PUSH1 0xCA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1EE JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x306 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x324 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x2D9 JUMPI DUP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x34F JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x36E JUMPI PUSH0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x35B JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x38E JUMPI PUSH2 0x38E PUSH2 0x2DE JUMP JUMPDEST PUSH2 0x3A2 DUP2 PUSH2 0x39C DUP5 SLOAD PUSH2 0x2F2 JUMP JUMPDEST DUP5 PUSH2 0x32A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 DUP2 EQ PUSH2 0x3D4 JUMPI PUSH0 DUP4 ISZERO PUSH2 0x3BD JUMPI POP DUP5 DUP3 ADD MLOAD JUMPDEST PUSH0 NOT PUSH1 0x3 DUP6 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP5 SWAP1 SHL OR DUP5 SSTORE PUSH2 0x36E JUMP JUMPDEST PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP6 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x403 JUMPI DUP8 DUP6 ADD MLOAD DUP3 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x3E3 JUMP JUMPDEST POP DUP5 DUP3 LT ISZERO PUSH2 0x420 JUMPI DUP7 DUP5 ADD MLOAD PUSH0 NOT PUSH1 0x3 DUP8 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x1 DUP2 JUMPDEST PUSH1 0x1 DUP5 GT ISZERO PUSH2 0x47E JUMPI DUP1 DUP6 DIV DUP2 GT ISZERO PUSH2 0x462 JUMPI PUSH2 0x462 PUSH2 0x42F JUMP JUMPDEST PUSH1 0x1 DUP5 AND ISZERO PUSH2 0x470 JUMPI SWAP1 DUP2 MUL SWAP1 JUMPDEST PUSH1 0x1 SWAP4 SWAP1 SWAP4 SHR SWAP3 DUP1 MUL PUSH2 0x447 JUMP JUMPDEST SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x494 JUMPI POP PUSH1 0x1 PUSH2 0x522 JUMP JUMPDEST DUP2 PUSH2 0x4A0 JUMPI POP PUSH0 PUSH2 0x522 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x4B6 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x4C0 JUMPI PUSH2 0x4DC JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x522 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x4D1 JUMPI PUSH2 0x4D1 PUSH2 0x42F JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH2 0x522 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x4FF JUMPI POP DUP2 DUP2 EXP PUSH2 0x522 JUMP JUMPDEST PUSH2 0x50B PUSH0 NOT DUP5 DUP5 PUSH2 0x443 JUMP JUMPDEST DUP1 PUSH0 NOT DIV DUP3 GT ISZERO PUSH2 0x51E JUMPI PUSH2 0x51E PUSH2 0x42F JUMP JUMPDEST MUL SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x536 PUSH1 0xFF DUP5 AND DUP4 PUSH2 0x486 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x522 JUMPI PUSH2 0x522 PUSH2 0x42F JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x522 JUMPI PUSH2 0x522 PUSH2 0x42F JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH2 0x17E9 PUSH2 0x586 PUSH0 CODECOPY PUSH0 DUP2 DUP2 PUSH2 0x384 ADD MSTORE PUSH2 0x7A3 ADD MSTORE PUSH2 0x17E9 PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1BB JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x67243482 GT PUSH2 0xF3 JUMPI DUP1 PUSH4 0xA457C2D7 GT PUSH2 0x93 JUMPI DUP1 PUSH4 0xDD62ED3E GT PUSH2 0x6E JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x3A6 JUMPI DUP1 PUSH4 0xE74B981B EQ PUSH2 0x3B9 JUMPI DUP1 PUSH4 0xEA2F0B37 EQ PUSH2 0x3CC JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x3DF JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x359 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x36C JUMPI DUP1 PUSH4 0xD5F39488 EQ PUSH2 0x37F JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8456CB59 GT PUSH2 0xCE JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x32F JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x337 JUMPI DUP1 PUSH4 0x94544E64 EQ PUSH2 0x348 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x351 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x67243482 EQ PUSH2 0x2EC JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2FF JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x327 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x32CB6B0C GT PUSH2 0x15E JUMPI DUP1 PUSH4 0x40C10F19 GT PUSH2 0x139 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x289 JUMPI DUP1 PUSH4 0x437823EC EQ PUSH2 0x29C JUMPI DUP1 PUSH4 0x46904840 EQ PUSH2 0x2AF JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x2DA JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x32CB6B0C EQ PUSH2 0x25C JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x26E JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x281 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0x199 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x215 JUMPI DUP1 PUSH4 0x1F36D925 EQ PUSH2 0x227 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x23A JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x24D JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1BF JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1DD JUMPI DUP1 PUSH4 0x1815C208 EQ PUSH2 0x200 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1C7 PUSH2 0x3F2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D4 SWAP2 SWAP1 PUSH2 0x1530 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F0 PUSH2 0x1EB CALLDATASIZE PUSH1 0x4 PUSH2 0x1580 JUMP JUMPDEST PUSH2 0x482 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1D4 JUMP JUMPDEST PUSH2 0x213 PUSH2 0x20E CALLDATASIZE PUSH1 0x4 PUSH2 0x15A8 JUMP JUMPDEST PUSH2 0x49B JUMP JUMPDEST STOP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1D4 JUMP JUMPDEST PUSH2 0x213 PUSH2 0x235 CALLDATASIZE PUSH1 0x4 PUSH2 0x15C1 JUMP JUMPDEST PUSH2 0x55B JUMP JUMPDEST PUSH2 0x1F0 PUSH2 0x248 CALLDATASIZE PUSH1 0x4 PUSH2 0x15D8 JUMP JUMPDEST PUSH2 0x5E9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1D4 JUMP JUMPDEST PUSH2 0x219 PUSH11 0x84595161401484A000000 DUP2 JUMP JUMPDEST PUSH2 0x1F0 PUSH2 0x27C CALLDATASIZE PUSH1 0x4 PUSH2 0x1580 JUMP JUMPDEST PUSH2 0x67A JUMP JUMPDEST PUSH2 0x213 PUSH2 0x69B JUMP JUMPDEST PUSH2 0x213 PUSH2 0x297 CALLDATASIZE PUSH1 0x4 PUSH2 0x1580 JUMP JUMPDEST PUSH2 0x6AD JUMP JUMPDEST PUSH2 0x213 PUSH2 0x2AA CALLDATASIZE PUSH1 0x4 PUSH2 0x15A8 JUMP JUMPDEST PUSH2 0x726 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH2 0x2C2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1D4 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1F0 JUMP JUMPDEST PUSH2 0x213 PUSH2 0x2FA CALLDATASIZE PUSH1 0x4 PUSH2 0x165A JUMP JUMPDEST PUSH2 0x788 JUMP JUMPDEST PUSH2 0x219 PUSH2 0x30D CALLDATASIZE PUSH1 0x4 PUSH2 0x15A8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x213 PUSH2 0xA0E JUMP JUMPDEST PUSH2 0x213 PUSH2 0xA1F JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2C2 JUMP JUMPDEST PUSH2 0x219 PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1C7 PUSH2 0xA2F JUMP JUMPDEST PUSH2 0x1F0 PUSH2 0x367 CALLDATASIZE PUSH1 0x4 PUSH2 0x1580 JUMP JUMPDEST PUSH2 0xA3E JUMP JUMPDEST PUSH2 0x1F0 PUSH2 0x37A CALLDATASIZE PUSH1 0x4 PUSH2 0x1580 JUMP JUMPDEST PUSH2 0xAC3 JUMP JUMPDEST PUSH2 0x2C2 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x219 PUSH2 0x3B4 CALLDATASIZE PUSH1 0x4 PUSH2 0x16C6 JUMP JUMPDEST PUSH2 0xAEC JUMP JUMPDEST PUSH2 0x213 PUSH2 0x3C7 CALLDATASIZE PUSH1 0x4 PUSH2 0x15A8 JUMP JUMPDEST PUSH2 0xB16 JUMP JUMPDEST PUSH2 0x213 PUSH2 0x3DA CALLDATASIZE PUSH1 0x4 PUSH2 0x15A8 JUMP JUMPDEST PUSH2 0xC34 JUMP JUMPDEST PUSH2 0x213 PUSH2 0x3ED CALLDATASIZE PUSH1 0x4 PUSH2 0x15A8 JUMP JUMPDEST PUSH2 0xC8C JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x401 SWAP1 PUSH2 0x16F7 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x42D SWAP1 PUSH2 0x16F7 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x478 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x44F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x478 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x45B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x48F DUP2 DUP6 DUP6 PUSH2 0xD02 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x4A3 PUSH2 0xE25 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x4FE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265766F6C74436F696E3A20696E76616C6964206E6577206F776E6572000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x51A PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8292FCE18FA69EDF4DB7B94EA2E58241DF0AE57F97E0A6C9B29067028BF92D76 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x558 DUP2 PUSH2 0xE7F JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x563 PUSH2 0xE25 JUMP JUMPDEST PUSH1 0xA DUP2 GT ISZERO PUSH2 0x5A3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x8CCACA40E8DEDE40D0D2CED PUSH1 0xA3 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4F5 JUMP JUMPDEST PUSH1 0x7 DUP1 SLOAD SWAP1 DUP3 SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 SWAP1 MSTORE PUSH32 0xD141D90E37CFF90C4910D122C1B6BC4951144BBF7AD06233CE2A2954E5C25E3B SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x5F2 PUSH2 0xED0 JUMP JUMPDEST PUSH2 0x5FA PUSH2 0xF29 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x650 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265766F6C74436F696E3A207472616E7366657220746F207A65726F00000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4F5 JUMP JUMPDEST PUSH2 0x65B DUP5 CALLER DUP5 PUSH2 0xF76 JUMP JUMPDEST PUSH2 0x666 DUP5 DUP5 DUP5 PUSH2 0xFE8 JUMP JUMPDEST POP PUSH1 0x1 PUSH2 0x673 PUSH1 0x1 PUSH1 0x6 SSTORE JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x48F DUP2 DUP6 DUP6 PUSH2 0x68C DUP4 DUP4 PUSH2 0xAEC JUMP JUMPDEST PUSH2 0x696 SWAP2 SWAP1 PUSH2 0x1743 JUMP JUMPDEST PUSH2 0xD02 JUMP JUMPDEST PUSH2 0x6A3 PUSH2 0xE25 JUMP JUMPDEST PUSH2 0x6AB PUSH2 0x1169 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x6B5 PUSH2 0xE25 JUMP JUMPDEST PUSH11 0x84595161401484A000000 DUP2 PUSH2 0x6CB PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x6D5 SWAP2 SWAP1 PUSH2 0x1743 JUMP JUMPDEST GT ISZERO PUSH2 0x718 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x45786365656473206D617820737570706C79 PUSH1 0x70 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4F5 JUMP JUMPDEST PUSH2 0x722 DUP3 DUP3 PUSH2 0x11BE JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x72E PUSH2 0xE25 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE SWAP1 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x58C3E0504C69D3A92726966F152A771E0F8F6AD4DACA1AE9055A38ABA1FD2B62 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x790 PUSH2 0xED0 JUMP JUMPDEST PUSH2 0x798 PUSH2 0xF29 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0x81E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265766F6C74436F696E3A206F6E6C79206465706C6F7965722063616E206169 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x7264726F7 PUSH1 0xDC SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4F5 JUMP JUMPDEST DUP3 DUP2 EQ PUSH2 0x879 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265766F6C74436F696E3A2061697264726F7020617272617973206D69736D61 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0xE8C6D PUSH1 0xEB SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4F5 JUMP JUMPDEST PUSH0 DUP1 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x8B2 JUMPI DUP4 DUP4 DUP3 DUP2 DUP2 LT PUSH2 0x896 JUMPI PUSH2 0x896 PUSH2 0x1756 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD DUP3 PUSH2 0x8A8 SWAP2 SWAP1 PUSH2 0x1743 JUMP JUMPDEST SWAP2 POP PUSH1 0x1 ADD PUSH2 0x87C JUMP JUMPDEST POP PUSH11 0x84595161401484A000000 DUP2 PUSH2 0x8C9 PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x8D3 SWAP2 SWAP1 PUSH2 0x1743 JUMP JUMPDEST GT ISZERO PUSH2 0x921 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265766F6C74436F696E3A2065786365656473206D617820737570706C790000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4F5 JUMP JUMPDEST PUSH0 JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x9FC JUMPI PUSH2 0x973 DUP7 DUP7 DUP4 DUP2 DUP2 LT PUSH2 0x940 JUMPI PUSH2 0x940 PUSH2 0x1756 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x955 SWAP2 SWAP1 PUSH2 0x15A8 JUMP JUMPDEST DUP6 DUP6 DUP5 DUP2 DUP2 LT PUSH2 0x967 JUMPI PUSH2 0x967 PUSH2 0x1756 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD PUSH2 0x11BE JUMP JUMPDEST DUP6 DUP6 DUP3 DUP2 DUP2 LT PUSH2 0x985 JUMPI PUSH2 0x985 PUSH2 0x1756 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x99A SWAP2 SWAP1 PUSH2 0x15A8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C32C568416FCF97BE35CE5B27844CFDDCD63A67A1A602C3595BA5DAC38F303A DUP6 DUP6 DUP5 DUP2 DUP2 LT PUSH2 0x9D6 JUMPI PUSH2 0x9D6 PUSH2 0x1756 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD PUSH1 0x40 MLOAD PUSH2 0x9EC SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x1 ADD PUSH2 0x923 JUMP JUMPDEST POP POP PUSH2 0xA08 PUSH1 0x1 PUSH1 0x6 SSTORE JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0xA16 PUSH2 0xE25 JUMP JUMPDEST PUSH2 0x6AB PUSH0 PUSH2 0xE7F JUMP JUMPDEST PUSH2 0xA27 PUSH2 0xE25 JUMP JUMPDEST PUSH2 0x6AB PUSH2 0x1286 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x401 SWAP1 PUSH2 0x16F7 JUMP JUMPDEST PUSH0 CALLER DUP2 PUSH2 0xA4B DUP3 DUP7 PUSH2 0xAEC JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0xAAB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4F5 JUMP JUMPDEST PUSH2 0xAB8 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0xD02 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xACC PUSH2 0xED0 JUMP JUMPDEST PUSH2 0xAD4 PUSH2 0xF29 JUMP JUMPDEST PUSH2 0xADF CALLER DUP5 DUP5 PUSH2 0xFE8 JUMP JUMPDEST POP PUSH1 0x1 PUSH2 0x495 PUSH1 0x1 PUSH1 0x6 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xB1E PUSH2 0xE25 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xB74 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265766F6C74436F696E3A20696E76616C696420616464726573730000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4F5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND EXTCODESIZE ISZERO PUSH2 0xBDA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265766F6C74436F696E3A2066656520726563697069656E74206D7573742062 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6520454F41 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4F5 JUMP JUMPDEST PUSH1 0x8 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 DUP1 MLOAD SWAP2 SWAP1 SWAP3 AND DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH32 0xAAEBCF1BFA00580E41D966056B48521FA9F202645C86D4DDF28113E617C1B1D3 SWAP2 ADD PUSH2 0x5DD JUMP JUMPDEST PUSH2 0xC3C PUSH2 0xE25 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE SWAP1 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x4F6A6B6EFE34EC6478021AA9FB7F6980E78EA3A10C74074A8CE49D5D3EBF1F7E SWAP2 ADD PUSH2 0x77D JUMP JUMPDEST PUSH2 0xC94 PUSH2 0xE25 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xCF9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4F5 JUMP JUMPDEST PUSH2 0x558 DUP2 PUSH2 0xE7F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xD64 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4F5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xDC5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4F5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x6AB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4F5 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x6 SLOAD SUB PUSH2 0xF22 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4F5 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x6 SSTORE JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x6AB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x14185D5CD8589B194E881C185D5CD959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4F5 JUMP JUMPDEST PUSH0 PUSH2 0xF81 DUP5 DUP5 PUSH2 0xAEC JUMP JUMPDEST SWAP1 POP PUSH0 NOT DUP2 EQ PUSH2 0xA08 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xFDB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4F5 JUMP JUMPDEST PUSH2 0xA08 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0xD02 JUMP JUMPDEST PUSH2 0xFF0 PUSH2 0xF29 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1046 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265766F6C74436F696E3A207472616E736665722066726F6D207A65726F0000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4F5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x109C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265766F6C74436F696E3A207472616E7366657220746F207A65726F00000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4F5 JUMP JUMPDEST PUSH0 PUSH1 0x7 SLOAD GT DUP1 ISZERO PUSH2 0x10B7 JUMPI POP PUSH1 0x8 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x10DB JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x10FF JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST ISZERO PUSH2 0x1159 JUMPI PUSH0 PUSH1 0x64 PUSH1 0x7 SLOAD DUP4 PUSH2 0x1115 SWAP2 SWAP1 PUSH2 0x176A JUMP JUMPDEST PUSH2 0x111F SWAP2 SWAP1 PUSH2 0x1781 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x112C DUP3 DUP5 PUSH2 0x17A0 JUMP JUMPDEST PUSH1 0x8 SLOAD SWAP1 SWAP2 POP PUSH2 0x1147 SWAP1 DUP7 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH2 0x12C9 JUMP JUMPDEST PUSH2 0x1152 DUP6 DUP6 DUP4 PUSH2 0x12C9 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1164 DUP4 DUP4 DUP4 PUSH2 0x12C9 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x1171 PUSH2 0x1476 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND SWAP1 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA CALLER JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1214 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4F5 JUMP JUMPDEST PUSH2 0x121F PUSH0 DUP4 DUP4 PUSH2 0x14C6 JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1230 SWAP2 SWAP1 PUSH2 0x1743 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP7 ADD SWAP1 SSTORE MLOAD DUP5 DUP2 MSTORE PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x128E PUSH2 0xF29 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL OR SWAP1 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x11A1 CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x132D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4F5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x138F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4F5 JUMP JUMPDEST PUSH2 0x139A DUP4 DUP4 DUP4 PUSH2 0x14C6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x1411 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4F5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP8 DUP8 SUB SWAP1 SSTORE SWAP4 DUP8 AND DUP1 DUP4 MSTORE SWAP2 DUP5 SWAP1 KECCAK256 DUP1 SLOAD DUP8 ADD SWAP1 SSTORE SWAP3 MLOAD DUP6 DUP2 MSTORE SWAP1 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0xA08 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0x6AB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x14185D5CD8589B194E881B9BDD081C185D5CD959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4F5 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1164 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265766F6C74436F696E3A20746F6B656E207472616E73666572207768696C65 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x81C185D5CD959 PUSH1 0xCA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4F5 JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE DUP1 PUSH1 0x20 DUP6 ADD PUSH1 0x40 DUP6 ADD MCOPY PUSH0 PUSH1 0x40 DUP3 DUP6 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP5 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x157B JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1591 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x159A DUP4 PUSH2 0x1565 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x15B8 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x673 DUP3 PUSH2 0x1565 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x15D1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x15EA JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x15F3 DUP5 PUSH2 0x1565 JUMP JUMPDEST SWAP3 POP PUSH2 0x1601 PUSH1 0x20 DUP6 ADD PUSH2 0x1565 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x1622 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1639 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH2 0x1653 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x40 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x166D JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1683 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x168F DUP8 DUP3 DUP9 ADD PUSH2 0x1612 JUMP JUMPDEST SWAP1 SWAP6 POP SWAP4 POP POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x16AE JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x16BA DUP8 DUP3 DUP9 ADD PUSH2 0x1612 JUMP JUMPDEST SWAP6 SWAP9 SWAP5 SWAP8 POP SWAP6 POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x16D7 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x16E0 DUP4 PUSH2 0x1565 JUMP JUMPDEST SWAP2 POP PUSH2 0x16EE PUSH1 0x20 DUP5 ADD PUSH2 0x1565 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x170B JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1729 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x495 JUMPI PUSH2 0x495 PUSH2 0x172F JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x495 JUMPI PUSH2 0x495 PUSH2 0x172F JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x179B JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x495 JUMPI PUSH2 0x495 PUSH2 0x172F JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH2 0x77A8 0xF SELFBALANCE 0xE1 SWAP16 0x1F PUSH8 0xF937535D0FA50202 DUP11 COINBASE PUSH2 0xEFA4 PUSH32 0x80AEAC788D78C4264764736F6C634300081A0033000000000000000000000000 ",
							"sourceMap": "539:6209:0:-:0;;;820:1;784:37;;1423:551;;;;;;;;;;1980:113:4;;;;;;;;;;;;;-1:-1:-1;;;1980:113:4;;;;;;;;;;;;;;;;-1:-1:-1;;;1980:113:4;;;2054:5;2046;:13;;;;;;:::i;:::-;-1:-1:-1;2069:7:4;:17;2079:7;2069;:17;:::i;:::-;;1980:113;;936:32:1;955:12;:10;;;:12;;:::i;:::-;936:18;:32::i;:::-;996:7:2;:15;;-1:-1:-1;;;;996:15:2;;;;1821:7:3;:22;;;1521:10:0::1;1510:21;::::0;;;1589:12:::1;:25:::0;;-1:-1:-1;;;;;;1589:25:0::1;::::0;;::::1;::::0;;1678:18:::1;1006:5:2::0;1697:7:0::1;1273:6:1::0;;-1:-1:-1;;;;;1273:6:1;;1201:85;1697:7:0::1;-1:-1:-1::0;;;;;1678:27:0;;::::1;::::0;;::::1;::::0;;::::1;::::0;;;;;;;;-1:-1:-1;1678:27:0;;;:34;;;::::1;;-1:-1:-1::0;;1678:34:0;;::::1;;::::0;;1741:12:::1;::::0;;;::::1;1722:32:::0;;:18:::1;:32:::0;;;;;:39;;;;::::1;1678:34:::0;1722:39:::1;::::0;;;1915:10:::1;3186:2:4::0;;3104:91;1915:10:0::1;1909:16;::::0;:2:::1;:16;:::i;:::-;1897:28;::::0;:9:::1;:28;:::i;:::-;1873:52:::0;-1:-1:-1;1935:32:0::1;1941:10;1873:52:::0;1935:5:::1;:32::i;:::-;1467:507;539:6209:::0;;640:96:7;719:10;;640:96::o;2426:187:1:-;2518:6;;;-1:-1:-1;;;;;2534:17:1;;;-1:-1:-1;;;;;;2534:17:1;;;;;;;2566:40;;2518:6;;;2534:17;2518:6;;2566:40;;2499:16;;2566:40;2489:124;2426:187;:::o;8520:535:4:-;-1:-1:-1;;;;;8603:21:4;;8595:65;;;;-1:-1:-1;;;8595:65:4;;4594:2:8;8595:65:4;;;4576:21:8;4633:2;4613:18;;;4606:30;4672:33;4652:18;;;4645:61;4723:18;;8595:65:4;;;;;;;;;8671:49;8700:1;8704:7;8713:6;8671:20;:49::i;:::-;8747:6;8731:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8899:18:4;;:9;:18;;;;;;;;;;;:28;;;;;;8952:37;5028:25:8;;;8952:37:4;;5001:18:8;8952:37:4;;;;;;;8520:535;;:::o;4916:252:0:-;5109:8;1685:7:2;;-1:-1:-1;;;1685:7:2;;;;;1615:84;5109:8:0;5108:9;5100:61;;;;-1:-1:-1;;;5100:61:0;;5266:2:8;5100:61:0;;;5248:21:8;5305:2;5285:18;;;5278:30;5344:34;5324:18;;;5317:62;-1:-1:-1;;;5395:18:8;;;5388:37;5442:19;;5100:61:0;5064:403:8;5100:61:0;4916:252;;;:::o;14:127:8:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:380;225:1;221:12;;;;268;;;289:61;;343:4;335:6;331:17;321:27;;289:61;396:2;388:6;385:14;365:18;362:38;359:161;;442:10;437:3;433:20;430:1;423:31;477:4;474:1;467:15;505:4;502:1;495:15;359:161;;146:380;;;:::o;657:518::-;759:2;754:3;751:11;748:421;;;795:5;792:1;785:16;839:4;836:1;826:18;909:2;897:10;893:19;890:1;886:27;880:4;876:38;945:4;933:10;930:20;927:47;;;-1:-1:-1;968:4:8;927:47;1023:2;1018:3;1014:12;1011:1;1007:20;1001:4;997:31;987:41;;1078:81;1096:2;1089:5;1086:13;1078:81;;;1155:1;1141:16;;1122:1;1111:13;1078:81;;;1082:3;;657:518;;;:::o;1351:1299::-;1471:10;;-1:-1:-1;;;;;1493:30:8;;1490:56;;;1526:18;;:::i;:::-;1555:97;1645:6;1605:38;1637:4;1631:11;1605:38;:::i;:::-;1599:4;1555:97;:::i;:::-;1701:4;1732:2;1721:14;;1749:1;1744:649;;;;2437:1;2454:6;2451:89;;;-1:-1:-1;2506:19:8;;;2500:26;2451:89;-1:-1:-1;;1308:1:8;1304:11;;;1300:24;1296:29;1286:40;1332:1;1328:11;;;1283:57;2553:81;;1714:930;;1744:649;604:1;597:14;;;641:4;628:18;;-1:-1:-1;;1780:20:8;;;1898:222;1912:7;1909:1;1906:14;1898:222;;;1994:19;;;1988:26;1973:42;;2101:4;2086:20;;;;2054:1;2042:14;;;;1928:12;1898:222;;;1902:3;2148:6;2139:7;2136:19;2133:201;;;2209:19;;;2203:26;-1:-1:-1;;2292:1:8;2288:14;;;2304:3;2284:24;2280:37;2276:42;2261:58;2246:74;;2133:201;-1:-1:-1;;;;2380:1:8;2364:14;;;2360:22;2347:36;;-1:-1:-1;1351:1299:8:o;2655:127::-;2716:10;2711:3;2707:20;2704:1;2697:31;2747:4;2744:1;2737:15;2771:4;2768:1;2761:15;2787:375;2875:1;2893:5;2907:249;2928:1;2918:8;2915:15;2907:249;;;2978:4;2973:3;2969:14;2963:4;2960:24;2957:50;;;2987:18;;:::i;:::-;3037:1;3027:8;3023:16;3020:49;;;3051:16;;;;3020:49;3134:1;3130:16;;;;;3090:15;;2907:249;;;2787:375;;;;;;:::o;3167:902::-;3216:5;3246:8;3236:80;;-1:-1:-1;3287:1:8;3301:5;;3236:80;3335:4;3325:76;;-1:-1:-1;3372:1:8;3386:5;;3325:76;3417:4;3435:1;3430:59;;;;3503:1;3498:174;;;;3410:262;;3430:59;3460:1;3451:10;;3474:5;;;3498:174;3535:3;3525:8;3522:17;3519:43;;;3542:18;;:::i;:::-;-1:-1:-1;;3598:1:8;3584:16;;3657:5;;3410:262;;3756:2;3746:8;3743:16;3737:3;3731:4;3728:13;3724:36;3718:2;3708:8;3705:16;3700:2;3694:4;3691:12;3687:35;3684:77;3681:203;;;-1:-1:-1;3793:19:8;;;3869:5;;3681:203;3916:42;-1:-1:-1;;3941:8:8;3935:4;3916:42;:::i;:::-;3994:6;3990:1;3986:6;3982:19;3973:7;3970:32;3967:58;;;4005:18;;:::i;:::-;4043:20;;-1:-1:-1;3167:902:8;;;;;:::o;4074:140::-;4132:5;4161:47;4202:4;4192:8;4188:19;4182:4;4161:47;:::i;:::-;4152:56;4074:140;-1:-1:-1;;;4074:140:8:o;4219:168::-;4292:9;;;4323;;4340:15;;;4334:22;;4320:37;4310:71;;4361:18;;:::i;4752:125::-;4817:9;;;4838:10;;;4835:36;;;4851:18;;:::i;5064:403::-;539:6209:0;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@MAX_SUPPLY_20": {
									"entryPoint": null,
									"id": 20,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_afterTokenTransfer_1445": {
									"entryPoint": null,
									"id": 1445,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_1380": {
									"entryPoint": 3330,
									"id": 1380,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_beforeTokenTransfer_1434": {
									"entryPoint": null,
									"id": 1434,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_beforeTokenTransfer_410": {
									"entryPoint": 5318,
									"id": 410,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_checkOwner_628": {
									"entryPoint": 3621,
									"id": 628,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_mint_1263": {
									"entryPoint": 4542,
									"id": 1263,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_1561": {
									"entryPoint": null,
									"id": 1561,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_nonReentrantAfter_847": {
									"entryPoint": null,
									"id": 847,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_nonReentrantBefore_839": {
									"entryPoint": 3792,
									"id": 839,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_pause_777": {
									"entryPoint": 4742,
									"id": 777,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_requireNotPaused_750": {
									"entryPoint": 3881,
									"id": 750,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_requirePaused_761": {
									"entryPoint": 5238,
									"id": 761,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_spendAllowance_1423": {
									"entryPoint": 3958,
									"id": 1423,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferOwnership_685": {
									"entryPoint": 3711,
									"id": 685,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transfer_1206": {
									"entryPoint": 4809,
									"id": 1206,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_363": {
									"entryPoint": 4072,
									"id": 363,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_unpause_793": {
									"entryPoint": 4457,
									"id": 793,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@airdrop_572": {
									"entryPoint": 1928,
									"id": 572,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@allowance_1001": {
									"entryPoint": 2796,
									"id": 1001,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_1026": {
									"entryPoint": 1154,
									"id": 1026,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_958": {
									"entryPoint": null,
									"id": 958,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_934": {
									"entryPoint": null,
									"id": 934,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@decreaseAllowance_1129": {
									"entryPoint": 2622,
									"id": 1129,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@deployer_31": {
									"entryPoint": null,
									"id": 31,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@excludeFromFee_220": {
									"entryPoint": 1830,
									"id": 220,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@feeRecipient_25": {
									"entryPoint": null,
									"id": 25,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@includeInFee_238": {
									"entryPoint": 3124,
									"id": 238,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@increaseAllowance_1088": {
									"entryPoint": 1658,
									"id": 1088,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@mint_134": {
									"entryPoint": 1709,
									"id": 134,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@name_914": {
									"entryPoint": 1010,
									"id": 914,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@ownerTransfer_267": {
									"entryPoint": 1179,
									"id": 267,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@owner_614": {
									"entryPoint": null,
									"id": 614,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@pause_373": {
									"entryPoint": 2591,
									"id": 373,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@paused_738": {
									"entryPoint": null,
									"id": 738,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_642": {
									"entryPoint": 2574,
									"id": 642,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setFeeRecipient_202": {
									"entryPoint": 2838,
									"id": 202,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setTransferFeePercent_162": {
									"entryPoint": 1371,
									"id": 162,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@symbol_924": {
									"entryPoint": 2607,
									"id": 924,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_944": {
									"entryPoint": null,
									"id": 944,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFeePercent_23": {
									"entryPoint": null,
									"id": 23,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferFrom_477": {
									"entryPoint": 1513,
									"id": 477,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_665": {
									"entryPoint": 3212,
									"id": 665,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transfer_435": {
									"entryPoint": 2755,
									"id": 435,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@unpause_383": {
									"entryPoint": 1691,
									"id": 383,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_address": {
									"entryPoint": 5477,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_array_address_dyn_calldata": {
									"entryPoint": 5650,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 5544,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 5830,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 5592,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 5504,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptrt_array$_t_uint256_$dyn_calldata_ptr": {
									"entryPoint": 5722,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 5569,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5424,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_06ff2b837c3a2691c149e6a15b0de39f8430c204bf83c71a33a83fc03c2ce434__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_15227e3bddab765d9bb4e7d7cdcfba4113a4a240234404a19bf52517f300a907__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1fe52789d0d7af2d15362e183c36f1797727ca5f188b9566e5b4f8664703b09d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_48d9dea795d8d010580a5b191d0fe7c1ee70cd850707a0d7e7aba7c702de6be1__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_594ecc1988a2944fffb539907d9c82c812f8d36cd0dd70310ce39c57141f2636__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_833ac5256bd749e59e09b3d79e65697a9a895b45768ee0e3858ea9958c2aa611__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9d18d00bc92e4e4805f27a8b4b8bfb1589f27d087a4178b7035486f9b373e88c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_abde4a8a179b075c2757f63dc76a9bd13de52babc04234150155d1395f84c84e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c9413a64808d023ff99714f487ec1c68602a2e0a65fe8fb8d8342cfe90ada8f7__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_dfdfe6b2c4737ccf9b5de38c5fa288f07b9e7b09f4ddf3349651879a31de197c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f40d0a2e892c264da38217576433c47dde07950da469267cc230af5b81742164__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 5955,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 6017,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 5994,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 6048,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 5879,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 5935,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 5974,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:14836:8",
										"nodeType": "YulBlock",
										"src": "0:14836:8",
										"statements": [
											{
												"nativeSrc": "6:3:8",
												"nodeType": "YulBlock",
												"src": "6:3:8",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "135:297:8",
													"nodeType": "YulBlock",
													"src": "135:297:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "152:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "152:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "163:2:8",
																		"nodeType": "YulLiteral",
																		"src": "163:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "145:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "145:6:8"
																},
																"nativeSrc": "145:21:8",
																"nodeType": "YulFunctionCall",
																"src": "145:21:8"
															},
															"nativeSrc": "145:21:8",
															"nodeType": "YulExpressionStatement",
															"src": "145:21:8"
														},
														{
															"nativeSrc": "175:27:8",
															"nodeType": "YulVariableDeclaration",
															"src": "175:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "195:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "195:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "189:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "189:5:8"
																},
																"nativeSrc": "189:13:8",
																"nodeType": "YulFunctionCall",
																"src": "189:13:8"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "179:6:8",
																	"nodeType": "YulTypedName",
																	"src": "179:6:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "222:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "222:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "233:2:8",
																				"nodeType": "YulLiteral",
																				"src": "233:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "218:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "218:3:8"
																		},
																		"nativeSrc": "218:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "218:18:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "238:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "238:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "211:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "211:6:8"
																},
																"nativeSrc": "211:34:8",
																"nodeType": "YulFunctionCall",
																"src": "211:34:8"
															},
															"nativeSrc": "211:34:8",
															"nodeType": "YulExpressionStatement",
															"src": "211:34:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "264:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "264:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "275:2:8",
																				"nodeType": "YulLiteral",
																				"src": "275:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "260:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "260:3:8"
																		},
																		"nativeSrc": "260:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "260:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "284:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "284:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "292:2:8",
																				"nodeType": "YulLiteral",
																				"src": "292:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "280:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "280:3:8"
																		},
																		"nativeSrc": "280:15:8",
																		"nodeType": "YulFunctionCall",
																		"src": "280:15:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "297:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "297:6:8"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "254:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "254:5:8"
																},
																"nativeSrc": "254:50:8",
																"nodeType": "YulFunctionCall",
																"src": "254:50:8"
															},
															"nativeSrc": "254:50:8",
															"nodeType": "YulExpressionStatement",
															"src": "254:50:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "328:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "328:9:8"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "339:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "339:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "324:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "324:3:8"
																				},
																				"nativeSrc": "324:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "324:22:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "348:2:8",
																				"nodeType": "YulLiteral",
																				"src": "348:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "320:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "320:3:8"
																		},
																		"nativeSrc": "320:31:8",
																		"nodeType": "YulFunctionCall",
																		"src": "320:31:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "353:1:8",
																		"nodeType": "YulLiteral",
																		"src": "353:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "313:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "313:6:8"
																},
																"nativeSrc": "313:42:8",
																"nodeType": "YulFunctionCall",
																"src": "313:42:8"
															},
															"nativeSrc": "313:42:8",
															"nodeType": "YulExpressionStatement",
															"src": "313:42:8"
														},
														{
															"nativeSrc": "364:62:8",
															"nodeType": "YulAssignment",
															"src": "364:62:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "380:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "380:9:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nativeSrc": "399:6:8",
																								"nodeType": "YulIdentifier",
																								"src": "399:6:8"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "407:2:8",
																								"nodeType": "YulLiteral",
																								"src": "407:2:8",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "395:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "395:3:8"
																						},
																						"nativeSrc": "395:15:8",
																						"nodeType": "YulFunctionCall",
																						"src": "395:15:8"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "416:2:8",
																								"nodeType": "YulLiteral",
																								"src": "416:2:8",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nativeSrc": "412:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "412:3:8"
																						},
																						"nativeSrc": "412:7:8",
																						"nodeType": "YulFunctionCall",
																						"src": "412:7:8"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "391:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "391:3:8"
																				},
																				"nativeSrc": "391:29:8",
																				"nodeType": "YulFunctionCall",
																				"src": "391:29:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "376:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "376:3:8"
																		},
																		"nativeSrc": "376:45:8",
																		"nodeType": "YulFunctionCall",
																		"src": "376:45:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "423:2:8",
																		"nodeType": "YulLiteral",
																		"src": "423:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "372:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "372:3:8"
																},
																"nativeSrc": "372:54:8",
																"nodeType": "YulFunctionCall",
																"src": "372:54:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "364:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "364:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14:418:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "104:9:8",
														"nodeType": "YulTypedName",
														"src": "104:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "115:6:8",
														"nodeType": "YulTypedName",
														"src": "115:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "126:4:8",
														"nodeType": "YulTypedName",
														"src": "126:4:8",
														"type": ""
													}
												],
												"src": "14:418:8"
											},
											{
												"body": {
													"nativeSrc": "486:124:8",
													"nodeType": "YulBlock",
													"src": "486:124:8",
													"statements": [
														{
															"nativeSrc": "496:29:8",
															"nodeType": "YulAssignment",
															"src": "496:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "518:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "518:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "505:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "505:12:8"
																},
																"nativeSrc": "505:20:8",
																"nodeType": "YulFunctionCall",
																"src": "505:20:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "496:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "496:5:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "588:16:8",
																"nodeType": "YulBlock",
																"src": "588:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "597:1:8",
																					"nodeType": "YulLiteral",
																					"src": "597:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "600:1:8",
																					"nodeType": "YulLiteral",
																					"src": "600:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "590:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "590:6:8"
																			},
																			"nativeSrc": "590:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "590:12:8"
																		},
																		"nativeSrc": "590:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "590:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "547:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "547:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "558:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "558:5:8"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "573:3:8",
																										"nodeType": "YulLiteral",
																										"src": "573:3:8",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "578:1:8",
																										"nodeType": "YulLiteral",
																										"src": "578:1:8",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "569:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "569:3:8"
																								},
																								"nativeSrc": "569:11:8",
																								"nodeType": "YulFunctionCall",
																								"src": "569:11:8"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "582:1:8",
																								"nodeType": "YulLiteral",
																								"src": "582:1:8",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "565:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "565:3:8"
																						},
																						"nativeSrc": "565:19:8",
																						"nodeType": "YulFunctionCall",
																						"src": "565:19:8"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "554:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "554:3:8"
																				},
																				"nativeSrc": "554:31:8",
																				"nodeType": "YulFunctionCall",
																				"src": "554:31:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "544:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "544:2:8"
																		},
																		"nativeSrc": "544:42:8",
																		"nodeType": "YulFunctionCall",
																		"src": "544:42:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "537:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "537:6:8"
																},
																"nativeSrc": "537:50:8",
																"nodeType": "YulFunctionCall",
																"src": "537:50:8"
															},
															"nativeSrc": "534:70:8",
															"nodeType": "YulIf",
															"src": "534:70:8"
														}
													]
												},
												"name": "abi_decode_address",
												"nativeSrc": "437:173:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "465:6:8",
														"nodeType": "YulTypedName",
														"src": "465:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "476:5:8",
														"nodeType": "YulTypedName",
														"src": "476:5:8",
														"type": ""
													}
												],
												"src": "437:173:8"
											},
											{
												"body": {
													"nativeSrc": "702:213:8",
													"nodeType": "YulBlock",
													"src": "702:213:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "748:16:8",
																"nodeType": "YulBlock",
																"src": "748:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "757:1:8",
																					"nodeType": "YulLiteral",
																					"src": "757:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "760:1:8",
																					"nodeType": "YulLiteral",
																					"src": "760:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "750:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "750:6:8"
																			},
																			"nativeSrc": "750:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "750:12:8"
																		},
																		"nativeSrc": "750:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "750:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "723:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "723:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "732:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "732:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "719:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "719:3:8"
																		},
																		"nativeSrc": "719:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "719:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "744:2:8",
																		"nodeType": "YulLiteral",
																		"src": "744:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "715:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "715:3:8"
																},
																"nativeSrc": "715:32:8",
																"nodeType": "YulFunctionCall",
																"src": "715:32:8"
															},
															"nativeSrc": "712:52:8",
															"nodeType": "YulIf",
															"src": "712:52:8"
														},
														{
															"nativeSrc": "773:39:8",
															"nodeType": "YulAssignment",
															"src": "773:39:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "802:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "802:9:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "783:18:8",
																	"nodeType": "YulIdentifier",
																	"src": "783:18:8"
																},
																"nativeSrc": "783:29:8",
																"nodeType": "YulFunctionCall",
																"src": "783:29:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "773:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "773:6:8"
																}
															]
														},
														{
															"nativeSrc": "821:14:8",
															"nodeType": "YulVariableDeclaration",
															"src": "821:14:8",
															"value": {
																"kind": "number",
																"nativeSrc": "834:1:8",
																"nodeType": "YulLiteral",
																"src": "834:1:8",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "825:5:8",
																	"nodeType": "YulTypedName",
																	"src": "825:5:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "844:41:8",
															"nodeType": "YulAssignment",
															"src": "844:41:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "870:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "870:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "881:2:8",
																				"nodeType": "YulLiteral",
																				"src": "881:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "866:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "866:3:8"
																		},
																		"nativeSrc": "866:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "866:18:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "853:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "853:12:8"
																},
																"nativeSrc": "853:32:8",
																"nodeType": "YulFunctionCall",
																"src": "853:32:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "844:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "844:5:8"
																}
															]
														},
														{
															"nativeSrc": "894:15:8",
															"nodeType": "YulAssignment",
															"src": "894:15:8",
															"value": {
																"name": "value",
																"nativeSrc": "904:5:8",
																"nodeType": "YulIdentifier",
																"src": "904:5:8"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "894:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "894:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "615:300:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "660:9:8",
														"nodeType": "YulTypedName",
														"src": "660:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "671:7:8",
														"nodeType": "YulTypedName",
														"src": "671:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "683:6:8",
														"nodeType": "YulTypedName",
														"src": "683:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "691:6:8",
														"nodeType": "YulTypedName",
														"src": "691:6:8",
														"type": ""
													}
												],
												"src": "615:300:8"
											},
											{
												"body": {
													"nativeSrc": "1015:92:8",
													"nodeType": "YulBlock",
													"src": "1015:92:8",
													"statements": [
														{
															"nativeSrc": "1025:26:8",
															"nodeType": "YulAssignment",
															"src": "1025:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1037:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "1037:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1048:2:8",
																		"nodeType": "YulLiteral",
																		"src": "1048:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1033:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "1033:3:8"
																},
																"nativeSrc": "1033:18:8",
																"nodeType": "YulFunctionCall",
																"src": "1033:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1025:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "1025:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1067:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "1067:9:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "1092:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "1092:6:8"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "1085:6:8",
																					"nodeType": "YulIdentifier",
																					"src": "1085:6:8"
																				},
																				"nativeSrc": "1085:14:8",
																				"nodeType": "YulFunctionCall",
																				"src": "1085:14:8"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1078:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "1078:6:8"
																		},
																		"nativeSrc": "1078:22:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1078:22:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1060:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1060:6:8"
																},
																"nativeSrc": "1060:41:8",
																"nodeType": "YulFunctionCall",
																"src": "1060:41:8"
															},
															"nativeSrc": "1060:41:8",
															"nodeType": "YulExpressionStatement",
															"src": "1060:41:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "920:187:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "984:9:8",
														"nodeType": "YulTypedName",
														"src": "984:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "995:6:8",
														"nodeType": "YulTypedName",
														"src": "995:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1006:4:8",
														"nodeType": "YulTypedName",
														"src": "1006:4:8",
														"type": ""
													}
												],
												"src": "920:187:8"
											},
											{
												"body": {
													"nativeSrc": "1182:116:8",
													"nodeType": "YulBlock",
													"src": "1182:116:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "1228:16:8",
																"nodeType": "YulBlock",
																"src": "1228:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1237:1:8",
																					"nodeType": "YulLiteral",
																					"src": "1237:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1240:1:8",
																					"nodeType": "YulLiteral",
																					"src": "1240:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1230:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "1230:6:8"
																			},
																			"nativeSrc": "1230:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "1230:12:8"
																		},
																		"nativeSrc": "1230:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "1230:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1203:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "1203:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1212:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "1212:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1199:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1199:3:8"
																		},
																		"nativeSrc": "1199:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1199:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1224:2:8",
																		"nodeType": "YulLiteral",
																		"src": "1224:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1195:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "1195:3:8"
																},
																"nativeSrc": "1195:32:8",
																"nodeType": "YulFunctionCall",
																"src": "1195:32:8"
															},
															"nativeSrc": "1192:52:8",
															"nodeType": "YulIf",
															"src": "1192:52:8"
														},
														{
															"nativeSrc": "1253:39:8",
															"nodeType": "YulAssignment",
															"src": "1253:39:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1282:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "1282:9:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1263:18:8",
																	"nodeType": "YulIdentifier",
																	"src": "1263:18:8"
																},
																"nativeSrc": "1263:29:8",
																"nodeType": "YulFunctionCall",
																"src": "1263:29:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1253:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1253:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "1112:186:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1148:9:8",
														"nodeType": "YulTypedName",
														"src": "1148:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1159:7:8",
														"nodeType": "YulTypedName",
														"src": "1159:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1171:6:8",
														"nodeType": "YulTypedName",
														"src": "1171:6:8",
														"type": ""
													}
												],
												"src": "1112:186:8"
											},
											{
												"body": {
													"nativeSrc": "1404:76:8",
													"nodeType": "YulBlock",
													"src": "1404:76:8",
													"statements": [
														{
															"nativeSrc": "1414:26:8",
															"nodeType": "YulAssignment",
															"src": "1414:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1426:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "1426:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1437:2:8",
																		"nodeType": "YulLiteral",
																		"src": "1437:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1422:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "1422:3:8"
																},
																"nativeSrc": "1422:18:8",
																"nodeType": "YulFunctionCall",
																"src": "1422:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1414:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "1414:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1456:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "1456:9:8"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "1467:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "1467:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1449:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1449:6:8"
																},
																"nativeSrc": "1449:25:8",
																"nodeType": "YulFunctionCall",
																"src": "1449:25:8"
															},
															"nativeSrc": "1449:25:8",
															"nodeType": "YulExpressionStatement",
															"src": "1449:25:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "1303:177:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1373:9:8",
														"nodeType": "YulTypedName",
														"src": "1373:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1384:6:8",
														"nodeType": "YulTypedName",
														"src": "1384:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1395:4:8",
														"nodeType": "YulTypedName",
														"src": "1395:4:8",
														"type": ""
													}
												],
												"src": "1303:177:8"
											},
											{
												"body": {
													"nativeSrc": "1555:156:8",
													"nodeType": "YulBlock",
													"src": "1555:156:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "1601:16:8",
																"nodeType": "YulBlock",
																"src": "1601:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1610:1:8",
																					"nodeType": "YulLiteral",
																					"src": "1610:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1613:1:8",
																					"nodeType": "YulLiteral",
																					"src": "1613:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1603:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "1603:6:8"
																			},
																			"nativeSrc": "1603:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "1603:12:8"
																		},
																		"nativeSrc": "1603:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "1603:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1576:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "1576:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1585:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "1585:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1572:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1572:3:8"
																		},
																		"nativeSrc": "1572:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1572:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1597:2:8",
																		"nodeType": "YulLiteral",
																		"src": "1597:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1568:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "1568:3:8"
																},
																"nativeSrc": "1568:32:8",
																"nodeType": "YulFunctionCall",
																"src": "1568:32:8"
															},
															"nativeSrc": "1565:52:8",
															"nodeType": "YulIf",
															"src": "1565:52:8"
														},
														{
															"nativeSrc": "1626:14:8",
															"nodeType": "YulVariableDeclaration",
															"src": "1626:14:8",
															"value": {
																"kind": "number",
																"nativeSrc": "1639:1:8",
																"nodeType": "YulLiteral",
																"src": "1639:1:8",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "1630:5:8",
																	"nodeType": "YulTypedName",
																	"src": "1630:5:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1649:32:8",
															"nodeType": "YulAssignment",
															"src": "1649:32:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1671:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "1671:9:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1658:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "1658:12:8"
																},
																"nativeSrc": "1658:23:8",
																"nodeType": "YulFunctionCall",
																"src": "1658:23:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1649:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "1649:5:8"
																}
															]
														},
														{
															"nativeSrc": "1690:15:8",
															"nodeType": "YulAssignment",
															"src": "1690:15:8",
															"value": {
																"name": "value",
																"nativeSrc": "1700:5:8",
																"nodeType": "YulIdentifier",
																"src": "1700:5:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1690:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1690:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "1485:226:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1521:9:8",
														"nodeType": "YulTypedName",
														"src": "1521:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1532:7:8",
														"nodeType": "YulTypedName",
														"src": "1532:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1544:6:8",
														"nodeType": "YulTypedName",
														"src": "1544:6:8",
														"type": ""
													}
												],
												"src": "1485:226:8"
											},
											{
												"body": {
													"nativeSrc": "1820:270:8",
													"nodeType": "YulBlock",
													"src": "1820:270:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "1866:16:8",
																"nodeType": "YulBlock",
																"src": "1866:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1875:1:8",
																					"nodeType": "YulLiteral",
																					"src": "1875:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1878:1:8",
																					"nodeType": "YulLiteral",
																					"src": "1878:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1868:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "1868:6:8"
																			},
																			"nativeSrc": "1868:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "1868:12:8"
																		},
																		"nativeSrc": "1868:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "1868:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1841:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "1841:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1850:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "1850:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1837:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1837:3:8"
																		},
																		"nativeSrc": "1837:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1837:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1862:2:8",
																		"nodeType": "YulLiteral",
																		"src": "1862:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1833:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "1833:3:8"
																},
																"nativeSrc": "1833:32:8",
																"nodeType": "YulFunctionCall",
																"src": "1833:32:8"
															},
															"nativeSrc": "1830:52:8",
															"nodeType": "YulIf",
															"src": "1830:52:8"
														},
														{
															"nativeSrc": "1891:39:8",
															"nodeType": "YulAssignment",
															"src": "1891:39:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1920:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "1920:9:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1901:18:8",
																	"nodeType": "YulIdentifier",
																	"src": "1901:18:8"
																},
																"nativeSrc": "1901:29:8",
																"nodeType": "YulFunctionCall",
																"src": "1901:29:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1891:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1891:6:8"
																}
															]
														},
														{
															"nativeSrc": "1939:48:8",
															"nodeType": "YulAssignment",
															"src": "1939:48:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1972:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "1972:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1983:2:8",
																				"nodeType": "YulLiteral",
																				"src": "1983:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1968:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1968:3:8"
																		},
																		"nativeSrc": "1968:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1968:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1949:18:8",
																	"nodeType": "YulIdentifier",
																	"src": "1949:18:8"
																},
																"nativeSrc": "1949:38:8",
																"nodeType": "YulFunctionCall",
																"src": "1949:38:8"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1939:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1939:6:8"
																}
															]
														},
														{
															"nativeSrc": "1996:14:8",
															"nodeType": "YulVariableDeclaration",
															"src": "1996:14:8",
															"value": {
																"kind": "number",
																"nativeSrc": "2009:1:8",
																"nodeType": "YulLiteral",
																"src": "2009:1:8",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "2000:5:8",
																	"nodeType": "YulTypedName",
																	"src": "2000:5:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2019:41:8",
															"nodeType": "YulAssignment",
															"src": "2019:41:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2045:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "2045:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2056:2:8",
																				"nodeType": "YulLiteral",
																				"src": "2056:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2041:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "2041:3:8"
																		},
																		"nativeSrc": "2041:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2041:18:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2028:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "2028:12:8"
																},
																"nativeSrc": "2028:32:8",
																"nodeType": "YulFunctionCall",
																"src": "2028:32:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2019:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "2019:5:8"
																}
															]
														},
														{
															"nativeSrc": "2069:15:8",
															"nodeType": "YulAssignment",
															"src": "2069:15:8",
															"value": {
																"name": "value",
																"nativeSrc": "2079:5:8",
																"nodeType": "YulIdentifier",
																"src": "2079:5:8"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "2069:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2069:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "1716:374:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1770:9:8",
														"nodeType": "YulTypedName",
														"src": "1770:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1781:7:8",
														"nodeType": "YulTypedName",
														"src": "1781:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1793:6:8",
														"nodeType": "YulTypedName",
														"src": "1793:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1801:6:8",
														"nodeType": "YulTypedName",
														"src": "1801:6:8",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1809:6:8",
														"nodeType": "YulTypedName",
														"src": "1809:6:8",
														"type": ""
													}
												],
												"src": "1716:374:8"
											},
											{
												"body": {
													"nativeSrc": "2192:87:8",
													"nodeType": "YulBlock",
													"src": "2192:87:8",
													"statements": [
														{
															"nativeSrc": "2202:26:8",
															"nodeType": "YulAssignment",
															"src": "2202:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2214:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "2214:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2225:2:8",
																		"nodeType": "YulLiteral",
																		"src": "2225:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2210:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "2210:3:8"
																},
																"nativeSrc": "2210:18:8",
																"nodeType": "YulFunctionCall",
																"src": "2210:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2202:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "2202:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2244:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "2244:9:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "2259:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "2259:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2267:4:8",
																				"nodeType": "YulLiteral",
																				"src": "2267:4:8",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2255:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "2255:3:8"
																		},
																		"nativeSrc": "2255:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2255:17:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2237:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2237:6:8"
																},
																"nativeSrc": "2237:36:8",
																"nodeType": "YulFunctionCall",
																"src": "2237:36:8"
															},
															"nativeSrc": "2237:36:8",
															"nodeType": "YulExpressionStatement",
															"src": "2237:36:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "2095:184:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2161:9:8",
														"nodeType": "YulTypedName",
														"src": "2161:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2172:6:8",
														"nodeType": "YulTypedName",
														"src": "2172:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2183:4:8",
														"nodeType": "YulTypedName",
														"src": "2183:4:8",
														"type": ""
													}
												],
												"src": "2095:184:8"
											},
											{
												"body": {
													"nativeSrc": "2385:102:8",
													"nodeType": "YulBlock",
													"src": "2385:102:8",
													"statements": [
														{
															"nativeSrc": "2395:26:8",
															"nodeType": "YulAssignment",
															"src": "2395:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2407:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "2407:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2418:2:8",
																		"nodeType": "YulLiteral",
																		"src": "2418:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2403:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "2403:3:8"
																},
																"nativeSrc": "2403:18:8",
																"nodeType": "YulFunctionCall",
																"src": "2403:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2395:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "2395:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2437:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "2437:9:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "2452:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "2452:6:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "2468:3:8",
																								"nodeType": "YulLiteral",
																								"src": "2468:3:8",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "2473:1:8",
																								"nodeType": "YulLiteral",
																								"src": "2473:1:8",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "2464:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "2464:3:8"
																						},
																						"nativeSrc": "2464:11:8",
																						"nodeType": "YulFunctionCall",
																						"src": "2464:11:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2477:1:8",
																						"nodeType": "YulLiteral",
																						"src": "2477:1:8",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "2460:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "2460:3:8"
																				},
																				"nativeSrc": "2460:19:8",
																				"nodeType": "YulFunctionCall",
																				"src": "2460:19:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2448:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "2448:3:8"
																		},
																		"nativeSrc": "2448:32:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2448:32:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2430:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2430:6:8"
																},
																"nativeSrc": "2430:51:8",
																"nodeType": "YulFunctionCall",
																"src": "2430:51:8"
															},
															"nativeSrc": "2430:51:8",
															"nodeType": "YulExpressionStatement",
															"src": "2430:51:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "2284:203:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2354:9:8",
														"nodeType": "YulTypedName",
														"src": "2354:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2365:6:8",
														"nodeType": "YulTypedName",
														"src": "2365:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2376:4:8",
														"nodeType": "YulTypedName",
														"src": "2376:4:8",
														"type": ""
													}
												],
												"src": "2284:203:8"
											},
											{
												"body": {
													"nativeSrc": "2576:283:8",
													"nodeType": "YulBlock",
													"src": "2576:283:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "2625:16:8",
																"nodeType": "YulBlock",
																"src": "2625:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2634:1:8",
																					"nodeType": "YulLiteral",
																					"src": "2634:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2637:1:8",
																					"nodeType": "YulLiteral",
																					"src": "2637:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2627:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "2627:6:8"
																			},
																			"nativeSrc": "2627:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2627:12:8"
																		},
																		"nativeSrc": "2627:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "2627:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "2604:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "2604:6:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2612:4:8",
																						"nodeType": "YulLiteral",
																						"src": "2612:4:8",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2600:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "2600:3:8"
																				},
																				"nativeSrc": "2600:17:8",
																				"nodeType": "YulFunctionCall",
																				"src": "2600:17:8"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "2619:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "2619:3:8"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "2596:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "2596:3:8"
																		},
																		"nativeSrc": "2596:27:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2596:27:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2589:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2589:6:8"
																},
																"nativeSrc": "2589:35:8",
																"nodeType": "YulFunctionCall",
																"src": "2589:35:8"
															},
															"nativeSrc": "2586:55:8",
															"nodeType": "YulIf",
															"src": "2586:55:8"
														},
														{
															"nativeSrc": "2650:30:8",
															"nodeType": "YulAssignment",
															"src": "2650:30:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2673:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "2673:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2660:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "2660:12:8"
																},
																"nativeSrc": "2660:20:8",
																"nodeType": "YulFunctionCall",
																"src": "2660:20:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "2650:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2650:6:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2723:16:8",
																"nodeType": "YulBlock",
																"src": "2723:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2732:1:8",
																					"nodeType": "YulLiteral",
																					"src": "2732:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2735:1:8",
																					"nodeType": "YulLiteral",
																					"src": "2735:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2725:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "2725:6:8"
																			},
																			"nativeSrc": "2725:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2725:12:8"
																		},
																		"nativeSrc": "2725:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "2725:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "2695:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "2695:6:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2703:18:8",
																		"nodeType": "YulLiteral",
																		"src": "2703:18:8",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2692:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "2692:2:8"
																},
																"nativeSrc": "2692:30:8",
																"nodeType": "YulFunctionCall",
																"src": "2692:30:8"
															},
															"nativeSrc": "2689:50:8",
															"nodeType": "YulIf",
															"src": "2689:50:8"
														},
														{
															"nativeSrc": "2748:29:8",
															"nodeType": "YulAssignment",
															"src": "2748:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2764:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "2764:6:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2772:4:8",
																		"nodeType": "YulLiteral",
																		"src": "2772:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2760:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "2760:3:8"
																},
																"nativeSrc": "2760:17:8",
																"nodeType": "YulFunctionCall",
																"src": "2760:17:8"
															},
															"variableNames": [
																{
																	"name": "arrayPos",
																	"nativeSrc": "2748:8:8",
																	"nodeType": "YulIdentifier",
																	"src": "2748:8:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2837:16:8",
																"nodeType": "YulBlock",
																"src": "2837:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2846:1:8",
																					"nodeType": "YulLiteral",
																					"src": "2846:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2849:1:8",
																					"nodeType": "YulLiteral",
																					"src": "2849:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2839:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "2839:6:8"
																			},
																			"nativeSrc": "2839:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2839:12:8"
																		},
																		"nativeSrc": "2839:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "2839:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "2800:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "2800:6:8"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "2812:1:8",
																								"nodeType": "YulLiteral",
																								"src": "2812:1:8",
																								"type": "",
																								"value": "5"
																							},
																							{
																								"name": "length",
																								"nativeSrc": "2815:6:8",
																								"nodeType": "YulIdentifier",
																								"src": "2815:6:8"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "2808:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "2808:3:8"
																						},
																						"nativeSrc": "2808:14:8",
																						"nodeType": "YulFunctionCall",
																						"src": "2808:14:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2796:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "2796:3:8"
																				},
																				"nativeSrc": "2796:27:8",
																				"nodeType": "YulFunctionCall",
																				"src": "2796:27:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2825:4:8",
																				"nodeType": "YulLiteral",
																				"src": "2825:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2792:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "2792:3:8"
																		},
																		"nativeSrc": "2792:38:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2792:38:8"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2832:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "2832:3:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2789:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "2789:2:8"
																},
																"nativeSrc": "2789:47:8",
																"nodeType": "YulFunctionCall",
																"src": "2789:47:8"
															},
															"nativeSrc": "2786:67:8",
															"nodeType": "YulIf",
															"src": "2786:67:8"
														}
													]
												},
												"name": "abi_decode_array_address_dyn_calldata",
												"nativeSrc": "2492:367:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2539:6:8",
														"nodeType": "YulTypedName",
														"src": "2539:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2547:3:8",
														"nodeType": "YulTypedName",
														"src": "2547:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "arrayPos",
														"nativeSrc": "2555:8:8",
														"nodeType": "YulTypedName",
														"src": "2555:8:8",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "2565:6:8",
														"nodeType": "YulTypedName",
														"src": "2565:6:8",
														"type": ""
													}
												],
												"src": "2492:367:8"
											},
											{
												"body": {
													"nativeSrc": "3021:611:8",
													"nodeType": "YulBlock",
													"src": "3021:611:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "3067:16:8",
																"nodeType": "YulBlock",
																"src": "3067:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3076:1:8",
																					"nodeType": "YulLiteral",
																					"src": "3076:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3079:1:8",
																					"nodeType": "YulLiteral",
																					"src": "3079:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3069:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "3069:6:8"
																			},
																			"nativeSrc": "3069:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "3069:12:8"
																		},
																		"nativeSrc": "3069:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "3069:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3042:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "3042:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3051:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "3051:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3038:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3038:3:8"
																		},
																		"nativeSrc": "3038:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3038:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3063:2:8",
																		"nodeType": "YulLiteral",
																		"src": "3063:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3034:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3034:3:8"
																},
																"nativeSrc": "3034:32:8",
																"nodeType": "YulFunctionCall",
																"src": "3034:32:8"
															},
															"nativeSrc": "3031:52:8",
															"nodeType": "YulIf",
															"src": "3031:52:8"
														},
														{
															"nativeSrc": "3092:37:8",
															"nodeType": "YulVariableDeclaration",
															"src": "3092:37:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3119:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "3119:9:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3106:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "3106:12:8"
																},
																"nativeSrc": "3106:23:8",
																"nodeType": "YulFunctionCall",
																"src": "3106:23:8"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "3096:6:8",
																	"nodeType": "YulTypedName",
																	"src": "3096:6:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3172:16:8",
																"nodeType": "YulBlock",
																"src": "3172:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3181:1:8",
																					"nodeType": "YulLiteral",
																					"src": "3181:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3184:1:8",
																					"nodeType": "YulLiteral",
																					"src": "3184:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3174:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "3174:6:8"
																			},
																			"nativeSrc": "3174:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "3174:12:8"
																		},
																		"nativeSrc": "3174:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "3174:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3144:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "3144:6:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3152:18:8",
																		"nodeType": "YulLiteral",
																		"src": "3152:18:8",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3141:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "3141:2:8"
																},
																"nativeSrc": "3141:30:8",
																"nodeType": "YulFunctionCall",
																"src": "3141:30:8"
															},
															"nativeSrc": "3138:50:8",
															"nodeType": "YulIf",
															"src": "3138:50:8"
														},
														{
															"nativeSrc": "3197:96:8",
															"nodeType": "YulVariableDeclaration",
															"src": "3197:96:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3265:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "3265:9:8"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "3276:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "3276:6:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3261:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3261:3:8"
																		},
																		"nativeSrc": "3261:22:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3261:22:8"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "3285:7:8",
																		"nodeType": "YulIdentifier",
																		"src": "3285:7:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_address_dyn_calldata",
																	"nativeSrc": "3223:37:8",
																	"nodeType": "YulIdentifier",
																	"src": "3223:37:8"
																},
																"nativeSrc": "3223:70:8",
																"nodeType": "YulFunctionCall",
																"src": "3223:70:8"
															},
															"variables": [
																{
																	"name": "value0_1",
																	"nativeSrc": "3201:8:8",
																	"nodeType": "YulTypedName",
																	"src": "3201:8:8",
																	"type": ""
																},
																{
																	"name": "value1_1",
																	"nativeSrc": "3211:8:8",
																	"nodeType": "YulTypedName",
																	"src": "3211:8:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3302:18:8",
															"nodeType": "YulAssignment",
															"src": "3302:18:8",
															"value": {
																"name": "value0_1",
																"nativeSrc": "3312:8:8",
																"nodeType": "YulIdentifier",
																"src": "3312:8:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "3302:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3302:6:8"
																}
															]
														},
														{
															"nativeSrc": "3329:18:8",
															"nodeType": "YulAssignment",
															"src": "3329:18:8",
															"value": {
																"name": "value1_1",
																"nativeSrc": "3339:8:8",
																"nodeType": "YulIdentifier",
																"src": "3339:8:8"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "3329:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3329:6:8"
																}
															]
														},
														{
															"nativeSrc": "3356:48:8",
															"nodeType": "YulVariableDeclaration",
															"src": "3356:48:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3389:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "3389:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3400:2:8",
																				"nodeType": "YulLiteral",
																				"src": "3400:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3385:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3385:3:8"
																		},
																		"nativeSrc": "3385:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3385:18:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3372:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "3372:12:8"
																},
																"nativeSrc": "3372:32:8",
																"nodeType": "YulFunctionCall",
																"src": "3372:32:8"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nativeSrc": "3360:8:8",
																	"nodeType": "YulTypedName",
																	"src": "3360:8:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3449:16:8",
																"nodeType": "YulBlock",
																"src": "3449:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3458:1:8",
																					"nodeType": "YulLiteral",
																					"src": "3458:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3461:1:8",
																					"nodeType": "YulLiteral",
																					"src": "3461:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3451:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "3451:6:8"
																			},
																			"nativeSrc": "3451:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "3451:12:8"
																		},
																		"nativeSrc": "3451:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "3451:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nativeSrc": "3419:8:8",
																		"nodeType": "YulIdentifier",
																		"src": "3419:8:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3429:18:8",
																		"nodeType": "YulLiteral",
																		"src": "3429:18:8",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3416:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "3416:2:8"
																},
																"nativeSrc": "3416:32:8",
																"nodeType": "YulFunctionCall",
																"src": "3416:32:8"
															},
															"nativeSrc": "3413:52:8",
															"nodeType": "YulIf",
															"src": "3413:52:8"
														},
														{
															"nativeSrc": "3474:98:8",
															"nodeType": "YulVariableDeclaration",
															"src": "3474:98:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3542:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "3542:9:8"
																			},
																			{
																				"name": "offset_1",
																				"nativeSrc": "3553:8:8",
																				"nodeType": "YulIdentifier",
																				"src": "3553:8:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3538:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3538:3:8"
																		},
																		"nativeSrc": "3538:24:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3538:24:8"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "3564:7:8",
																		"nodeType": "YulIdentifier",
																		"src": "3564:7:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_address_dyn_calldata",
																	"nativeSrc": "3500:37:8",
																	"nodeType": "YulIdentifier",
																	"src": "3500:37:8"
																},
																"nativeSrc": "3500:72:8",
																"nodeType": "YulFunctionCall",
																"src": "3500:72:8"
															},
															"variables": [
																{
																	"name": "value2_1",
																	"nativeSrc": "3478:8:8",
																	"nodeType": "YulTypedName",
																	"src": "3478:8:8",
																	"type": ""
																},
																{
																	"name": "value3_1",
																	"nativeSrc": "3488:8:8",
																	"nodeType": "YulTypedName",
																	"src": "3488:8:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3581:18:8",
															"nodeType": "YulAssignment",
															"src": "3581:18:8",
															"value": {
																"name": "value2_1",
																"nativeSrc": "3591:8:8",
																"nodeType": "YulIdentifier",
																"src": "3591:8:8"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "3581:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3581:6:8"
																}
															]
														},
														{
															"nativeSrc": "3608:18:8",
															"nodeType": "YulAssignment",
															"src": "3608:18:8",
															"value": {
																"name": "value3_1",
																"nativeSrc": "3618:8:8",
																"nodeType": "YulIdentifier",
																"src": "3618:8:8"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nativeSrc": "3608:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3608:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptrt_array$_t_uint256_$dyn_calldata_ptr",
												"nativeSrc": "2864:768:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2963:9:8",
														"nodeType": "YulTypedName",
														"src": "2963:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2974:7:8",
														"nodeType": "YulTypedName",
														"src": "2974:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2986:6:8",
														"nodeType": "YulTypedName",
														"src": "2986:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2994:6:8",
														"nodeType": "YulTypedName",
														"src": "2994:6:8",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3002:6:8",
														"nodeType": "YulTypedName",
														"src": "3002:6:8",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "3010:6:8",
														"nodeType": "YulTypedName",
														"src": "3010:6:8",
														"type": ""
													}
												],
												"src": "2864:768:8"
											},
											{
												"body": {
													"nativeSrc": "3724:173:8",
													"nodeType": "YulBlock",
													"src": "3724:173:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "3770:16:8",
																"nodeType": "YulBlock",
																"src": "3770:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3779:1:8",
																					"nodeType": "YulLiteral",
																					"src": "3779:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3782:1:8",
																					"nodeType": "YulLiteral",
																					"src": "3782:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3772:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "3772:6:8"
																			},
																			"nativeSrc": "3772:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "3772:12:8"
																		},
																		"nativeSrc": "3772:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "3772:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3745:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "3745:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3754:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "3754:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3741:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3741:3:8"
																		},
																		"nativeSrc": "3741:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3741:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3766:2:8",
																		"nodeType": "YulLiteral",
																		"src": "3766:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3737:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3737:3:8"
																},
																"nativeSrc": "3737:32:8",
																"nodeType": "YulFunctionCall",
																"src": "3737:32:8"
															},
															"nativeSrc": "3734:52:8",
															"nodeType": "YulIf",
															"src": "3734:52:8"
														},
														{
															"nativeSrc": "3795:39:8",
															"nodeType": "YulAssignment",
															"src": "3795:39:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3824:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "3824:9:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "3805:18:8",
																	"nodeType": "YulIdentifier",
																	"src": "3805:18:8"
																},
																"nativeSrc": "3805:29:8",
																"nodeType": "YulFunctionCall",
																"src": "3805:29:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "3795:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3795:6:8"
																}
															]
														},
														{
															"nativeSrc": "3843:48:8",
															"nodeType": "YulAssignment",
															"src": "3843:48:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3876:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "3876:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3887:2:8",
																				"nodeType": "YulLiteral",
																				"src": "3887:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3872:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3872:3:8"
																		},
																		"nativeSrc": "3872:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3872:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "3853:18:8",
																	"nodeType": "YulIdentifier",
																	"src": "3853:18:8"
																},
																"nativeSrc": "3853:38:8",
																"nodeType": "YulFunctionCall",
																"src": "3853:38:8"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "3843:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3843:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "3637:260:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3682:9:8",
														"nodeType": "YulTypedName",
														"src": "3682:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3693:7:8",
														"nodeType": "YulTypedName",
														"src": "3693:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3705:6:8",
														"nodeType": "YulTypedName",
														"src": "3705:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3713:6:8",
														"nodeType": "YulTypedName",
														"src": "3713:6:8",
														"type": ""
													}
												],
												"src": "3637:260:8"
											},
											{
												"body": {
													"nativeSrc": "3957:325:8",
													"nodeType": "YulBlock",
													"src": "3957:325:8",
													"statements": [
														{
															"nativeSrc": "3967:22:8",
															"nodeType": "YulAssignment",
															"src": "3967:22:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3981:1:8",
																		"nodeType": "YulLiteral",
																		"src": "3981:1:8",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "3984:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "3984:4:8"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "3977:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3977:3:8"
																},
																"nativeSrc": "3977:12:8",
																"nodeType": "YulFunctionCall",
																"src": "3977:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "3967:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3967:6:8"
																}
															]
														},
														{
															"nativeSrc": "3998:38:8",
															"nodeType": "YulVariableDeclaration",
															"src": "3998:38:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4028:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "4028:4:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4034:1:8",
																		"nodeType": "YulLiteral",
																		"src": "4034:1:8",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4024:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "4024:3:8"
																},
																"nativeSrc": "4024:12:8",
																"nodeType": "YulFunctionCall",
																"src": "4024:12:8"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "4002:18:8",
																	"nodeType": "YulTypedName",
																	"src": "4002:18:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4075:31:8",
																"nodeType": "YulBlock",
																"src": "4075:31:8",
																"statements": [
																	{
																		"nativeSrc": "4077:27:8",
																		"nodeType": "YulAssignment",
																		"src": "4077:27:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "4091:6:8",
																					"nodeType": "YulIdentifier",
																					"src": "4091:6:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4099:4:8",
																					"nodeType": "YulLiteral",
																					"src": "4099:4:8",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "4087:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "4087:3:8"
																			},
																			"nativeSrc": "4087:17:8",
																			"nodeType": "YulFunctionCall",
																			"src": "4087:17:8"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "4077:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "4077:6:8"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "4055:18:8",
																		"nodeType": "YulIdentifier",
																		"src": "4055:18:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4048:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "4048:6:8"
																},
																"nativeSrc": "4048:26:8",
																"nodeType": "YulFunctionCall",
																"src": "4048:26:8"
															},
															"nativeSrc": "4045:61:8",
															"nodeType": "YulIf",
															"src": "4045:61:8"
														},
														{
															"body": {
																"nativeSrc": "4165:111:8",
																"nodeType": "YulBlock",
																"src": "4165:111:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4186:1:8",
																					"nodeType": "YulLiteral",
																					"src": "4186:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "4193:3:8",
																							"nodeType": "YulLiteral",
																							"src": "4193:3:8",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "4198:10:8",
																							"nodeType": "YulLiteral",
																							"src": "4198:10:8",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "4189:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "4189:3:8"
																					},
																					"nativeSrc": "4189:20:8",
																					"nodeType": "YulFunctionCall",
																					"src": "4189:20:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "4179:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "4179:6:8"
																			},
																			"nativeSrc": "4179:31:8",
																			"nodeType": "YulFunctionCall",
																			"src": "4179:31:8"
																		},
																		"nativeSrc": "4179:31:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "4179:31:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4230:1:8",
																					"nodeType": "YulLiteral",
																					"src": "4230:1:8",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4233:4:8",
																					"nodeType": "YulLiteral",
																					"src": "4233:4:8",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "4223:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "4223:6:8"
																			},
																			"nativeSrc": "4223:15:8",
																			"nodeType": "YulFunctionCall",
																			"src": "4223:15:8"
																		},
																		"nativeSrc": "4223:15:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "4223:15:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4258:1:8",
																					"nodeType": "YulLiteral",
																					"src": "4258:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4261:4:8",
																					"nodeType": "YulLiteral",
																					"src": "4261:4:8",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4251:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "4251:6:8"
																			},
																			"nativeSrc": "4251:15:8",
																			"nodeType": "YulFunctionCall",
																			"src": "4251:15:8"
																		},
																		"nativeSrc": "4251:15:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "4251:15:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "4121:18:8",
																		"nodeType": "YulIdentifier",
																		"src": "4121:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "4144:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "4144:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4152:2:8",
																				"nodeType": "YulLiteral",
																				"src": "4152:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "4141:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "4141:2:8"
																		},
																		"nativeSrc": "4141:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4141:14:8"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "4118:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "4118:2:8"
																},
																"nativeSrc": "4118:38:8",
																"nodeType": "YulFunctionCall",
																"src": "4118:38:8"
															},
															"nativeSrc": "4115:161:8",
															"nodeType": "YulIf",
															"src": "4115:161:8"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "3902:380:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "3937:4:8",
														"nodeType": "YulTypedName",
														"src": "3937:4:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "3946:6:8",
														"nodeType": "YulTypedName",
														"src": "3946:6:8",
														"type": ""
													}
												],
												"src": "3902:380:8"
											},
											{
												"body": {
													"nativeSrc": "4461:179:8",
													"nodeType": "YulBlock",
													"src": "4461:179:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4478:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "4478:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4489:2:8",
																		"nodeType": "YulLiteral",
																		"src": "4489:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4471:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "4471:6:8"
																},
																"nativeSrc": "4471:21:8",
																"nodeType": "YulFunctionCall",
																"src": "4471:21:8"
															},
															"nativeSrc": "4471:21:8",
															"nodeType": "YulExpressionStatement",
															"src": "4471:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4512:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "4512:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4523:2:8",
																				"nodeType": "YulLiteral",
																				"src": "4523:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4508:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "4508:3:8"
																		},
																		"nativeSrc": "4508:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4508:18:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4528:2:8",
																		"nodeType": "YulLiteral",
																		"src": "4528:2:8",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4501:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "4501:6:8"
																},
																"nativeSrc": "4501:30:8",
																"nodeType": "YulFunctionCall",
																"src": "4501:30:8"
															},
															"nativeSrc": "4501:30:8",
															"nodeType": "YulExpressionStatement",
															"src": "4501:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4551:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "4551:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4562:2:8",
																				"nodeType": "YulLiteral",
																				"src": "4562:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4547:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "4547:3:8"
																		},
																		"nativeSrc": "4547:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4547:18:8"
																	},
																	{
																		"hexValue": "5265766f6c74436f696e3a20696e76616c6964206e6577206f776e6572",
																		"kind": "string",
																		"nativeSrc": "4567:31:8",
																		"nodeType": "YulLiteral",
																		"src": "4567:31:8",
																		"type": "",
																		"value": "RevoltCoin: invalid new owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4540:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "4540:6:8"
																},
																"nativeSrc": "4540:59:8",
																"nodeType": "YulFunctionCall",
																"src": "4540:59:8"
															},
															"nativeSrc": "4540:59:8",
															"nodeType": "YulExpressionStatement",
															"src": "4540:59:8"
														},
														{
															"nativeSrc": "4608:26:8",
															"nodeType": "YulAssignment",
															"src": "4608:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4620:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "4620:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4631:2:8",
																		"nodeType": "YulLiteral",
																		"src": "4631:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4616:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "4616:3:8"
																},
																"nativeSrc": "4616:18:8",
																"nodeType": "YulFunctionCall",
																"src": "4616:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4608:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "4608:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f40d0a2e892c264da38217576433c47dde07950da469267cc230af5b81742164__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4287:353:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4438:9:8",
														"nodeType": "YulTypedName",
														"src": "4438:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4452:4:8",
														"nodeType": "YulTypedName",
														"src": "4452:4:8",
														"type": ""
													}
												],
												"src": "4287:353:8"
											},
											{
												"body": {
													"nativeSrc": "4819:162:8",
													"nodeType": "YulBlock",
													"src": "4819:162:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4836:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "4836:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4847:2:8",
																		"nodeType": "YulLiteral",
																		"src": "4847:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4829:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "4829:6:8"
																},
																"nativeSrc": "4829:21:8",
																"nodeType": "YulFunctionCall",
																"src": "4829:21:8"
															},
															"nativeSrc": "4829:21:8",
															"nodeType": "YulExpressionStatement",
															"src": "4829:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4870:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "4870:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4881:2:8",
																				"nodeType": "YulLiteral",
																				"src": "4881:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4866:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "4866:3:8"
																		},
																		"nativeSrc": "4866:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4866:18:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4886:2:8",
																		"nodeType": "YulLiteral",
																		"src": "4886:2:8",
																		"type": "",
																		"value": "12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4859:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "4859:6:8"
																},
																"nativeSrc": "4859:30:8",
																"nodeType": "YulFunctionCall",
																"src": "4859:30:8"
															},
															"nativeSrc": "4859:30:8",
															"nodeType": "YulExpressionStatement",
															"src": "4859:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4909:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "4909:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4920:2:8",
																				"nodeType": "YulLiteral",
																				"src": "4920:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4905:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "4905:3:8"
																		},
																		"nativeSrc": "4905:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4905:18:8"
																	},
																	{
																		"hexValue": "46656520746f6f2068696768",
																		"kind": "string",
																		"nativeSrc": "4925:14:8",
																		"nodeType": "YulLiteral",
																		"src": "4925:14:8",
																		"type": "",
																		"value": "Fee too high"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4898:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "4898:6:8"
																},
																"nativeSrc": "4898:42:8",
																"nodeType": "YulFunctionCall",
																"src": "4898:42:8"
															},
															"nativeSrc": "4898:42:8",
															"nodeType": "YulExpressionStatement",
															"src": "4898:42:8"
														},
														{
															"nativeSrc": "4949:26:8",
															"nodeType": "YulAssignment",
															"src": "4949:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4961:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "4961:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4972:2:8",
																		"nodeType": "YulLiteral",
																		"src": "4972:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4957:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "4957:3:8"
																},
																"nativeSrc": "4957:18:8",
																"nodeType": "YulFunctionCall",
																"src": "4957:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4949:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "4949:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_48d9dea795d8d010580a5b191d0fe7c1ee70cd850707a0d7e7aba7c702de6be1__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4645:336:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4796:9:8",
														"nodeType": "YulTypedName",
														"src": "4796:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4810:4:8",
														"nodeType": "YulTypedName",
														"src": "4810:4:8",
														"type": ""
													}
												],
												"src": "4645:336:8"
											},
											{
												"body": {
													"nativeSrc": "5115:119:8",
													"nodeType": "YulBlock",
													"src": "5115:119:8",
													"statements": [
														{
															"nativeSrc": "5125:26:8",
															"nodeType": "YulAssignment",
															"src": "5125:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5137:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "5137:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5148:2:8",
																		"nodeType": "YulLiteral",
																		"src": "5148:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5133:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "5133:3:8"
																},
																"nativeSrc": "5133:18:8",
																"nodeType": "YulFunctionCall",
																"src": "5133:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5125:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "5125:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5167:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "5167:9:8"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "5178:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "5178:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5160:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5160:6:8"
																},
																"nativeSrc": "5160:25:8",
																"nodeType": "YulFunctionCall",
																"src": "5160:25:8"
															},
															"nativeSrc": "5160:25:8",
															"nodeType": "YulExpressionStatement",
															"src": "5160:25:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5205:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "5205:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5216:2:8",
																				"nodeType": "YulLiteral",
																				"src": "5216:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5201:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "5201:3:8"
																		},
																		"nativeSrc": "5201:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5201:18:8"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "5221:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "5221:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5194:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5194:6:8"
																},
																"nativeSrc": "5194:34:8",
																"nodeType": "YulFunctionCall",
																"src": "5194:34:8"
															},
															"nativeSrc": "5194:34:8",
															"nodeType": "YulExpressionStatement",
															"src": "5194:34:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "4986:248:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5076:9:8",
														"nodeType": "YulTypedName",
														"src": "5076:9:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5087:6:8",
														"nodeType": "YulTypedName",
														"src": "5087:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5095:6:8",
														"nodeType": "YulTypedName",
														"src": "5095:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5106:4:8",
														"nodeType": "YulTypedName",
														"src": "5106:4:8",
														"type": ""
													}
												],
												"src": "4986:248:8"
											},
											{
												"body": {
													"nativeSrc": "5413:178:8",
													"nodeType": "YulBlock",
													"src": "5413:178:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5430:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "5430:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5441:2:8",
																		"nodeType": "YulLiteral",
																		"src": "5441:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5423:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5423:6:8"
																},
																"nativeSrc": "5423:21:8",
																"nodeType": "YulFunctionCall",
																"src": "5423:21:8"
															},
															"nativeSrc": "5423:21:8",
															"nodeType": "YulExpressionStatement",
															"src": "5423:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5464:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "5464:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5475:2:8",
																				"nodeType": "YulLiteral",
																				"src": "5475:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5460:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "5460:3:8"
																		},
																		"nativeSrc": "5460:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5460:18:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5480:2:8",
																		"nodeType": "YulLiteral",
																		"src": "5480:2:8",
																		"type": "",
																		"value": "28"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5453:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5453:6:8"
																},
																"nativeSrc": "5453:30:8",
																"nodeType": "YulFunctionCall",
																"src": "5453:30:8"
															},
															"nativeSrc": "5453:30:8",
															"nodeType": "YulExpressionStatement",
															"src": "5453:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5503:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "5503:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5514:2:8",
																				"nodeType": "YulLiteral",
																				"src": "5514:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5499:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "5499:3:8"
																		},
																		"nativeSrc": "5499:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5499:18:8"
																	},
																	{
																		"hexValue": "5265766f6c74436f696e3a207472616e7366657220746f207a65726f",
																		"kind": "string",
																		"nativeSrc": "5519:30:8",
																		"nodeType": "YulLiteral",
																		"src": "5519:30:8",
																		"type": "",
																		"value": "RevoltCoin: transfer to zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5492:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5492:6:8"
																},
																"nativeSrc": "5492:58:8",
																"nodeType": "YulFunctionCall",
																"src": "5492:58:8"
															},
															"nativeSrc": "5492:58:8",
															"nodeType": "YulExpressionStatement",
															"src": "5492:58:8"
														},
														{
															"nativeSrc": "5559:26:8",
															"nodeType": "YulAssignment",
															"src": "5559:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5571:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "5571:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5582:2:8",
																		"nodeType": "YulLiteral",
																		"src": "5582:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5567:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "5567:3:8"
																},
																"nativeSrc": "5567:18:8",
																"nodeType": "YulFunctionCall",
																"src": "5567:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5559:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "5559:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1fe52789d0d7af2d15362e183c36f1797727ca5f188b9566e5b4f8664703b09d__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5239:352:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5390:9:8",
														"nodeType": "YulTypedName",
														"src": "5390:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5404:4:8",
														"nodeType": "YulTypedName",
														"src": "5404:4:8",
														"type": ""
													}
												],
												"src": "5239:352:8"
											},
											{
												"body": {
													"nativeSrc": "5628:95:8",
													"nodeType": "YulBlock",
													"src": "5628:95:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5645:1:8",
																		"nodeType": "YulLiteral",
																		"src": "5645:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "5652:3:8",
																				"nodeType": "YulLiteral",
																				"src": "5652:3:8",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5657:10:8",
																				"nodeType": "YulLiteral",
																				"src": "5657:10:8",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "5648:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "5648:3:8"
																		},
																		"nativeSrc": "5648:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5648:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5638:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5638:6:8"
																},
																"nativeSrc": "5638:31:8",
																"nodeType": "YulFunctionCall",
																"src": "5638:31:8"
															},
															"nativeSrc": "5638:31:8",
															"nodeType": "YulExpressionStatement",
															"src": "5638:31:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5685:1:8",
																		"nodeType": "YulLiteral",
																		"src": "5685:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5688:4:8",
																		"nodeType": "YulLiteral",
																		"src": "5688:4:8",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5678:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5678:6:8"
																},
																"nativeSrc": "5678:15:8",
																"nodeType": "YulFunctionCall",
																"src": "5678:15:8"
															},
															"nativeSrc": "5678:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "5678:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5709:1:8",
																		"nodeType": "YulLiteral",
																		"src": "5709:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5712:4:8",
																		"nodeType": "YulLiteral",
																		"src": "5712:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5702:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5702:6:8"
																},
																"nativeSrc": "5702:15:8",
																"nodeType": "YulFunctionCall",
																"src": "5702:15:8"
															},
															"nativeSrc": "5702:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "5702:15:8"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "5596:127:8",
												"nodeType": "YulFunctionDefinition",
												"src": "5596:127:8"
											},
											{
												"body": {
													"nativeSrc": "5776:77:8",
													"nodeType": "YulBlock",
													"src": "5776:77:8",
													"statements": [
														{
															"nativeSrc": "5786:16:8",
															"nodeType": "YulAssignment",
															"src": "5786:16:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5797:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "5797:1:8"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "5800:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "5800:1:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5793:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "5793:3:8"
																},
																"nativeSrc": "5793:9:8",
																"nodeType": "YulFunctionCall",
																"src": "5793:9:8"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "5786:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "5786:3:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5825:22:8",
																"nodeType": "YulBlock",
																"src": "5825:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "5827:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "5827:16:8"
																			},
																			"nativeSrc": "5827:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "5827:18:8"
																		},
																		"nativeSrc": "5827:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "5827:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5817:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "5817:1:8"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "5820:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "5820:3:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5814:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "5814:2:8"
																},
																"nativeSrc": "5814:10:8",
																"nodeType": "YulFunctionCall",
																"src": "5814:10:8"
															},
															"nativeSrc": "5811:36:8",
															"nodeType": "YulIf",
															"src": "5811:36:8"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "5728:125:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "5759:1:8",
														"nodeType": "YulTypedName",
														"src": "5759:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "5762:1:8",
														"nodeType": "YulTypedName",
														"src": "5762:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "5768:3:8",
														"nodeType": "YulTypedName",
														"src": "5768:3:8",
														"type": ""
													}
												],
												"src": "5728:125:8"
											},
											{
												"body": {
													"nativeSrc": "6032:168:8",
													"nodeType": "YulBlock",
													"src": "6032:168:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6049:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "6049:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6060:2:8",
																		"nodeType": "YulLiteral",
																		"src": "6060:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6042:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6042:6:8"
																},
																"nativeSrc": "6042:21:8",
																"nodeType": "YulFunctionCall",
																"src": "6042:21:8"
															},
															"nativeSrc": "6042:21:8",
															"nodeType": "YulExpressionStatement",
															"src": "6042:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6083:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "6083:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6094:2:8",
																				"nodeType": "YulLiteral",
																				"src": "6094:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6079:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "6079:3:8"
																		},
																		"nativeSrc": "6079:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6079:18:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6099:2:8",
																		"nodeType": "YulLiteral",
																		"src": "6099:2:8",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6072:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6072:6:8"
																},
																"nativeSrc": "6072:30:8",
																"nodeType": "YulFunctionCall",
																"src": "6072:30:8"
															},
															"nativeSrc": "6072:30:8",
															"nodeType": "YulExpressionStatement",
															"src": "6072:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6122:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "6122:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6133:2:8",
																				"nodeType": "YulLiteral",
																				"src": "6133:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6118:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "6118:3:8"
																		},
																		"nativeSrc": "6118:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6118:18:8"
																	},
																	{
																		"hexValue": "45786365656473206d617820737570706c79",
																		"kind": "string",
																		"nativeSrc": "6138:20:8",
																		"nodeType": "YulLiteral",
																		"src": "6138:20:8",
																		"type": "",
																		"value": "Exceeds max supply"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6111:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6111:6:8"
																},
																"nativeSrc": "6111:48:8",
																"nodeType": "YulFunctionCall",
																"src": "6111:48:8"
															},
															"nativeSrc": "6111:48:8",
															"nodeType": "YulExpressionStatement",
															"src": "6111:48:8"
														},
														{
															"nativeSrc": "6168:26:8",
															"nodeType": "YulAssignment",
															"src": "6168:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6180:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "6180:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6191:2:8",
																		"nodeType": "YulLiteral",
																		"src": "6191:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6176:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "6176:3:8"
																},
																"nativeSrc": "6176:18:8",
																"nodeType": "YulFunctionCall",
																"src": "6176:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6168:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "6168:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_833ac5256bd749e59e09b3d79e65697a9a895b45768ee0e3858ea9958c2aa611__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5858:342:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6009:9:8",
														"nodeType": "YulTypedName",
														"src": "6009:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6023:4:8",
														"nodeType": "YulTypedName",
														"src": "6023:4:8",
														"type": ""
													}
												],
												"src": "5858:342:8"
											},
											{
												"body": {
													"nativeSrc": "6379:227:8",
													"nodeType": "YulBlock",
													"src": "6379:227:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6396:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "6396:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6407:2:8",
																		"nodeType": "YulLiteral",
																		"src": "6407:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6389:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6389:6:8"
																},
																"nativeSrc": "6389:21:8",
																"nodeType": "YulFunctionCall",
																"src": "6389:21:8"
															},
															"nativeSrc": "6389:21:8",
															"nodeType": "YulExpressionStatement",
															"src": "6389:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6430:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "6430:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6441:2:8",
																				"nodeType": "YulLiteral",
																				"src": "6441:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6426:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "6426:3:8"
																		},
																		"nativeSrc": "6426:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6426:18:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6446:2:8",
																		"nodeType": "YulLiteral",
																		"src": "6446:2:8",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6419:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6419:6:8"
																},
																"nativeSrc": "6419:30:8",
																"nodeType": "YulFunctionCall",
																"src": "6419:30:8"
															},
															"nativeSrc": "6419:30:8",
															"nodeType": "YulExpressionStatement",
															"src": "6419:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6469:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "6469:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6480:2:8",
																				"nodeType": "YulLiteral",
																				"src": "6480:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6465:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "6465:3:8"
																		},
																		"nativeSrc": "6465:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6465:18:8"
																	},
																	{
																		"hexValue": "5265766f6c74436f696e3a206f6e6c79206465706c6f7965722063616e206169",
																		"kind": "string",
																		"nativeSrc": "6485:34:8",
																		"nodeType": "YulLiteral",
																		"src": "6485:34:8",
																		"type": "",
																		"value": "RevoltCoin: only deployer can ai"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6458:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6458:6:8"
																},
																"nativeSrc": "6458:62:8",
																"nodeType": "YulFunctionCall",
																"src": "6458:62:8"
															},
															"nativeSrc": "6458:62:8",
															"nodeType": "YulExpressionStatement",
															"src": "6458:62:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6540:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "6540:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6551:2:8",
																				"nodeType": "YulLiteral",
																				"src": "6551:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6536:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "6536:3:8"
																		},
																		"nativeSrc": "6536:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6536:18:8"
																	},
																	{
																		"hexValue": "7264726f70",
																		"kind": "string",
																		"nativeSrc": "6556:7:8",
																		"nodeType": "YulLiteral",
																		"src": "6556:7:8",
																		"type": "",
																		"value": "rdrop"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6529:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6529:6:8"
																},
																"nativeSrc": "6529:35:8",
																"nodeType": "YulFunctionCall",
																"src": "6529:35:8"
															},
															"nativeSrc": "6529:35:8",
															"nodeType": "YulExpressionStatement",
															"src": "6529:35:8"
														},
														{
															"nativeSrc": "6573:27:8",
															"nodeType": "YulAssignment",
															"src": "6573:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6585:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "6585:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6596:3:8",
																		"nodeType": "YulLiteral",
																		"src": "6596:3:8",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6581:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "6581:3:8"
																},
																"nativeSrc": "6581:19:8",
																"nodeType": "YulFunctionCall",
																"src": "6581:19:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6573:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "6573:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_15227e3bddab765d9bb4e7d7cdcfba4113a4a240234404a19bf52517f300a907__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6205:401:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6356:9:8",
														"nodeType": "YulTypedName",
														"src": "6356:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6370:4:8",
														"nodeType": "YulTypedName",
														"src": "6370:4:8",
														"type": ""
													}
												],
												"src": "6205:401:8"
											},
											{
												"body": {
													"nativeSrc": "6785:225:8",
													"nodeType": "YulBlock",
													"src": "6785:225:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6802:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "6802:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6813:2:8",
																		"nodeType": "YulLiteral",
																		"src": "6813:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6795:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6795:6:8"
																},
																"nativeSrc": "6795:21:8",
																"nodeType": "YulFunctionCall",
																"src": "6795:21:8"
															},
															"nativeSrc": "6795:21:8",
															"nodeType": "YulExpressionStatement",
															"src": "6795:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6836:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "6836:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6847:2:8",
																				"nodeType": "YulLiteral",
																				"src": "6847:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6832:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "6832:3:8"
																		},
																		"nativeSrc": "6832:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6832:18:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6852:2:8",
																		"nodeType": "YulLiteral",
																		"src": "6852:2:8",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6825:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6825:6:8"
																},
																"nativeSrc": "6825:30:8",
																"nodeType": "YulFunctionCall",
																"src": "6825:30:8"
															},
															"nativeSrc": "6825:30:8",
															"nodeType": "YulExpressionStatement",
															"src": "6825:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6875:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "6875:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6886:2:8",
																				"nodeType": "YulLiteral",
																				"src": "6886:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6871:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "6871:3:8"
																		},
																		"nativeSrc": "6871:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6871:18:8"
																	},
																	{
																		"hexValue": "5265766f6c74436f696e3a2061697264726f7020617272617973206d69736d61",
																		"kind": "string",
																		"nativeSrc": "6891:34:8",
																		"nodeType": "YulLiteral",
																		"src": "6891:34:8",
																		"type": "",
																		"value": "RevoltCoin: airdrop arrays misma"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6864:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6864:6:8"
																},
																"nativeSrc": "6864:62:8",
																"nodeType": "YulFunctionCall",
																"src": "6864:62:8"
															},
															"nativeSrc": "6864:62:8",
															"nodeType": "YulExpressionStatement",
															"src": "6864:62:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6946:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "6946:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6957:2:8",
																				"nodeType": "YulLiteral",
																				"src": "6957:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6942:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "6942:3:8"
																		},
																		"nativeSrc": "6942:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6942:18:8"
																	},
																	{
																		"hexValue": "746368",
																		"kind": "string",
																		"nativeSrc": "6962:5:8",
																		"nodeType": "YulLiteral",
																		"src": "6962:5:8",
																		"type": "",
																		"value": "tch"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6935:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6935:6:8"
																},
																"nativeSrc": "6935:33:8",
																"nodeType": "YulFunctionCall",
																"src": "6935:33:8"
															},
															"nativeSrc": "6935:33:8",
															"nodeType": "YulExpressionStatement",
															"src": "6935:33:8"
														},
														{
															"nativeSrc": "6977:27:8",
															"nodeType": "YulAssignment",
															"src": "6977:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6989:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "6989:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7000:3:8",
																		"nodeType": "YulLiteral",
																		"src": "7000:3:8",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6985:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "6985:3:8"
																},
																"nativeSrc": "6985:19:8",
																"nodeType": "YulFunctionCall",
																"src": "6985:19:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6977:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "6977:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_dfdfe6b2c4737ccf9b5de38c5fa288f07b9e7b09f4ddf3349651879a31de197c__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6611:399:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6762:9:8",
														"nodeType": "YulTypedName",
														"src": "6762:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6776:4:8",
														"nodeType": "YulTypedName",
														"src": "6776:4:8",
														"type": ""
													}
												],
												"src": "6611:399:8"
											},
											{
												"body": {
													"nativeSrc": "7047:95:8",
													"nodeType": "YulBlock",
													"src": "7047:95:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7064:1:8",
																		"nodeType": "YulLiteral",
																		"src": "7064:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "7071:3:8",
																				"nodeType": "YulLiteral",
																				"src": "7071:3:8",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7076:10:8",
																				"nodeType": "YulLiteral",
																				"src": "7076:10:8",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "7067:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "7067:3:8"
																		},
																		"nativeSrc": "7067:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7067:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7057:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "7057:6:8"
																},
																"nativeSrc": "7057:31:8",
																"nodeType": "YulFunctionCall",
																"src": "7057:31:8"
															},
															"nativeSrc": "7057:31:8",
															"nodeType": "YulExpressionStatement",
															"src": "7057:31:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7104:1:8",
																		"nodeType": "YulLiteral",
																		"src": "7104:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7107:4:8",
																		"nodeType": "YulLiteral",
																		"src": "7107:4:8",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7097:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "7097:6:8"
																},
																"nativeSrc": "7097:15:8",
																"nodeType": "YulFunctionCall",
																"src": "7097:15:8"
															},
															"nativeSrc": "7097:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "7097:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7128:1:8",
																		"nodeType": "YulLiteral",
																		"src": "7128:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7131:4:8",
																		"nodeType": "YulLiteral",
																		"src": "7131:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7121:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "7121:6:8"
																},
																"nativeSrc": "7121:15:8",
																"nodeType": "YulFunctionCall",
																"src": "7121:15:8"
															},
															"nativeSrc": "7121:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "7121:15:8"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "7015:127:8",
												"nodeType": "YulFunctionDefinition",
												"src": "7015:127:8"
											},
											{
												"body": {
													"nativeSrc": "7321:180:8",
													"nodeType": "YulBlock",
													"src": "7321:180:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7338:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "7338:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7349:2:8",
																		"nodeType": "YulLiteral",
																		"src": "7349:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7331:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "7331:6:8"
																},
																"nativeSrc": "7331:21:8",
																"nodeType": "YulFunctionCall",
																"src": "7331:21:8"
															},
															"nativeSrc": "7331:21:8",
															"nodeType": "YulExpressionStatement",
															"src": "7331:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7372:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "7372:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7383:2:8",
																				"nodeType": "YulLiteral",
																				"src": "7383:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7368:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "7368:3:8"
																		},
																		"nativeSrc": "7368:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7368:18:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7388:2:8",
																		"nodeType": "YulLiteral",
																		"src": "7388:2:8",
																		"type": "",
																		"value": "30"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7361:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "7361:6:8"
																},
																"nativeSrc": "7361:30:8",
																"nodeType": "YulFunctionCall",
																"src": "7361:30:8"
															},
															"nativeSrc": "7361:30:8",
															"nodeType": "YulExpressionStatement",
															"src": "7361:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7411:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "7411:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7422:2:8",
																				"nodeType": "YulLiteral",
																				"src": "7422:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7407:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "7407:3:8"
																		},
																		"nativeSrc": "7407:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7407:18:8"
																	},
																	{
																		"hexValue": "5265766f6c74436f696e3a2065786365656473206d617820737570706c79",
																		"kind": "string",
																		"nativeSrc": "7427:32:8",
																		"nodeType": "YulLiteral",
																		"src": "7427:32:8",
																		"type": "",
																		"value": "RevoltCoin: exceeds max supply"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7400:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "7400:6:8"
																},
																"nativeSrc": "7400:60:8",
																"nodeType": "YulFunctionCall",
																"src": "7400:60:8"
															},
															"nativeSrc": "7400:60:8",
															"nodeType": "YulExpressionStatement",
															"src": "7400:60:8"
														},
														{
															"nativeSrc": "7469:26:8",
															"nodeType": "YulAssignment",
															"src": "7469:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7481:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "7481:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7492:2:8",
																		"nodeType": "YulLiteral",
																		"src": "7492:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7477:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "7477:3:8"
																},
																"nativeSrc": "7477:18:8",
																"nodeType": "YulFunctionCall",
																"src": "7477:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7469:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "7469:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c9413a64808d023ff99714f487ec1c68602a2e0a65fe8fb8d8342cfe90ada8f7__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7147:354:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7298:9:8",
														"nodeType": "YulTypedName",
														"src": "7298:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7312:4:8",
														"nodeType": "YulTypedName",
														"src": "7312:4:8",
														"type": ""
													}
												],
												"src": "7147:354:8"
											},
											{
												"body": {
													"nativeSrc": "7680:227:8",
													"nodeType": "YulBlock",
													"src": "7680:227:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7697:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "7697:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7708:2:8",
																		"nodeType": "YulLiteral",
																		"src": "7708:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7690:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "7690:6:8"
																},
																"nativeSrc": "7690:21:8",
																"nodeType": "YulFunctionCall",
																"src": "7690:21:8"
															},
															"nativeSrc": "7690:21:8",
															"nodeType": "YulExpressionStatement",
															"src": "7690:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7731:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "7731:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7742:2:8",
																				"nodeType": "YulLiteral",
																				"src": "7742:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7727:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "7727:3:8"
																		},
																		"nativeSrc": "7727:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7727:18:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7747:2:8",
																		"nodeType": "YulLiteral",
																		"src": "7747:2:8",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7720:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "7720:6:8"
																},
																"nativeSrc": "7720:30:8",
																"nodeType": "YulFunctionCall",
																"src": "7720:30:8"
															},
															"nativeSrc": "7720:30:8",
															"nodeType": "YulExpressionStatement",
															"src": "7720:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7770:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "7770:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7781:2:8",
																				"nodeType": "YulLiteral",
																				"src": "7781:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7766:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "7766:3:8"
																		},
																		"nativeSrc": "7766:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7766:18:8"
																	},
																	{
																		"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77",
																		"kind": "string",
																		"nativeSrc": "7786:34:8",
																		"nodeType": "YulLiteral",
																		"src": "7786:34:8",
																		"type": "",
																		"value": "ERC20: decreased allowance below"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7759:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "7759:6:8"
																},
																"nativeSrc": "7759:62:8",
																"nodeType": "YulFunctionCall",
																"src": "7759:62:8"
															},
															"nativeSrc": "7759:62:8",
															"nodeType": "YulExpressionStatement",
															"src": "7759:62:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7841:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "7841:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7852:2:8",
																				"nodeType": "YulLiteral",
																				"src": "7852:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7837:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "7837:3:8"
																		},
																		"nativeSrc": "7837:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7837:18:8"
																	},
																	{
																		"hexValue": "207a65726f",
																		"kind": "string",
																		"nativeSrc": "7857:7:8",
																		"nodeType": "YulLiteral",
																		"src": "7857:7:8",
																		"type": "",
																		"value": " zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7830:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "7830:6:8"
																},
																"nativeSrc": "7830:35:8",
																"nodeType": "YulFunctionCall",
																"src": "7830:35:8"
															},
															"nativeSrc": "7830:35:8",
															"nodeType": "YulExpressionStatement",
															"src": "7830:35:8"
														},
														{
															"nativeSrc": "7874:27:8",
															"nodeType": "YulAssignment",
															"src": "7874:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7886:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "7886:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7897:3:8",
																		"nodeType": "YulLiteral",
																		"src": "7897:3:8",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7882:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "7882:3:8"
																},
																"nativeSrc": "7882:19:8",
																"nodeType": "YulFunctionCall",
																"src": "7882:19:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7874:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "7874:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7506:401:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7657:9:8",
														"nodeType": "YulTypedName",
														"src": "7657:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7671:4:8",
														"nodeType": "YulTypedName",
														"src": "7671:4:8",
														"type": ""
													}
												],
												"src": "7506:401:8"
											},
											{
												"body": {
													"nativeSrc": "8086:177:8",
													"nodeType": "YulBlock",
													"src": "8086:177:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8103:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "8103:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8114:2:8",
																		"nodeType": "YulLiteral",
																		"src": "8114:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8096:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "8096:6:8"
																},
																"nativeSrc": "8096:21:8",
																"nodeType": "YulFunctionCall",
																"src": "8096:21:8"
															},
															"nativeSrc": "8096:21:8",
															"nodeType": "YulExpressionStatement",
															"src": "8096:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8137:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "8137:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8148:2:8",
																				"nodeType": "YulLiteral",
																				"src": "8148:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8133:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "8133:3:8"
																		},
																		"nativeSrc": "8133:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "8133:18:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8153:2:8",
																		"nodeType": "YulLiteral",
																		"src": "8153:2:8",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8126:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "8126:6:8"
																},
																"nativeSrc": "8126:30:8",
																"nodeType": "YulFunctionCall",
																"src": "8126:30:8"
															},
															"nativeSrc": "8126:30:8",
															"nodeType": "YulExpressionStatement",
															"src": "8126:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8176:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "8176:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8187:2:8",
																				"nodeType": "YulLiteral",
																				"src": "8187:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8172:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "8172:3:8"
																		},
																		"nativeSrc": "8172:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "8172:18:8"
																	},
																	{
																		"hexValue": "5265766f6c74436f696e3a20696e76616c69642061646472657373",
																		"kind": "string",
																		"nativeSrc": "8192:29:8",
																		"nodeType": "YulLiteral",
																		"src": "8192:29:8",
																		"type": "",
																		"value": "RevoltCoin: invalid address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8165:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "8165:6:8"
																},
																"nativeSrc": "8165:57:8",
																"nodeType": "YulFunctionCall",
																"src": "8165:57:8"
															},
															"nativeSrc": "8165:57:8",
															"nodeType": "YulExpressionStatement",
															"src": "8165:57:8"
														},
														{
															"nativeSrc": "8231:26:8",
															"nodeType": "YulAssignment",
															"src": "8231:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8243:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "8243:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8254:2:8",
																		"nodeType": "YulLiteral",
																		"src": "8254:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8239:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "8239:3:8"
																},
																"nativeSrc": "8239:18:8",
																"nodeType": "YulFunctionCall",
																"src": "8239:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8231:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "8231:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_abde4a8a179b075c2757f63dc76a9bd13de52babc04234150155d1395f84c84e__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7912:351:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8063:9:8",
														"nodeType": "YulTypedName",
														"src": "8063:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8077:4:8",
														"nodeType": "YulTypedName",
														"src": "8077:4:8",
														"type": ""
													}
												],
												"src": "7912:351:8"
											},
											{
												"body": {
													"nativeSrc": "8442:227:8",
													"nodeType": "YulBlock",
													"src": "8442:227:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8459:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "8459:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8470:2:8",
																		"nodeType": "YulLiteral",
																		"src": "8470:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8452:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "8452:6:8"
																},
																"nativeSrc": "8452:21:8",
																"nodeType": "YulFunctionCall",
																"src": "8452:21:8"
															},
															"nativeSrc": "8452:21:8",
															"nodeType": "YulExpressionStatement",
															"src": "8452:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8493:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "8493:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8504:2:8",
																				"nodeType": "YulLiteral",
																				"src": "8504:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8489:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "8489:3:8"
																		},
																		"nativeSrc": "8489:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "8489:18:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8509:2:8",
																		"nodeType": "YulLiteral",
																		"src": "8509:2:8",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8482:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "8482:6:8"
																},
																"nativeSrc": "8482:30:8",
																"nodeType": "YulFunctionCall",
																"src": "8482:30:8"
															},
															"nativeSrc": "8482:30:8",
															"nodeType": "YulExpressionStatement",
															"src": "8482:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8532:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "8532:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8543:2:8",
																				"nodeType": "YulLiteral",
																				"src": "8543:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8528:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "8528:3:8"
																		},
																		"nativeSrc": "8528:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "8528:18:8"
																	},
																	{
																		"hexValue": "5265766f6c74436f696e3a2066656520726563697069656e74206d7573742062",
																		"kind": "string",
																		"nativeSrc": "8548:34:8",
																		"nodeType": "YulLiteral",
																		"src": "8548:34:8",
																		"type": "",
																		"value": "RevoltCoin: fee recipient must b"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8521:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "8521:6:8"
																},
																"nativeSrc": "8521:62:8",
																"nodeType": "YulFunctionCall",
																"src": "8521:62:8"
															},
															"nativeSrc": "8521:62:8",
															"nodeType": "YulExpressionStatement",
															"src": "8521:62:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8603:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "8603:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8614:2:8",
																				"nodeType": "YulLiteral",
																				"src": "8614:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8599:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "8599:3:8"
																		},
																		"nativeSrc": "8599:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "8599:18:8"
																	},
																	{
																		"hexValue": "6520454f41",
																		"kind": "string",
																		"nativeSrc": "8619:7:8",
																		"nodeType": "YulLiteral",
																		"src": "8619:7:8",
																		"type": "",
																		"value": "e EOA"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8592:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "8592:6:8"
																},
																"nativeSrc": "8592:35:8",
																"nodeType": "YulFunctionCall",
																"src": "8592:35:8"
															},
															"nativeSrc": "8592:35:8",
															"nodeType": "YulExpressionStatement",
															"src": "8592:35:8"
														},
														{
															"nativeSrc": "8636:27:8",
															"nodeType": "YulAssignment",
															"src": "8636:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8648:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "8648:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8659:3:8",
																		"nodeType": "YulLiteral",
																		"src": "8659:3:8",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8644:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "8644:3:8"
																},
																"nativeSrc": "8644:19:8",
																"nodeType": "YulFunctionCall",
																"src": "8644:19:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8636:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "8636:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_594ecc1988a2944fffb539907d9c82c812f8d36cd0dd70310ce39c57141f2636__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8268:401:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8419:9:8",
														"nodeType": "YulTypedName",
														"src": "8419:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8433:4:8",
														"nodeType": "YulTypedName",
														"src": "8433:4:8",
														"type": ""
													}
												],
												"src": "8268:401:8"
											},
											{
												"body": {
													"nativeSrc": "8803:171:8",
													"nodeType": "YulBlock",
													"src": "8803:171:8",
													"statements": [
														{
															"nativeSrc": "8813:26:8",
															"nodeType": "YulAssignment",
															"src": "8813:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8825:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "8825:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8836:2:8",
																		"nodeType": "YulLiteral",
																		"src": "8836:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8821:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "8821:3:8"
																},
																"nativeSrc": "8821:18:8",
																"nodeType": "YulFunctionCall",
																"src": "8821:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8813:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "8813:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8855:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "8855:9:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "8870:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "8870:6:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "8886:3:8",
																								"nodeType": "YulLiteral",
																								"src": "8886:3:8",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "8891:1:8",
																								"nodeType": "YulLiteral",
																								"src": "8891:1:8",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "8882:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "8882:3:8"
																						},
																						"nativeSrc": "8882:11:8",
																						"nodeType": "YulFunctionCall",
																						"src": "8882:11:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8895:1:8",
																						"nodeType": "YulLiteral",
																						"src": "8895:1:8",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "8878:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "8878:3:8"
																				},
																				"nativeSrc": "8878:19:8",
																				"nodeType": "YulFunctionCall",
																				"src": "8878:19:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "8866:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "8866:3:8"
																		},
																		"nativeSrc": "8866:32:8",
																		"nodeType": "YulFunctionCall",
																		"src": "8866:32:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8848:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "8848:6:8"
																},
																"nativeSrc": "8848:51:8",
																"nodeType": "YulFunctionCall",
																"src": "8848:51:8"
															},
															"nativeSrc": "8848:51:8",
															"nodeType": "YulExpressionStatement",
															"src": "8848:51:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8919:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "8919:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8930:2:8",
																				"nodeType": "YulLiteral",
																				"src": "8930:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8915:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "8915:3:8"
																		},
																		"nativeSrc": "8915:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "8915:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "8939:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "8939:6:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "8955:3:8",
																								"nodeType": "YulLiteral",
																								"src": "8955:3:8",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "8960:1:8",
																								"nodeType": "YulLiteral",
																								"src": "8960:1:8",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "8951:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "8951:3:8"
																						},
																						"nativeSrc": "8951:11:8",
																						"nodeType": "YulFunctionCall",
																						"src": "8951:11:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8964:1:8",
																						"nodeType": "YulLiteral",
																						"src": "8964:1:8",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "8947:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "8947:3:8"
																				},
																				"nativeSrc": "8947:19:8",
																				"nodeType": "YulFunctionCall",
																				"src": "8947:19:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "8935:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "8935:3:8"
																		},
																		"nativeSrc": "8935:32:8",
																		"nodeType": "YulFunctionCall",
																		"src": "8935:32:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8908:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "8908:6:8"
																},
																"nativeSrc": "8908:60:8",
																"nodeType": "YulFunctionCall",
																"src": "8908:60:8"
															},
															"nativeSrc": "8908:60:8",
															"nodeType": "YulExpressionStatement",
															"src": "8908:60:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
												"nativeSrc": "8674:300:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8764:9:8",
														"nodeType": "YulTypedName",
														"src": "8764:9:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8775:6:8",
														"nodeType": "YulTypedName",
														"src": "8775:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8783:6:8",
														"nodeType": "YulTypedName",
														"src": "8783:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8794:4:8",
														"nodeType": "YulTypedName",
														"src": "8794:4:8",
														"type": ""
													}
												],
												"src": "8674:300:8"
											},
											{
												"body": {
													"nativeSrc": "9153:228:8",
													"nodeType": "YulBlock",
													"src": "9153:228:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9170:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "9170:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9181:2:8",
																		"nodeType": "YulLiteral",
																		"src": "9181:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9163:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "9163:6:8"
																},
																"nativeSrc": "9163:21:8",
																"nodeType": "YulFunctionCall",
																"src": "9163:21:8"
															},
															"nativeSrc": "9163:21:8",
															"nodeType": "YulExpressionStatement",
															"src": "9163:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9204:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "9204:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9215:2:8",
																				"nodeType": "YulLiteral",
																				"src": "9215:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9200:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "9200:3:8"
																		},
																		"nativeSrc": "9200:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9200:18:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9220:2:8",
																		"nodeType": "YulLiteral",
																		"src": "9220:2:8",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9193:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "9193:6:8"
																},
																"nativeSrc": "9193:30:8",
																"nodeType": "YulFunctionCall",
																"src": "9193:30:8"
															},
															"nativeSrc": "9193:30:8",
															"nodeType": "YulExpressionStatement",
															"src": "9193:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9243:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "9243:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9254:2:8",
																				"nodeType": "YulLiteral",
																				"src": "9254:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9239:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "9239:3:8"
																		},
																		"nativeSrc": "9239:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9239:18:8"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nativeSrc": "9259:34:8",
																		"nodeType": "YulLiteral",
																		"src": "9259:34:8",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9232:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "9232:6:8"
																},
																"nativeSrc": "9232:62:8",
																"nodeType": "YulFunctionCall",
																"src": "9232:62:8"
															},
															"nativeSrc": "9232:62:8",
															"nodeType": "YulExpressionStatement",
															"src": "9232:62:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9314:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "9314:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9325:2:8",
																				"nodeType": "YulLiteral",
																				"src": "9325:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9310:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "9310:3:8"
																		},
																		"nativeSrc": "9310:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9310:18:8"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nativeSrc": "9330:8:8",
																		"nodeType": "YulLiteral",
																		"src": "9330:8:8",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9303:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "9303:6:8"
																},
																"nativeSrc": "9303:36:8",
																"nodeType": "YulFunctionCall",
																"src": "9303:36:8"
															},
															"nativeSrc": "9303:36:8",
															"nodeType": "YulExpressionStatement",
															"src": "9303:36:8"
														},
														{
															"nativeSrc": "9348:27:8",
															"nodeType": "YulAssignment",
															"src": "9348:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9360:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "9360:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9371:3:8",
																		"nodeType": "YulLiteral",
																		"src": "9371:3:8",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9356:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "9356:3:8"
																},
																"nativeSrc": "9356:19:8",
																"nodeType": "YulFunctionCall",
																"src": "9356:19:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9348:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "9348:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8979:402:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9130:9:8",
														"nodeType": "YulTypedName",
														"src": "9130:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9144:4:8",
														"nodeType": "YulTypedName",
														"src": "9144:4:8",
														"type": ""
													}
												],
												"src": "8979:402:8"
											},
											{
												"body": {
													"nativeSrc": "9560:226:8",
													"nodeType": "YulBlock",
													"src": "9560:226:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9577:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "9577:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9588:2:8",
																		"nodeType": "YulLiteral",
																		"src": "9588:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9570:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "9570:6:8"
																},
																"nativeSrc": "9570:21:8",
																"nodeType": "YulFunctionCall",
																"src": "9570:21:8"
															},
															"nativeSrc": "9570:21:8",
															"nodeType": "YulExpressionStatement",
															"src": "9570:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9611:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "9611:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9622:2:8",
																				"nodeType": "YulLiteral",
																				"src": "9622:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9607:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "9607:3:8"
																		},
																		"nativeSrc": "9607:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9607:18:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9627:2:8",
																		"nodeType": "YulLiteral",
																		"src": "9627:2:8",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9600:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "9600:6:8"
																},
																"nativeSrc": "9600:30:8",
																"nodeType": "YulFunctionCall",
																"src": "9600:30:8"
															},
															"nativeSrc": "9600:30:8",
															"nodeType": "YulExpressionStatement",
															"src": "9600:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9650:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "9650:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9661:2:8",
																				"nodeType": "YulLiteral",
																				"src": "9661:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9646:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "9646:3:8"
																		},
																		"nativeSrc": "9646:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9646:18:8"
																	},
																	{
																		"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f20616464",
																		"kind": "string",
																		"nativeSrc": "9666:34:8",
																		"nodeType": "YulLiteral",
																		"src": "9666:34:8",
																		"type": "",
																		"value": "ERC20: approve from the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9639:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "9639:6:8"
																},
																"nativeSrc": "9639:62:8",
																"nodeType": "YulFunctionCall",
																"src": "9639:62:8"
															},
															"nativeSrc": "9639:62:8",
															"nodeType": "YulExpressionStatement",
															"src": "9639:62:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9721:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "9721:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9732:2:8",
																				"nodeType": "YulLiteral",
																				"src": "9732:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9717:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "9717:3:8"
																		},
																		"nativeSrc": "9717:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9717:18:8"
																	},
																	{
																		"hexValue": "72657373",
																		"kind": "string",
																		"nativeSrc": "9737:6:8",
																		"nodeType": "YulLiteral",
																		"src": "9737:6:8",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9710:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "9710:6:8"
																},
																"nativeSrc": "9710:34:8",
																"nodeType": "YulFunctionCall",
																"src": "9710:34:8"
															},
															"nativeSrc": "9710:34:8",
															"nodeType": "YulExpressionStatement",
															"src": "9710:34:8"
														},
														{
															"nativeSrc": "9753:27:8",
															"nodeType": "YulAssignment",
															"src": "9753:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9765:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "9765:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9776:3:8",
																		"nodeType": "YulLiteral",
																		"src": "9776:3:8",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9761:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "9761:3:8"
																},
																"nativeSrc": "9761:19:8",
																"nodeType": "YulFunctionCall",
																"src": "9761:19:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9753:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "9753:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9386:400:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9537:9:8",
														"nodeType": "YulTypedName",
														"src": "9537:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9551:4:8",
														"nodeType": "YulTypedName",
														"src": "9551:4:8",
														"type": ""
													}
												],
												"src": "9386:400:8"
											},
											{
												"body": {
													"nativeSrc": "9965:224:8",
													"nodeType": "YulBlock",
													"src": "9965:224:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9982:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "9982:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9993:2:8",
																		"nodeType": "YulLiteral",
																		"src": "9993:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9975:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "9975:6:8"
																},
																"nativeSrc": "9975:21:8",
																"nodeType": "YulFunctionCall",
																"src": "9975:21:8"
															},
															"nativeSrc": "9975:21:8",
															"nodeType": "YulExpressionStatement",
															"src": "9975:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10016:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "10016:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10027:2:8",
																				"nodeType": "YulLiteral",
																				"src": "10027:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10012:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "10012:3:8"
																		},
																		"nativeSrc": "10012:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "10012:18:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10032:2:8",
																		"nodeType": "YulLiteral",
																		"src": "10032:2:8",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10005:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "10005:6:8"
																},
																"nativeSrc": "10005:30:8",
																"nodeType": "YulFunctionCall",
																"src": "10005:30:8"
															},
															"nativeSrc": "10005:30:8",
															"nodeType": "YulExpressionStatement",
															"src": "10005:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10055:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "10055:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10066:2:8",
																				"nodeType": "YulLiteral",
																				"src": "10066:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10051:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "10051:3:8"
																		},
																		"nativeSrc": "10051:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "10051:18:8"
																	},
																	{
																		"hexValue": "45524332303a20617070726f766520746f20746865207a65726f206164647265",
																		"kind": "string",
																		"nativeSrc": "10071:34:8",
																		"nodeType": "YulLiteral",
																		"src": "10071:34:8",
																		"type": "",
																		"value": "ERC20: approve to the zero addre"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10044:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "10044:6:8"
																},
																"nativeSrc": "10044:62:8",
																"nodeType": "YulFunctionCall",
																"src": "10044:62:8"
															},
															"nativeSrc": "10044:62:8",
															"nodeType": "YulExpressionStatement",
															"src": "10044:62:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10126:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "10126:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10137:2:8",
																				"nodeType": "YulLiteral",
																				"src": "10137:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10122:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "10122:3:8"
																		},
																		"nativeSrc": "10122:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "10122:18:8"
																	},
																	{
																		"hexValue": "7373",
																		"kind": "string",
																		"nativeSrc": "10142:4:8",
																		"nodeType": "YulLiteral",
																		"src": "10142:4:8",
																		"type": "",
																		"value": "ss"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10115:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "10115:6:8"
																},
																"nativeSrc": "10115:32:8",
																"nodeType": "YulFunctionCall",
																"src": "10115:32:8"
															},
															"nativeSrc": "10115:32:8",
															"nodeType": "YulExpressionStatement",
															"src": "10115:32:8"
														},
														{
															"nativeSrc": "10156:27:8",
															"nodeType": "YulAssignment",
															"src": "10156:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10168:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "10168:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10179:3:8",
																		"nodeType": "YulLiteral",
																		"src": "10179:3:8",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10164:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "10164:3:8"
																},
																"nativeSrc": "10164:19:8",
																"nodeType": "YulFunctionCall",
																"src": "10164:19:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10156:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "10156:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9791:398:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9942:9:8",
														"nodeType": "YulTypedName",
														"src": "9942:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9956:4:8",
														"nodeType": "YulTypedName",
														"src": "9956:4:8",
														"type": ""
													}
												],
												"src": "9791:398:8"
											},
											{
												"body": {
													"nativeSrc": "10368:182:8",
													"nodeType": "YulBlock",
													"src": "10368:182:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10385:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "10385:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10396:2:8",
																		"nodeType": "YulLiteral",
																		"src": "10396:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10378:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "10378:6:8"
																},
																"nativeSrc": "10378:21:8",
																"nodeType": "YulFunctionCall",
																"src": "10378:21:8"
															},
															"nativeSrc": "10378:21:8",
															"nodeType": "YulExpressionStatement",
															"src": "10378:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10419:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "10419:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10430:2:8",
																				"nodeType": "YulLiteral",
																				"src": "10430:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10415:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "10415:3:8"
																		},
																		"nativeSrc": "10415:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "10415:18:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10435:2:8",
																		"nodeType": "YulLiteral",
																		"src": "10435:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10408:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "10408:6:8"
																},
																"nativeSrc": "10408:30:8",
																"nodeType": "YulFunctionCall",
																"src": "10408:30:8"
															},
															"nativeSrc": "10408:30:8",
															"nodeType": "YulExpressionStatement",
															"src": "10408:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10458:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "10458:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10469:2:8",
																				"nodeType": "YulLiteral",
																				"src": "10469:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10454:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "10454:3:8"
																		},
																		"nativeSrc": "10454:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "10454:18:8"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nativeSrc": "10474:34:8",
																		"nodeType": "YulLiteral",
																		"src": "10474:34:8",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10447:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "10447:6:8"
																},
																"nativeSrc": "10447:62:8",
																"nodeType": "YulFunctionCall",
																"src": "10447:62:8"
															},
															"nativeSrc": "10447:62:8",
															"nodeType": "YulExpressionStatement",
															"src": "10447:62:8"
														},
														{
															"nativeSrc": "10518:26:8",
															"nodeType": "YulAssignment",
															"src": "10518:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10530:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "10530:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10541:2:8",
																		"nodeType": "YulLiteral",
																		"src": "10541:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10526:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "10526:3:8"
																},
																"nativeSrc": "10526:18:8",
																"nodeType": "YulFunctionCall",
																"src": "10526:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10518:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "10518:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10194:356:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10345:9:8",
														"nodeType": "YulTypedName",
														"src": "10345:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10359:4:8",
														"nodeType": "YulTypedName",
														"src": "10359:4:8",
														"type": ""
													}
												],
												"src": "10194:356:8"
											},
											{
												"body": {
													"nativeSrc": "10729:181:8",
													"nodeType": "YulBlock",
													"src": "10729:181:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10746:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "10746:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10757:2:8",
																		"nodeType": "YulLiteral",
																		"src": "10757:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10739:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "10739:6:8"
																},
																"nativeSrc": "10739:21:8",
																"nodeType": "YulFunctionCall",
																"src": "10739:21:8"
															},
															"nativeSrc": "10739:21:8",
															"nodeType": "YulExpressionStatement",
															"src": "10739:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10780:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "10780:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10791:2:8",
																				"nodeType": "YulLiteral",
																				"src": "10791:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10776:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "10776:3:8"
																		},
																		"nativeSrc": "10776:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "10776:18:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10796:2:8",
																		"nodeType": "YulLiteral",
																		"src": "10796:2:8",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10769:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "10769:6:8"
																},
																"nativeSrc": "10769:30:8",
																"nodeType": "YulFunctionCall",
																"src": "10769:30:8"
															},
															"nativeSrc": "10769:30:8",
															"nodeType": "YulExpressionStatement",
															"src": "10769:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10819:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "10819:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10830:2:8",
																				"nodeType": "YulLiteral",
																				"src": "10830:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10815:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "10815:3:8"
																		},
																		"nativeSrc": "10815:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "10815:18:8"
																	},
																	{
																		"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
																		"kind": "string",
																		"nativeSrc": "10835:33:8",
																		"nodeType": "YulLiteral",
																		"src": "10835:33:8",
																		"type": "",
																		"value": "ReentrancyGuard: reentrant call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10808:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "10808:6:8"
																},
																"nativeSrc": "10808:61:8",
																"nodeType": "YulFunctionCall",
																"src": "10808:61:8"
															},
															"nativeSrc": "10808:61:8",
															"nodeType": "YulExpressionStatement",
															"src": "10808:61:8"
														},
														{
															"nativeSrc": "10878:26:8",
															"nodeType": "YulAssignment",
															"src": "10878:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10890:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "10890:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10901:2:8",
																		"nodeType": "YulLiteral",
																		"src": "10901:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10886:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "10886:3:8"
																},
																"nativeSrc": "10886:18:8",
																"nodeType": "YulFunctionCall",
																"src": "10886:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10878:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "10878:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10555:355:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10706:9:8",
														"nodeType": "YulTypedName",
														"src": "10706:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10720:4:8",
														"nodeType": "YulTypedName",
														"src": "10720:4:8",
														"type": ""
													}
												],
												"src": "10555:355:8"
											},
											{
												"body": {
													"nativeSrc": "11089:166:8",
													"nodeType": "YulBlock",
													"src": "11089:166:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11106:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "11106:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11117:2:8",
																		"nodeType": "YulLiteral",
																		"src": "11117:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11099:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "11099:6:8"
																},
																"nativeSrc": "11099:21:8",
																"nodeType": "YulFunctionCall",
																"src": "11099:21:8"
															},
															"nativeSrc": "11099:21:8",
															"nodeType": "YulExpressionStatement",
															"src": "11099:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11140:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "11140:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11151:2:8",
																				"nodeType": "YulLiteral",
																				"src": "11151:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11136:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "11136:3:8"
																		},
																		"nativeSrc": "11136:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "11136:18:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11156:2:8",
																		"nodeType": "YulLiteral",
																		"src": "11156:2:8",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11129:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "11129:6:8"
																},
																"nativeSrc": "11129:30:8",
																"nodeType": "YulFunctionCall",
																"src": "11129:30:8"
															},
															"nativeSrc": "11129:30:8",
															"nodeType": "YulExpressionStatement",
															"src": "11129:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11179:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "11179:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11190:2:8",
																				"nodeType": "YulLiteral",
																				"src": "11190:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11175:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "11175:3:8"
																		},
																		"nativeSrc": "11175:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "11175:18:8"
																	},
																	{
																		"hexValue": "5061757361626c653a20706175736564",
																		"kind": "string",
																		"nativeSrc": "11195:18:8",
																		"nodeType": "YulLiteral",
																		"src": "11195:18:8",
																		"type": "",
																		"value": "Pausable: paused"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11168:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "11168:6:8"
																},
																"nativeSrc": "11168:46:8",
																"nodeType": "YulFunctionCall",
																"src": "11168:46:8"
															},
															"nativeSrc": "11168:46:8",
															"nodeType": "YulExpressionStatement",
															"src": "11168:46:8"
														},
														{
															"nativeSrc": "11223:26:8",
															"nodeType": "YulAssignment",
															"src": "11223:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11235:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "11235:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11246:2:8",
																		"nodeType": "YulLiteral",
																		"src": "11246:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11231:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "11231:3:8"
																},
																"nativeSrc": "11231:18:8",
																"nodeType": "YulFunctionCall",
																"src": "11231:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11223:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "11223:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10915:340:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11066:9:8",
														"nodeType": "YulTypedName",
														"src": "11066:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11080:4:8",
														"nodeType": "YulTypedName",
														"src": "11080:4:8",
														"type": ""
													}
												],
												"src": "10915:340:8"
											},
											{
												"body": {
													"nativeSrc": "11434:179:8",
													"nodeType": "YulBlock",
													"src": "11434:179:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11451:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "11451:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11462:2:8",
																		"nodeType": "YulLiteral",
																		"src": "11462:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11444:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "11444:6:8"
																},
																"nativeSrc": "11444:21:8",
																"nodeType": "YulFunctionCall",
																"src": "11444:21:8"
															},
															"nativeSrc": "11444:21:8",
															"nodeType": "YulExpressionStatement",
															"src": "11444:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11485:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "11485:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11496:2:8",
																				"nodeType": "YulLiteral",
																				"src": "11496:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11481:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "11481:3:8"
																		},
																		"nativeSrc": "11481:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "11481:18:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11501:2:8",
																		"nodeType": "YulLiteral",
																		"src": "11501:2:8",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11474:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "11474:6:8"
																},
																"nativeSrc": "11474:30:8",
																"nodeType": "YulFunctionCall",
																"src": "11474:30:8"
															},
															"nativeSrc": "11474:30:8",
															"nodeType": "YulExpressionStatement",
															"src": "11474:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11524:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "11524:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11535:2:8",
																				"nodeType": "YulLiteral",
																				"src": "11535:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11520:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "11520:3:8"
																		},
																		"nativeSrc": "11520:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "11520:18:8"
																	},
																	{
																		"hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
																		"kind": "string",
																		"nativeSrc": "11540:31:8",
																		"nodeType": "YulLiteral",
																		"src": "11540:31:8",
																		"type": "",
																		"value": "ERC20: insufficient allowance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11513:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "11513:6:8"
																},
																"nativeSrc": "11513:59:8",
																"nodeType": "YulFunctionCall",
																"src": "11513:59:8"
															},
															"nativeSrc": "11513:59:8",
															"nodeType": "YulExpressionStatement",
															"src": "11513:59:8"
														},
														{
															"nativeSrc": "11581:26:8",
															"nodeType": "YulAssignment",
															"src": "11581:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11593:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "11593:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11604:2:8",
																		"nodeType": "YulLiteral",
																		"src": "11604:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11589:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "11589:3:8"
																},
																"nativeSrc": "11589:18:8",
																"nodeType": "YulFunctionCall",
																"src": "11589:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11581:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "11581:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11260:353:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11411:9:8",
														"nodeType": "YulTypedName",
														"src": "11411:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11425:4:8",
														"nodeType": "YulTypedName",
														"src": "11425:4:8",
														"type": ""
													}
												],
												"src": "11260:353:8"
											},
											{
												"body": {
													"nativeSrc": "11792:180:8",
													"nodeType": "YulBlock",
													"src": "11792:180:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11809:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "11809:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11820:2:8",
																		"nodeType": "YulLiteral",
																		"src": "11820:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11802:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "11802:6:8"
																},
																"nativeSrc": "11802:21:8",
																"nodeType": "YulFunctionCall",
																"src": "11802:21:8"
															},
															"nativeSrc": "11802:21:8",
															"nodeType": "YulExpressionStatement",
															"src": "11802:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11843:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "11843:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11854:2:8",
																				"nodeType": "YulLiteral",
																				"src": "11854:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11839:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "11839:3:8"
																		},
																		"nativeSrc": "11839:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "11839:18:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11859:2:8",
																		"nodeType": "YulLiteral",
																		"src": "11859:2:8",
																		"type": "",
																		"value": "30"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11832:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "11832:6:8"
																},
																"nativeSrc": "11832:30:8",
																"nodeType": "YulFunctionCall",
																"src": "11832:30:8"
															},
															"nativeSrc": "11832:30:8",
															"nodeType": "YulExpressionStatement",
															"src": "11832:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11882:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "11882:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11893:2:8",
																				"nodeType": "YulLiteral",
																				"src": "11893:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11878:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "11878:3:8"
																		},
																		"nativeSrc": "11878:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "11878:18:8"
																	},
																	{
																		"hexValue": "5265766f6c74436f696e3a207472616e736665722066726f6d207a65726f",
																		"kind": "string",
																		"nativeSrc": "11898:32:8",
																		"nodeType": "YulLiteral",
																		"src": "11898:32:8",
																		"type": "",
																		"value": "RevoltCoin: transfer from zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11871:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "11871:6:8"
																},
																"nativeSrc": "11871:60:8",
																"nodeType": "YulFunctionCall",
																"src": "11871:60:8"
															},
															"nativeSrc": "11871:60:8",
															"nodeType": "YulExpressionStatement",
															"src": "11871:60:8"
														},
														{
															"nativeSrc": "11940:26:8",
															"nodeType": "YulAssignment",
															"src": "11940:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11952:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "11952:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11963:2:8",
																		"nodeType": "YulLiteral",
																		"src": "11963:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11948:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "11948:3:8"
																},
																"nativeSrc": "11948:18:8",
																"nodeType": "YulFunctionCall",
																"src": "11948:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11940:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "11940:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_06ff2b837c3a2691c149e6a15b0de39f8430c204bf83c71a33a83fc03c2ce434__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11618:354:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11769:9:8",
														"nodeType": "YulTypedName",
														"src": "11769:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11783:4:8",
														"nodeType": "YulTypedName",
														"src": "11783:4:8",
														"type": ""
													}
												],
												"src": "11618:354:8"
											},
											{
												"body": {
													"nativeSrc": "12029:116:8",
													"nodeType": "YulBlock",
													"src": "12029:116:8",
													"statements": [
														{
															"nativeSrc": "12039:20:8",
															"nodeType": "YulAssignment",
															"src": "12039:20:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12054:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "12054:1:8"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "12057:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "12057:1:8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "12050:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "12050:3:8"
																},
																"nativeSrc": "12050:9:8",
																"nodeType": "YulFunctionCall",
																"src": "12050:9:8"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "12039:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "12039:7:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "12117:22:8",
																"nodeType": "YulBlock",
																"src": "12117:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "12119:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "12119:16:8"
																			},
																			"nativeSrc": "12119:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "12119:18:8"
																		},
																		"nativeSrc": "12119:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "12119:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "12088:1:8",
																						"nodeType": "YulIdentifier",
																						"src": "12088:1:8"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "12081:6:8",
																					"nodeType": "YulIdentifier",
																					"src": "12081:6:8"
																				},
																				"nativeSrc": "12081:9:8",
																				"nodeType": "YulFunctionCall",
																				"src": "12081:9:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "12095:1:8",
																						"nodeType": "YulIdentifier",
																						"src": "12095:1:8"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "12102:7:8",
																								"nodeType": "YulIdentifier",
																								"src": "12102:7:8"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "12111:1:8",
																								"nodeType": "YulIdentifier",
																								"src": "12111:1:8"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "12098:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "12098:3:8"
																						},
																						"nativeSrc": "12098:15:8",
																						"nodeType": "YulFunctionCall",
																						"src": "12098:15:8"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "12092:2:8",
																					"nodeType": "YulIdentifier",
																					"src": "12092:2:8"
																				},
																				"nativeSrc": "12092:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "12092:22:8"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "12078:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "12078:2:8"
																		},
																		"nativeSrc": "12078:37:8",
																		"nodeType": "YulFunctionCall",
																		"src": "12078:37:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "12071:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "12071:6:8"
																},
																"nativeSrc": "12071:45:8",
																"nodeType": "YulFunctionCall",
																"src": "12071:45:8"
															},
															"nativeSrc": "12068:71:8",
															"nodeType": "YulIf",
															"src": "12068:71:8"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "11977:168:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "12008:1:8",
														"nodeType": "YulTypedName",
														"src": "12008:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "12011:1:8",
														"nodeType": "YulTypedName",
														"src": "12011:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "12017:7:8",
														"nodeType": "YulTypedName",
														"src": "12017:7:8",
														"type": ""
													}
												],
												"src": "11977:168:8"
											},
											{
												"body": {
													"nativeSrc": "12196:171:8",
													"nodeType": "YulBlock",
													"src": "12196:171:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "12227:111:8",
																"nodeType": "YulBlock",
																"src": "12227:111:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "12248:1:8",
																					"nodeType": "YulLiteral",
																					"src": "12248:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "12255:3:8",
																							"nodeType": "YulLiteral",
																							"src": "12255:3:8",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "12260:10:8",
																							"nodeType": "YulLiteral",
																							"src": "12260:10:8",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "12251:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "12251:3:8"
																					},
																					"nativeSrc": "12251:20:8",
																					"nodeType": "YulFunctionCall",
																					"src": "12251:20:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "12241:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "12241:6:8"
																			},
																			"nativeSrc": "12241:31:8",
																			"nodeType": "YulFunctionCall",
																			"src": "12241:31:8"
																		},
																		"nativeSrc": "12241:31:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "12241:31:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "12292:1:8",
																					"nodeType": "YulLiteral",
																					"src": "12292:1:8",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "12295:4:8",
																					"nodeType": "YulLiteral",
																					"src": "12295:4:8",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "12285:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "12285:6:8"
																			},
																			"nativeSrc": "12285:15:8",
																			"nodeType": "YulFunctionCall",
																			"src": "12285:15:8"
																		},
																		"nativeSrc": "12285:15:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "12285:15:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "12320:1:8",
																					"nodeType": "YulLiteral",
																					"src": "12320:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "12323:4:8",
																					"nodeType": "YulLiteral",
																					"src": "12323:4:8",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "12313:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "12313:6:8"
																			},
																			"nativeSrc": "12313:15:8",
																			"nodeType": "YulFunctionCall",
																			"src": "12313:15:8"
																		},
																		"nativeSrc": "12313:15:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "12313:15:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "12216:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "12216:1:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "12209:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "12209:6:8"
																},
																"nativeSrc": "12209:9:8",
																"nodeType": "YulFunctionCall",
																"src": "12209:9:8"
															},
															"nativeSrc": "12206:132:8",
															"nodeType": "YulIf",
															"src": "12206:132:8"
														},
														{
															"nativeSrc": "12347:14:8",
															"nodeType": "YulAssignment",
															"src": "12347:14:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12356:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "12356:1:8"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "12359:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "12359:1:8"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "12352:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "12352:3:8"
																},
																"nativeSrc": "12352:9:8",
																"nodeType": "YulFunctionCall",
																"src": "12352:9:8"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "12347:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "12347:1:8"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "12150:217:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "12181:1:8",
														"nodeType": "YulTypedName",
														"src": "12181:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "12184:1:8",
														"nodeType": "YulTypedName",
														"src": "12184:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "12190:1:8",
														"nodeType": "YulTypedName",
														"src": "12190:1:8",
														"type": ""
													}
												],
												"src": "12150:217:8"
											},
											{
												"body": {
													"nativeSrc": "12421:79:8",
													"nodeType": "YulBlock",
													"src": "12421:79:8",
													"statements": [
														{
															"nativeSrc": "12431:17:8",
															"nodeType": "YulAssignment",
															"src": "12431:17:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12443:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "12443:1:8"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "12446:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "12446:1:8"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "12439:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "12439:3:8"
																},
																"nativeSrc": "12439:9:8",
																"nodeType": "YulFunctionCall",
																"src": "12439:9:8"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "12431:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "12431:4:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "12472:22:8",
																"nodeType": "YulBlock",
																"src": "12472:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "12474:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "12474:16:8"
																			},
																			"nativeSrc": "12474:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "12474:18:8"
																		},
																		"nativeSrc": "12474:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "12474:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "12463:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "12463:4:8"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "12469:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "12469:1:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "12460:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "12460:2:8"
																},
																"nativeSrc": "12460:11:8",
																"nodeType": "YulFunctionCall",
																"src": "12460:11:8"
															},
															"nativeSrc": "12457:37:8",
															"nodeType": "YulIf",
															"src": "12457:37:8"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "12372:128:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "12403:1:8",
														"nodeType": "YulTypedName",
														"src": "12403:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "12406:1:8",
														"nodeType": "YulTypedName",
														"src": "12406:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "12412:4:8",
														"nodeType": "YulTypedName",
														"src": "12412:4:8",
														"type": ""
													}
												],
												"src": "12372:128:8"
											},
											{
												"body": {
													"nativeSrc": "12679:181:8",
													"nodeType": "YulBlock",
													"src": "12679:181:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12696:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "12696:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12707:2:8",
																		"nodeType": "YulLiteral",
																		"src": "12707:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12689:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "12689:6:8"
																},
																"nativeSrc": "12689:21:8",
																"nodeType": "YulFunctionCall",
																"src": "12689:21:8"
															},
															"nativeSrc": "12689:21:8",
															"nodeType": "YulExpressionStatement",
															"src": "12689:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12730:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "12730:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12741:2:8",
																				"nodeType": "YulLiteral",
																				"src": "12741:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12726:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "12726:3:8"
																		},
																		"nativeSrc": "12726:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "12726:18:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12746:2:8",
																		"nodeType": "YulLiteral",
																		"src": "12746:2:8",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12719:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "12719:6:8"
																},
																"nativeSrc": "12719:30:8",
																"nodeType": "YulFunctionCall",
																"src": "12719:30:8"
															},
															"nativeSrc": "12719:30:8",
															"nodeType": "YulExpressionStatement",
															"src": "12719:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12769:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "12769:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12780:2:8",
																				"nodeType": "YulLiteral",
																				"src": "12780:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12765:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "12765:3:8"
																		},
																		"nativeSrc": "12765:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "12765:18:8"
																	},
																	{
																		"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
																		"kind": "string",
																		"nativeSrc": "12785:33:8",
																		"nodeType": "YulLiteral",
																		"src": "12785:33:8",
																		"type": "",
																		"value": "ERC20: mint to the zero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12758:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "12758:6:8"
																},
																"nativeSrc": "12758:61:8",
																"nodeType": "YulFunctionCall",
																"src": "12758:61:8"
															},
															"nativeSrc": "12758:61:8",
															"nodeType": "YulExpressionStatement",
															"src": "12758:61:8"
														},
														{
															"nativeSrc": "12828:26:8",
															"nodeType": "YulAssignment",
															"src": "12828:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12840:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "12840:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12851:2:8",
																		"nodeType": "YulLiteral",
																		"src": "12851:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12836:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "12836:3:8"
																},
																"nativeSrc": "12836:18:8",
																"nodeType": "YulFunctionCall",
																"src": "12836:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12828:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "12828:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "12505:355:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12656:9:8",
														"nodeType": "YulTypedName",
														"src": "12656:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12670:4:8",
														"nodeType": "YulTypedName",
														"src": "12670:4:8",
														"type": ""
													}
												],
												"src": "12505:355:8"
											},
											{
												"body": {
													"nativeSrc": "13039:227:8",
													"nodeType": "YulBlock",
													"src": "13039:227:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13056:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "13056:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13067:2:8",
																		"nodeType": "YulLiteral",
																		"src": "13067:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13049:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "13049:6:8"
																},
																"nativeSrc": "13049:21:8",
																"nodeType": "YulFunctionCall",
																"src": "13049:21:8"
															},
															"nativeSrc": "13049:21:8",
															"nodeType": "YulExpressionStatement",
															"src": "13049:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13090:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "13090:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13101:2:8",
																				"nodeType": "YulLiteral",
																				"src": "13101:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13086:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "13086:3:8"
																		},
																		"nativeSrc": "13086:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "13086:18:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13106:2:8",
																		"nodeType": "YulLiteral",
																		"src": "13106:2:8",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13079:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "13079:6:8"
																},
																"nativeSrc": "13079:30:8",
																"nodeType": "YulFunctionCall",
																"src": "13079:30:8"
															},
															"nativeSrc": "13079:30:8",
															"nodeType": "YulExpressionStatement",
															"src": "13079:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13129:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "13129:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13140:2:8",
																				"nodeType": "YulLiteral",
																				"src": "13140:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13125:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "13125:3:8"
																		},
																		"nativeSrc": "13125:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "13125:18:8"
																	},
																	{
																		"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f206164",
																		"kind": "string",
																		"nativeSrc": "13145:34:8",
																		"nodeType": "YulLiteral",
																		"src": "13145:34:8",
																		"type": "",
																		"value": "ERC20: transfer from the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13118:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "13118:6:8"
																},
																"nativeSrc": "13118:62:8",
																"nodeType": "YulFunctionCall",
																"src": "13118:62:8"
															},
															"nativeSrc": "13118:62:8",
															"nodeType": "YulExpressionStatement",
															"src": "13118:62:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13200:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "13200:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13211:2:8",
																				"nodeType": "YulLiteral",
																				"src": "13211:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13196:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "13196:3:8"
																		},
																		"nativeSrc": "13196:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "13196:18:8"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nativeSrc": "13216:7:8",
																		"nodeType": "YulLiteral",
																		"src": "13216:7:8",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13189:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "13189:6:8"
																},
																"nativeSrc": "13189:35:8",
																"nodeType": "YulFunctionCall",
																"src": "13189:35:8"
															},
															"nativeSrc": "13189:35:8",
															"nodeType": "YulExpressionStatement",
															"src": "13189:35:8"
														},
														{
															"nativeSrc": "13233:27:8",
															"nodeType": "YulAssignment",
															"src": "13233:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13245:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "13245:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13256:3:8",
																		"nodeType": "YulLiteral",
																		"src": "13256:3:8",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13241:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "13241:3:8"
																},
																"nativeSrc": "13241:19:8",
																"nodeType": "YulFunctionCall",
																"src": "13241:19:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13233:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "13233:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "12865:401:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13016:9:8",
														"nodeType": "YulTypedName",
														"src": "13016:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13030:4:8",
														"nodeType": "YulTypedName",
														"src": "13030:4:8",
														"type": ""
													}
												],
												"src": "12865:401:8"
											},
											{
												"body": {
													"nativeSrc": "13445:225:8",
													"nodeType": "YulBlock",
													"src": "13445:225:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13462:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "13462:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13473:2:8",
																		"nodeType": "YulLiteral",
																		"src": "13473:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13455:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "13455:6:8"
																},
																"nativeSrc": "13455:21:8",
																"nodeType": "YulFunctionCall",
																"src": "13455:21:8"
															},
															"nativeSrc": "13455:21:8",
															"nodeType": "YulExpressionStatement",
															"src": "13455:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13496:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "13496:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13507:2:8",
																				"nodeType": "YulLiteral",
																				"src": "13507:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13492:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "13492:3:8"
																		},
																		"nativeSrc": "13492:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "13492:18:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13512:2:8",
																		"nodeType": "YulLiteral",
																		"src": "13512:2:8",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13485:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "13485:6:8"
																},
																"nativeSrc": "13485:30:8",
																"nodeType": "YulFunctionCall",
																"src": "13485:30:8"
															},
															"nativeSrc": "13485:30:8",
															"nodeType": "YulExpressionStatement",
															"src": "13485:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13535:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "13535:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13546:2:8",
																				"nodeType": "YulLiteral",
																				"src": "13546:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13531:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "13531:3:8"
																		},
																		"nativeSrc": "13531:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "13531:18:8"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472",
																		"kind": "string",
																		"nativeSrc": "13551:34:8",
																		"nodeType": "YulLiteral",
																		"src": "13551:34:8",
																		"type": "",
																		"value": "ERC20: transfer to the zero addr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13524:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "13524:6:8"
																},
																"nativeSrc": "13524:62:8",
																"nodeType": "YulFunctionCall",
																"src": "13524:62:8"
															},
															"nativeSrc": "13524:62:8",
															"nodeType": "YulExpressionStatement",
															"src": "13524:62:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13606:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "13606:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13617:2:8",
																				"nodeType": "YulLiteral",
																				"src": "13617:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13602:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "13602:3:8"
																		},
																		"nativeSrc": "13602:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "13602:18:8"
																	},
																	{
																		"hexValue": "657373",
																		"kind": "string",
																		"nativeSrc": "13622:5:8",
																		"nodeType": "YulLiteral",
																		"src": "13622:5:8",
																		"type": "",
																		"value": "ess"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13595:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "13595:6:8"
																},
																"nativeSrc": "13595:33:8",
																"nodeType": "YulFunctionCall",
																"src": "13595:33:8"
															},
															"nativeSrc": "13595:33:8",
															"nodeType": "YulExpressionStatement",
															"src": "13595:33:8"
														},
														{
															"nativeSrc": "13637:27:8",
															"nodeType": "YulAssignment",
															"src": "13637:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13649:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "13649:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13660:3:8",
																		"nodeType": "YulLiteral",
																		"src": "13660:3:8",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13645:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "13645:3:8"
																},
																"nativeSrc": "13645:19:8",
																"nodeType": "YulFunctionCall",
																"src": "13645:19:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13637:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "13637:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "13271:399:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13422:9:8",
														"nodeType": "YulTypedName",
														"src": "13422:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13436:4:8",
														"nodeType": "YulTypedName",
														"src": "13436:4:8",
														"type": ""
													}
												],
												"src": "13271:399:8"
											},
											{
												"body": {
													"nativeSrc": "13849:228:8",
													"nodeType": "YulBlock",
													"src": "13849:228:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13866:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "13866:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13877:2:8",
																		"nodeType": "YulLiteral",
																		"src": "13877:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13859:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "13859:6:8"
																},
																"nativeSrc": "13859:21:8",
																"nodeType": "YulFunctionCall",
																"src": "13859:21:8"
															},
															"nativeSrc": "13859:21:8",
															"nodeType": "YulExpressionStatement",
															"src": "13859:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13900:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "13900:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13911:2:8",
																				"nodeType": "YulLiteral",
																				"src": "13911:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13896:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "13896:3:8"
																		},
																		"nativeSrc": "13896:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "13896:18:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13916:2:8",
																		"nodeType": "YulLiteral",
																		"src": "13916:2:8",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13889:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "13889:6:8"
																},
																"nativeSrc": "13889:30:8",
																"nodeType": "YulFunctionCall",
																"src": "13889:30:8"
															},
															"nativeSrc": "13889:30:8",
															"nodeType": "YulExpressionStatement",
															"src": "13889:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13939:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "13939:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13950:2:8",
																				"nodeType": "YulLiteral",
																				"src": "13950:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13935:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "13935:3:8"
																		},
																		"nativeSrc": "13935:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "13935:18:8"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062",
																		"kind": "string",
																		"nativeSrc": "13955:34:8",
																		"nodeType": "YulLiteral",
																		"src": "13955:34:8",
																		"type": "",
																		"value": "ERC20: transfer amount exceeds b"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13928:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "13928:6:8"
																},
																"nativeSrc": "13928:62:8",
																"nodeType": "YulFunctionCall",
																"src": "13928:62:8"
															},
															"nativeSrc": "13928:62:8",
															"nodeType": "YulExpressionStatement",
															"src": "13928:62:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14010:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "14010:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14021:2:8",
																				"nodeType": "YulLiteral",
																				"src": "14021:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14006:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "14006:3:8"
																		},
																		"nativeSrc": "14006:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "14006:18:8"
																	},
																	{
																		"hexValue": "616c616e6365",
																		"kind": "string",
																		"nativeSrc": "14026:8:8",
																		"nodeType": "YulLiteral",
																		"src": "14026:8:8",
																		"type": "",
																		"value": "alance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13999:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "13999:6:8"
																},
																"nativeSrc": "13999:36:8",
																"nodeType": "YulFunctionCall",
																"src": "13999:36:8"
															},
															"nativeSrc": "13999:36:8",
															"nodeType": "YulExpressionStatement",
															"src": "13999:36:8"
														},
														{
															"nativeSrc": "14044:27:8",
															"nodeType": "YulAssignment",
															"src": "14044:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14056:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "14056:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14067:3:8",
																		"nodeType": "YulLiteral",
																		"src": "14067:3:8",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14052:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "14052:3:8"
																},
																"nativeSrc": "14052:19:8",
																"nodeType": "YulFunctionCall",
																"src": "14052:19:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14044:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "14044:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "13675:402:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13826:9:8",
														"nodeType": "YulTypedName",
														"src": "13826:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13840:4:8",
														"nodeType": "YulTypedName",
														"src": "13840:4:8",
														"type": ""
													}
												],
												"src": "13675:402:8"
											},
											{
												"body": {
													"nativeSrc": "14256:170:8",
													"nodeType": "YulBlock",
													"src": "14256:170:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14273:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "14273:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14284:2:8",
																		"nodeType": "YulLiteral",
																		"src": "14284:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14266:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "14266:6:8"
																},
																"nativeSrc": "14266:21:8",
																"nodeType": "YulFunctionCall",
																"src": "14266:21:8"
															},
															"nativeSrc": "14266:21:8",
															"nodeType": "YulExpressionStatement",
															"src": "14266:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14307:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "14307:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14318:2:8",
																				"nodeType": "YulLiteral",
																				"src": "14318:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14303:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "14303:3:8"
																		},
																		"nativeSrc": "14303:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "14303:18:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14323:2:8",
																		"nodeType": "YulLiteral",
																		"src": "14323:2:8",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14296:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "14296:6:8"
																},
																"nativeSrc": "14296:30:8",
																"nodeType": "YulFunctionCall",
																"src": "14296:30:8"
															},
															"nativeSrc": "14296:30:8",
															"nodeType": "YulExpressionStatement",
															"src": "14296:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14346:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "14346:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14357:2:8",
																				"nodeType": "YulLiteral",
																				"src": "14357:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14342:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "14342:3:8"
																		},
																		"nativeSrc": "14342:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "14342:18:8"
																	},
																	{
																		"hexValue": "5061757361626c653a206e6f7420706175736564",
																		"kind": "string",
																		"nativeSrc": "14362:22:8",
																		"nodeType": "YulLiteral",
																		"src": "14362:22:8",
																		"type": "",
																		"value": "Pausable: not paused"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14335:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "14335:6:8"
																},
																"nativeSrc": "14335:50:8",
																"nodeType": "YulFunctionCall",
																"src": "14335:50:8"
															},
															"nativeSrc": "14335:50:8",
															"nodeType": "YulExpressionStatement",
															"src": "14335:50:8"
														},
														{
															"nativeSrc": "14394:26:8",
															"nodeType": "YulAssignment",
															"src": "14394:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14406:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "14406:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14417:2:8",
																		"nodeType": "YulLiteral",
																		"src": "14417:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14402:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "14402:3:8"
																},
																"nativeSrc": "14402:18:8",
																"nodeType": "YulFunctionCall",
																"src": "14402:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14394:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "14394:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14082:344:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14233:9:8",
														"nodeType": "YulTypedName",
														"src": "14233:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14247:4:8",
														"nodeType": "YulTypedName",
														"src": "14247:4:8",
														"type": ""
													}
												],
												"src": "14082:344:8"
											},
											{
												"body": {
													"nativeSrc": "14605:229:8",
													"nodeType": "YulBlock",
													"src": "14605:229:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14622:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "14622:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14633:2:8",
																		"nodeType": "YulLiteral",
																		"src": "14633:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14615:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "14615:6:8"
																},
																"nativeSrc": "14615:21:8",
																"nodeType": "YulFunctionCall",
																"src": "14615:21:8"
															},
															"nativeSrc": "14615:21:8",
															"nodeType": "YulExpressionStatement",
															"src": "14615:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14656:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "14656:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14667:2:8",
																				"nodeType": "YulLiteral",
																				"src": "14667:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14652:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "14652:3:8"
																		},
																		"nativeSrc": "14652:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "14652:18:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14672:2:8",
																		"nodeType": "YulLiteral",
																		"src": "14672:2:8",
																		"type": "",
																		"value": "39"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14645:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "14645:6:8"
																},
																"nativeSrc": "14645:30:8",
																"nodeType": "YulFunctionCall",
																"src": "14645:30:8"
															},
															"nativeSrc": "14645:30:8",
															"nodeType": "YulExpressionStatement",
															"src": "14645:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14695:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "14695:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14706:2:8",
																				"nodeType": "YulLiteral",
																				"src": "14706:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14691:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "14691:3:8"
																		},
																		"nativeSrc": "14691:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "14691:18:8"
																	},
																	{
																		"hexValue": "5265766f6c74436f696e3a20746f6b656e207472616e73666572207768696c65",
																		"kind": "string",
																		"nativeSrc": "14711:34:8",
																		"nodeType": "YulLiteral",
																		"src": "14711:34:8",
																		"type": "",
																		"value": "RevoltCoin: token transfer while"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14684:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "14684:6:8"
																},
																"nativeSrc": "14684:62:8",
																"nodeType": "YulFunctionCall",
																"src": "14684:62:8"
															},
															"nativeSrc": "14684:62:8",
															"nodeType": "YulExpressionStatement",
															"src": "14684:62:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14766:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "14766:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14777:2:8",
																				"nodeType": "YulLiteral",
																				"src": "14777:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14762:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "14762:3:8"
																		},
																		"nativeSrc": "14762:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "14762:18:8"
																	},
																	{
																		"hexValue": "20706175736564",
																		"kind": "string",
																		"nativeSrc": "14782:9:8",
																		"nodeType": "YulLiteral",
																		"src": "14782:9:8",
																		"type": "",
																		"value": " paused"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14755:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "14755:6:8"
																},
																"nativeSrc": "14755:37:8",
																"nodeType": "YulFunctionCall",
																"src": "14755:37:8"
															},
															"nativeSrc": "14755:37:8",
															"nodeType": "YulExpressionStatement",
															"src": "14755:37:8"
														},
														{
															"nativeSrc": "14801:27:8",
															"nodeType": "YulAssignment",
															"src": "14801:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14813:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "14813:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14824:3:8",
																		"nodeType": "YulLiteral",
																		"src": "14824:3:8",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14809:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "14809:3:8"
																},
																"nativeSrc": "14809:19:8",
																"nodeType": "YulFunctionCall",
																"src": "14809:19:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14801:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "14801:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9d18d00bc92e4e4805f27a8b4b8bfb1589f27d087a4178b7035486f9b373e88c__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14431:403:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14582:9:8",
														"nodeType": "YulTypedName",
														"src": "14582:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14596:4:8",
														"nodeType": "YulTypedName",
														"src": "14596:4:8",
														"type": ""
													}
												],
												"src": "14431:403:8"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        mcopy(add(headStart, 64), add(value0, 32), length)\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := 0\n        value := calldataload(add(headStart, 32))\n        value1 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        let value := 0\n        value := calldataload(add(headStart, 64))\n        value2 := value\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_array_address_dyn_calldata(offset, end) -> arrayPos, length\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n        arrayPos := add(offset, 0x20)\n        if gt(add(add(offset, shl(5, length)), 0x20), end) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptrt_array$_t_uint256_$dyn_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let value0_1, value1_1 := abi_decode_array_address_dyn_calldata(add(headStart, offset), dataEnd)\n        value0 := value0_1\n        value1 := value1_1\n        let offset_1 := calldataload(add(headStart, 32))\n        if gt(offset_1, 0xffffffffffffffff) { revert(0, 0) }\n        let value2_1, value3_1 := abi_decode_array_address_dyn_calldata(add(headStart, offset_1), dataEnd)\n        value2 := value2_1\n        value3 := value3_1\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_f40d0a2e892c264da38217576433c47dde07950da469267cc230af5b81742164__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"RevoltCoin: invalid new owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_48d9dea795d8d010580a5b191d0fe7c1ee70cd850707a0d7e7aba7c702de6be1__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 12)\n        mstore(add(headStart, 64), \"Fee too high\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_stringliteral_1fe52789d0d7af2d15362e183c36f1797727ca5f188b9566e5b4f8664703b09d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 28)\n        mstore(add(headStart, 64), \"RevoltCoin: transfer to zero\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_833ac5256bd749e59e09b3d79e65697a9a895b45768ee0e3858ea9958c2aa611__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 18)\n        mstore(add(headStart, 64), \"Exceeds max supply\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_15227e3bddab765d9bb4e7d7cdcfba4113a4a240234404a19bf52517f300a907__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"RevoltCoin: only deployer can ai\")\n        mstore(add(headStart, 96), \"rdrop\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_dfdfe6b2c4737ccf9b5de38c5fa288f07b9e7b09f4ddf3349651879a31de197c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"RevoltCoin: airdrop arrays misma\")\n        mstore(add(headStart, 96), \"tch\")\n        tail := add(headStart, 128)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_stringliteral_c9413a64808d023ff99714f487ec1c68602a2e0a65fe8fb8d8342cfe90ada8f7__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 30)\n        mstore(add(headStart, 64), \"RevoltCoin: exceeds max supply\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: decreased allowance below\")\n        mstore(add(headStart, 96), \" zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_abde4a8a179b075c2757f63dc76a9bd13de52babc04234150155d1395f84c84e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 27)\n        mstore(add(headStart, 64), \"RevoltCoin: invalid address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_594ecc1988a2944fffb539907d9c82c812f8d36cd0dd70310ce39c57141f2636__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"RevoltCoin: fee recipient must b\")\n        mstore(add(headStart, 96), \"e EOA\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ReentrancyGuard: reentrant call\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"Pausable: paused\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"ERC20: insufficient allowance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_06ff2b837c3a2691c149e6a15b0de39f8430c204bf83c71a33a83fc03c2ce434__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 30)\n        mstore(add(headStart, 64), \"RevoltCoin: transfer from zero\")\n        tail := add(headStart, 96)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ERC20: mint to the zero address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds b\")\n        mstore(add(headStart, 96), \"alance\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Pausable: not paused\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_9d18d00bc92e4e4805f27a8b4b8bfb1589f27d087a4178b7035486f9b373e88c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 39)\n        mstore(add(headStart, 64), \"RevoltCoin: token transfer while\")\n        mstore(add(headStart, 96), \" paused\")\n        tail := add(headStart, 128)\n    }\n}",
									"id": 8,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"31": [
									{
										"length": 32,
										"start": 900
									},
									{
										"length": 32,
										"start": 1955
									}
								]
							},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1BB JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x67243482 GT PUSH2 0xF3 JUMPI DUP1 PUSH4 0xA457C2D7 GT PUSH2 0x93 JUMPI DUP1 PUSH4 0xDD62ED3E GT PUSH2 0x6E JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x3A6 JUMPI DUP1 PUSH4 0xE74B981B EQ PUSH2 0x3B9 JUMPI DUP1 PUSH4 0xEA2F0B37 EQ PUSH2 0x3CC JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x3DF JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x359 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x36C JUMPI DUP1 PUSH4 0xD5F39488 EQ PUSH2 0x37F JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8456CB59 GT PUSH2 0xCE JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x32F JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x337 JUMPI DUP1 PUSH4 0x94544E64 EQ PUSH2 0x348 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x351 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x67243482 EQ PUSH2 0x2EC JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2FF JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x327 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x32CB6B0C GT PUSH2 0x15E JUMPI DUP1 PUSH4 0x40C10F19 GT PUSH2 0x139 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x289 JUMPI DUP1 PUSH4 0x437823EC EQ PUSH2 0x29C JUMPI DUP1 PUSH4 0x46904840 EQ PUSH2 0x2AF JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x2DA JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x32CB6B0C EQ PUSH2 0x25C JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x26E JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x281 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0x199 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x215 JUMPI DUP1 PUSH4 0x1F36D925 EQ PUSH2 0x227 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x23A JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x24D JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1BF JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1DD JUMPI DUP1 PUSH4 0x1815C208 EQ PUSH2 0x200 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1C7 PUSH2 0x3F2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D4 SWAP2 SWAP1 PUSH2 0x1530 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F0 PUSH2 0x1EB CALLDATASIZE PUSH1 0x4 PUSH2 0x1580 JUMP JUMPDEST PUSH2 0x482 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1D4 JUMP JUMPDEST PUSH2 0x213 PUSH2 0x20E CALLDATASIZE PUSH1 0x4 PUSH2 0x15A8 JUMP JUMPDEST PUSH2 0x49B JUMP JUMPDEST STOP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1D4 JUMP JUMPDEST PUSH2 0x213 PUSH2 0x235 CALLDATASIZE PUSH1 0x4 PUSH2 0x15C1 JUMP JUMPDEST PUSH2 0x55B JUMP JUMPDEST PUSH2 0x1F0 PUSH2 0x248 CALLDATASIZE PUSH1 0x4 PUSH2 0x15D8 JUMP JUMPDEST PUSH2 0x5E9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1D4 JUMP JUMPDEST PUSH2 0x219 PUSH11 0x84595161401484A000000 DUP2 JUMP JUMPDEST PUSH2 0x1F0 PUSH2 0x27C CALLDATASIZE PUSH1 0x4 PUSH2 0x1580 JUMP JUMPDEST PUSH2 0x67A JUMP JUMPDEST PUSH2 0x213 PUSH2 0x69B JUMP JUMPDEST PUSH2 0x213 PUSH2 0x297 CALLDATASIZE PUSH1 0x4 PUSH2 0x1580 JUMP JUMPDEST PUSH2 0x6AD JUMP JUMPDEST PUSH2 0x213 PUSH2 0x2AA CALLDATASIZE PUSH1 0x4 PUSH2 0x15A8 JUMP JUMPDEST PUSH2 0x726 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH2 0x2C2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1D4 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1F0 JUMP JUMPDEST PUSH2 0x213 PUSH2 0x2FA CALLDATASIZE PUSH1 0x4 PUSH2 0x165A JUMP JUMPDEST PUSH2 0x788 JUMP JUMPDEST PUSH2 0x219 PUSH2 0x30D CALLDATASIZE PUSH1 0x4 PUSH2 0x15A8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x213 PUSH2 0xA0E JUMP JUMPDEST PUSH2 0x213 PUSH2 0xA1F JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2C2 JUMP JUMPDEST PUSH2 0x219 PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1C7 PUSH2 0xA2F JUMP JUMPDEST PUSH2 0x1F0 PUSH2 0x367 CALLDATASIZE PUSH1 0x4 PUSH2 0x1580 JUMP JUMPDEST PUSH2 0xA3E JUMP JUMPDEST PUSH2 0x1F0 PUSH2 0x37A CALLDATASIZE PUSH1 0x4 PUSH2 0x1580 JUMP JUMPDEST PUSH2 0xAC3 JUMP JUMPDEST PUSH2 0x2C2 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x219 PUSH2 0x3B4 CALLDATASIZE PUSH1 0x4 PUSH2 0x16C6 JUMP JUMPDEST PUSH2 0xAEC JUMP JUMPDEST PUSH2 0x213 PUSH2 0x3C7 CALLDATASIZE PUSH1 0x4 PUSH2 0x15A8 JUMP JUMPDEST PUSH2 0xB16 JUMP JUMPDEST PUSH2 0x213 PUSH2 0x3DA CALLDATASIZE PUSH1 0x4 PUSH2 0x15A8 JUMP JUMPDEST PUSH2 0xC34 JUMP JUMPDEST PUSH2 0x213 PUSH2 0x3ED CALLDATASIZE PUSH1 0x4 PUSH2 0x15A8 JUMP JUMPDEST PUSH2 0xC8C JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x401 SWAP1 PUSH2 0x16F7 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x42D SWAP1 PUSH2 0x16F7 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x478 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x44F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x478 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x45B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x48F DUP2 DUP6 DUP6 PUSH2 0xD02 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x4A3 PUSH2 0xE25 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x4FE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265766F6C74436F696E3A20696E76616C6964206E6577206F776E6572000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x51A PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8292FCE18FA69EDF4DB7B94EA2E58241DF0AE57F97E0A6C9B29067028BF92D76 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x558 DUP2 PUSH2 0xE7F JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x563 PUSH2 0xE25 JUMP JUMPDEST PUSH1 0xA DUP2 GT ISZERO PUSH2 0x5A3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x8CCACA40E8DEDE40D0D2CED PUSH1 0xA3 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4F5 JUMP JUMPDEST PUSH1 0x7 DUP1 SLOAD SWAP1 DUP3 SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 SWAP1 MSTORE PUSH32 0xD141D90E37CFF90C4910D122C1B6BC4951144BBF7AD06233CE2A2954E5C25E3B SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x5F2 PUSH2 0xED0 JUMP JUMPDEST PUSH2 0x5FA PUSH2 0xF29 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x650 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265766F6C74436F696E3A207472616E7366657220746F207A65726F00000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4F5 JUMP JUMPDEST PUSH2 0x65B DUP5 CALLER DUP5 PUSH2 0xF76 JUMP JUMPDEST PUSH2 0x666 DUP5 DUP5 DUP5 PUSH2 0xFE8 JUMP JUMPDEST POP PUSH1 0x1 PUSH2 0x673 PUSH1 0x1 PUSH1 0x6 SSTORE JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x48F DUP2 DUP6 DUP6 PUSH2 0x68C DUP4 DUP4 PUSH2 0xAEC JUMP JUMPDEST PUSH2 0x696 SWAP2 SWAP1 PUSH2 0x1743 JUMP JUMPDEST PUSH2 0xD02 JUMP JUMPDEST PUSH2 0x6A3 PUSH2 0xE25 JUMP JUMPDEST PUSH2 0x6AB PUSH2 0x1169 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x6B5 PUSH2 0xE25 JUMP JUMPDEST PUSH11 0x84595161401484A000000 DUP2 PUSH2 0x6CB PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x6D5 SWAP2 SWAP1 PUSH2 0x1743 JUMP JUMPDEST GT ISZERO PUSH2 0x718 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x45786365656473206D617820737570706C79 PUSH1 0x70 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4F5 JUMP JUMPDEST PUSH2 0x722 DUP3 DUP3 PUSH2 0x11BE JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x72E PUSH2 0xE25 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE SWAP1 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x58C3E0504C69D3A92726966F152A771E0F8F6AD4DACA1AE9055A38ABA1FD2B62 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x790 PUSH2 0xED0 JUMP JUMPDEST PUSH2 0x798 PUSH2 0xF29 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0x81E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265766F6C74436F696E3A206F6E6C79206465706C6F7965722063616E206169 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x7264726F7 PUSH1 0xDC SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4F5 JUMP JUMPDEST DUP3 DUP2 EQ PUSH2 0x879 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265766F6C74436F696E3A2061697264726F7020617272617973206D69736D61 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0xE8C6D PUSH1 0xEB SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4F5 JUMP JUMPDEST PUSH0 DUP1 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x8B2 JUMPI DUP4 DUP4 DUP3 DUP2 DUP2 LT PUSH2 0x896 JUMPI PUSH2 0x896 PUSH2 0x1756 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD DUP3 PUSH2 0x8A8 SWAP2 SWAP1 PUSH2 0x1743 JUMP JUMPDEST SWAP2 POP PUSH1 0x1 ADD PUSH2 0x87C JUMP JUMPDEST POP PUSH11 0x84595161401484A000000 DUP2 PUSH2 0x8C9 PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x8D3 SWAP2 SWAP1 PUSH2 0x1743 JUMP JUMPDEST GT ISZERO PUSH2 0x921 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265766F6C74436F696E3A2065786365656473206D617820737570706C790000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4F5 JUMP JUMPDEST PUSH0 JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x9FC JUMPI PUSH2 0x973 DUP7 DUP7 DUP4 DUP2 DUP2 LT PUSH2 0x940 JUMPI PUSH2 0x940 PUSH2 0x1756 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x955 SWAP2 SWAP1 PUSH2 0x15A8 JUMP JUMPDEST DUP6 DUP6 DUP5 DUP2 DUP2 LT PUSH2 0x967 JUMPI PUSH2 0x967 PUSH2 0x1756 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD PUSH2 0x11BE JUMP JUMPDEST DUP6 DUP6 DUP3 DUP2 DUP2 LT PUSH2 0x985 JUMPI PUSH2 0x985 PUSH2 0x1756 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x99A SWAP2 SWAP1 PUSH2 0x15A8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C32C568416FCF97BE35CE5B27844CFDDCD63A67A1A602C3595BA5DAC38F303A DUP6 DUP6 DUP5 DUP2 DUP2 LT PUSH2 0x9D6 JUMPI PUSH2 0x9D6 PUSH2 0x1756 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD PUSH1 0x40 MLOAD PUSH2 0x9EC SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x1 ADD PUSH2 0x923 JUMP JUMPDEST POP POP PUSH2 0xA08 PUSH1 0x1 PUSH1 0x6 SSTORE JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0xA16 PUSH2 0xE25 JUMP JUMPDEST PUSH2 0x6AB PUSH0 PUSH2 0xE7F JUMP JUMPDEST PUSH2 0xA27 PUSH2 0xE25 JUMP JUMPDEST PUSH2 0x6AB PUSH2 0x1286 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x401 SWAP1 PUSH2 0x16F7 JUMP JUMPDEST PUSH0 CALLER DUP2 PUSH2 0xA4B DUP3 DUP7 PUSH2 0xAEC JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0xAAB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4F5 JUMP JUMPDEST PUSH2 0xAB8 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0xD02 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xACC PUSH2 0xED0 JUMP JUMPDEST PUSH2 0xAD4 PUSH2 0xF29 JUMP JUMPDEST PUSH2 0xADF CALLER DUP5 DUP5 PUSH2 0xFE8 JUMP JUMPDEST POP PUSH1 0x1 PUSH2 0x495 PUSH1 0x1 PUSH1 0x6 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xB1E PUSH2 0xE25 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xB74 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265766F6C74436F696E3A20696E76616C696420616464726573730000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4F5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND EXTCODESIZE ISZERO PUSH2 0xBDA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265766F6C74436F696E3A2066656520726563697069656E74206D7573742062 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6520454F41 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4F5 JUMP JUMPDEST PUSH1 0x8 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 DUP1 MLOAD SWAP2 SWAP1 SWAP3 AND DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH32 0xAAEBCF1BFA00580E41D966056B48521FA9F202645C86D4DDF28113E617C1B1D3 SWAP2 ADD PUSH2 0x5DD JUMP JUMPDEST PUSH2 0xC3C PUSH2 0xE25 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE SWAP1 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x4F6A6B6EFE34EC6478021AA9FB7F6980E78EA3A10C74074A8CE49D5D3EBF1F7E SWAP2 ADD PUSH2 0x77D JUMP JUMPDEST PUSH2 0xC94 PUSH2 0xE25 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xCF9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4F5 JUMP JUMPDEST PUSH2 0x558 DUP2 PUSH2 0xE7F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xD64 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4F5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xDC5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4F5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x6AB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4F5 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x6 SLOAD SUB PUSH2 0xF22 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4F5 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x6 SSTORE JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x6AB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x14185D5CD8589B194E881C185D5CD959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4F5 JUMP JUMPDEST PUSH0 PUSH2 0xF81 DUP5 DUP5 PUSH2 0xAEC JUMP JUMPDEST SWAP1 POP PUSH0 NOT DUP2 EQ PUSH2 0xA08 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xFDB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4F5 JUMP JUMPDEST PUSH2 0xA08 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0xD02 JUMP JUMPDEST PUSH2 0xFF0 PUSH2 0xF29 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1046 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265766F6C74436F696E3A207472616E736665722066726F6D207A65726F0000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4F5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x109C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265766F6C74436F696E3A207472616E7366657220746F207A65726F00000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4F5 JUMP JUMPDEST PUSH0 PUSH1 0x7 SLOAD GT DUP1 ISZERO PUSH2 0x10B7 JUMPI POP PUSH1 0x8 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x10DB JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x10FF JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST ISZERO PUSH2 0x1159 JUMPI PUSH0 PUSH1 0x64 PUSH1 0x7 SLOAD DUP4 PUSH2 0x1115 SWAP2 SWAP1 PUSH2 0x176A JUMP JUMPDEST PUSH2 0x111F SWAP2 SWAP1 PUSH2 0x1781 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x112C DUP3 DUP5 PUSH2 0x17A0 JUMP JUMPDEST PUSH1 0x8 SLOAD SWAP1 SWAP2 POP PUSH2 0x1147 SWAP1 DUP7 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH2 0x12C9 JUMP JUMPDEST PUSH2 0x1152 DUP6 DUP6 DUP4 PUSH2 0x12C9 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1164 DUP4 DUP4 DUP4 PUSH2 0x12C9 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x1171 PUSH2 0x1476 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND SWAP1 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA CALLER JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1214 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4F5 JUMP JUMPDEST PUSH2 0x121F PUSH0 DUP4 DUP4 PUSH2 0x14C6 JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1230 SWAP2 SWAP1 PUSH2 0x1743 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP7 ADD SWAP1 SSTORE MLOAD DUP5 DUP2 MSTORE PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x128E PUSH2 0xF29 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL OR SWAP1 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x11A1 CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x132D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4F5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x138F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4F5 JUMP JUMPDEST PUSH2 0x139A DUP4 DUP4 DUP4 PUSH2 0x14C6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x1411 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4F5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP8 DUP8 SUB SWAP1 SSTORE SWAP4 DUP8 AND DUP1 DUP4 MSTORE SWAP2 DUP5 SWAP1 KECCAK256 DUP1 SLOAD DUP8 ADD SWAP1 SSTORE SWAP3 MLOAD DUP6 DUP2 MSTORE SWAP1 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0xA08 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0x6AB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x14185D5CD8589B194E881B9BDD081C185D5CD959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4F5 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1164 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265766F6C74436F696E3A20746F6B656E207472616E73666572207768696C65 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x81C185D5CD959 PUSH1 0xCA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4F5 JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE DUP1 PUSH1 0x20 DUP6 ADD PUSH1 0x40 DUP6 ADD MCOPY PUSH0 PUSH1 0x40 DUP3 DUP6 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP5 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x157B JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1591 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x159A DUP4 PUSH2 0x1565 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x15B8 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x673 DUP3 PUSH2 0x1565 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x15D1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x15EA JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x15F3 DUP5 PUSH2 0x1565 JUMP JUMPDEST SWAP3 POP PUSH2 0x1601 PUSH1 0x20 DUP6 ADD PUSH2 0x1565 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x1622 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1639 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH2 0x1653 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x40 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x166D JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1683 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x168F DUP8 DUP3 DUP9 ADD PUSH2 0x1612 JUMP JUMPDEST SWAP1 SWAP6 POP SWAP4 POP POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x16AE JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x16BA DUP8 DUP3 DUP9 ADD PUSH2 0x1612 JUMP JUMPDEST SWAP6 SWAP9 SWAP5 SWAP8 POP SWAP6 POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x16D7 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x16E0 DUP4 PUSH2 0x1565 JUMP JUMPDEST SWAP2 POP PUSH2 0x16EE PUSH1 0x20 DUP5 ADD PUSH2 0x1565 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x170B JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1729 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x495 JUMPI PUSH2 0x495 PUSH2 0x172F JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x495 JUMPI PUSH2 0x495 PUSH2 0x172F JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x179B JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x495 JUMPI PUSH2 0x495 PUSH2 0x172F JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH2 0x77A8 0xF SELFBALANCE 0xE1 SWAP16 0x1F PUSH8 0xF937535D0FA50202 DUP11 COINBASE PUSH2 0xEFA4 PUSH32 0x80AEAC788D78C4264764736F6C634300081A0033000000000000000000000000 ",
							"sourceMap": "539:6209:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2158:98:4;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4444:197;;;;;;:::i;:::-;;:::i;:::-;;;1085:14:8;;1078:22;1060:41;;1048:2;1033:18;4444:197:4;920:187:8;3481:225:0;;;;;;:::i;:::-;;:::i;:::-;;3255:106:4;3342:12;;3255:106;;;1449:25:8;;;1437:2;1422:18;3255:106:4;1303:177:8;2281:262:0;;;;;;:::i;:::-;;:::i;5426:337::-;;;;;;:::i;:::-;;:::i;3104:91:4:-;;;3186:2;2237:36:8;;2225:2;2210:18;3104:91:4;2095:184:8;669:58:0;;706:21;669:58;;5854:234:4;;;;;;:::i;:::-;;:::i;4789:65:0:-;;;:::i;2046:172::-;;;;;;:::i;:::-;;:::i;3087:149::-;;;;;;:::i;:::-;;:::i;827:27::-;;;;;-1:-1:-1;;;;;827:27:0;;;;;;-1:-1:-1;;;;;2448:32:8;;;2430:51;;2418:2;2403:18;827:27:0;2284:203:8;1615:84:2;1685:7;;-1:-1:-1;;;1685:7:2;;;;1615:84;;5952:794:0;;;;;;:::i;:::-;;:::i;3419:125:4:-;;;;;;:::i;:::-;-1:-1:-1;;;;;3519:18:4;3493:7;3519:18;;;;;;;;;;;;3419:125;1824:101:1;;;:::i;4693:61:0:-;;;:::i;1201:85:1:-;1273:6;;-1:-1:-1;;;;;1273:6:1;1201:85;;784:37:0;;;;;;2369:102:4;;;:::i;6575:427::-;;;;;;:::i;:::-;;:::i;5221:199:0:-;;;;;;:::i;:::-;;:::i;987:33::-;;;;;3987:149:4;;;;;;:::i;:::-;;:::i;2584:474:0:-;;;;;;:::i;:::-;;:::i;3242:146::-;;;;;;:::i;:::-;;:::i;2074:198:1:-;;;;;;:::i;:::-;;:::i;2158:98:4:-;2212:13;2244:5;2237:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2158:98;:::o;4444:197::-;4527:4;719:10:7;4581:32:4;719:10:7;4597:7:4;4606:6;4581:8;:32::i;:::-;4630:4;4623:11;;;4444:197;;;;;:::o;3481:225:0:-;1094:13:1;:11;:13::i;:::-;-1:-1:-1;;;;;3559:22:0;::::1;3551:64;;;::::0;-1:-1:-1;;;3551:64:0;;4489:2:8;3551:64:0::1;::::0;::::1;4471:21:8::0;4528:2;4508:18;;;4501:30;4567:31;4547:18;;;4540:59;4616:18;;3551:64:0::1;;;;;;;;;3652:8;-1:-1:-1::0;;;;;3630:31:0::1;3643:7;1273:6:1::0;;-1:-1:-1;;;;;1273:6:1;;1201:85;3643:7:0::1;-1:-1:-1::0;;;;;3630:31:0::1;;;;;;;;;;;3671:28;3690:8;3671:18;:28::i;:::-;3481:225:::0;:::o;2281:262::-;1094:13:1;:11;:13::i;:::-;2375:2:0::1;2365:6;:12;;2357:37;;;::::0;-1:-1:-1;;;2357:37:0;;4847:2:8;2357:37:0::1;::::0;::::1;4829:21:8::0;4886:2;4866:18;;;4859:30;-1:-1:-1;;;4905:18:8;;;4898:42;4957:18;;2357:37:0::1;4645:336:8::0;2357:37:0::1;2423:18;::::0;;2451:27;;;;2493:43:::1;::::0;;5160:25:8;;;5216:2;5201:18;;5194:34;;;2493:43:0::1;::::0;5133:18:8;2493:43:0::1;;;;;;;;2347:196;2281:262:::0;:::o;5426:337::-;5572:4;2261:21:3;:19;:21::i;:::-;1239:19:2::1;:17;:19::i;:::-;-1:-1:-1::0;;;;;5596:16:0;::::2;5588:57;;;::::0;-1:-1:-1;;;5588:57:0;;5441:2:8;5588:57:0::2;::::0;::::2;5423:21:8::0;5480:2;5460:18;;;5453:30;5519;5499:18;;;5492:58;5567:18;;5588:57:0::2;5239:352:8::0;5588:57:0::2;5655:43;5671:4:::0;719:10:7;5691:6:0::2;5655:15;:43::i;:::-;5708:27;5718:4;5724:2;5728:6;5708:9;:27::i;:::-;-1:-1:-1::0;5752:4:0::2;2303:20:3::0;1716:1;2809:7;:22;2629:209;2303:20;5426:337:0;;;;;:::o;5854:234:4:-;5942:4;719:10:7;5996:64:4;719:10:7;6012:7:4;6049:10;6021:25;719:10:7;6012:7:4;6021:9;:25::i;:::-;:38;;;;:::i;:::-;5996:8;:64::i;4789:65:0:-;1094:13:1;:11;:13::i;:::-;4837:10:0::1;:8;:10::i;:::-;4789:65::o:0;2046:172::-;1094:13:1;:11;:13::i;:::-;706:21:0::1;2141:6;2125:13;3342:12:4::0;;;3255:106;2125:13:0::1;:22;;;;:::i;:::-;:36;;2117:67;;;::::0;-1:-1:-1;;;2117:67:0;;6060:2:8;2117:67:0::1;::::0;::::1;6042:21:8::0;6099:2;6079:18;;;6072:30;-1:-1:-1;;;6118:18:8;;;6111:48;6176:18;;2117:67:0::1;5858:342:8::0;2117:67:0::1;2194:17;2200:2;2204:6;2194:5;:17::i;:::-;2046:172:::0;;:::o;3087:149::-;1094:13:1;:11;:13::i;:::-;-1:-1:-1;;;;;3157:27:0;::::1;;::::0;;;:18:::1;:27;::::0;;;;;;;;:34;;-1:-1:-1;;3157:34:0::1;3187:4;3157:34;::::0;;3206:23;;2430:51:8;;;3206:23:0::1;::::0;2403:18:8;3206:23:0::1;;;;;;;;3087:149:::0;:::o;5952:794::-;2261:21:3;:19;:21::i;:::-;1239:19:2::1;:17;:19::i;:::-;6110:10:0::2;-1:-1:-1::0;;;;;6124:8:0::2;6110:22;;6102:72;;;::::0;-1:-1:-1;;;6102:72:0;;6407:2:8;6102:72:0::2;::::0;::::2;6389:21:8::0;6446:2;6426:18;;;6419:30;6485:34;6465:18;;;6458:62;-1:-1:-1;;;6536:18:8;;;6529:35;6581:19;;6102:72:0::2;6205:401:8::0;6102:72:0::2;6192:35:::0;;::::2;6184:83;;;::::0;-1:-1:-1;;;6184:83:0;;6813:2:8;6184:83:0::2;::::0;::::2;6795:21:8::0;6852:2;6832:18;;;6825:30;6891:34;6871:18;;;6864:62;-1:-1:-1;;;6942:18:8;;;6935:33;6985:19;;6184:83:0::2;6611:399:8::0;6184:83:0::2;6277:13;::::0;6330:89:::2;6350:18:::0;;::::2;6330:89;;;6398:7;;6406:1;6398:10;;;;;;;:::i;:::-;;;;;;;6389:19;;;;;:::i;:::-;::::0;-1:-1:-1;6370:3:0::2;;6330:89;;;;706:21;6494:5;6478:13;3342:12:4::0;;;3255:106;6478:13:0::2;:21;;;;:::i;:::-;:35;;6470:78;;;::::0;-1:-1:-1;;;6470:78:0;;7349:2:8;6470:78:0::2;::::0;::::2;7331:21:8::0;7388:2;7368:18;;;7361:30;7427:32;7407:18;;;7400:60;7477:18;;6470:78:0::2;7147:354:8::0;6470:78:0::2;6587:9;6582:158;6602:21:::0;;::::2;6582:158;;;6644:32;6650:10;;6661:1;6650:13;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;6665:7;;6673:1;6665:10;;;;;;;:::i;:::-;;;;;;;6644:5;:32::i;:::-;6703:10;;6714:1;6703:13;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;6695:34:0::2;;6718:7;;6726:1;6718:10;;;;;;;:::i;:::-;;;;;;;6695:34;;;;1449:25:8::0;;1437:2;1422:18;;1303:177;6695:34:0::2;;;;;;;;6625:3;;6582:158;;;;6092:654;2303:20:3::0;1716:1;2809:7;:22;2629:209;2303:20;5952:794:0;;;;:::o;1824:101:1:-;1094:13;:11;:13::i;:::-;1888:30:::1;1915:1;1888:18;:30::i;4693:61:0:-:0;1094:13:1;:11;:13::i;:::-;4739:8:0::1;:6;:8::i;2369:102:4:-:0;2425:13;2457:7;2450:14;;;;;:::i;6575:427::-;6668:4;719:10:7;6668:4:4;6749:25;719:10:7;6766:7:4;6749:9;:25::i;:::-;6722:52;;6812:15;6792:16;:35;;6784:85;;;;-1:-1:-1;;;6784:85:4;;7708:2:8;6784:85:4;;;7690:21:8;7747:2;7727:18;;;7720:30;7786:34;7766:18;;;7759:62;-1:-1:-1;;;7837:18:8;;;7830:35;7882:19;;6784:85:4;7506:401:8;6784:85:4;6903:60;6912:5;6919:7;6947:15;6928:16;:34;6903:8;:60::i;:::-;-1:-1:-1;6991:4:4;;6575:427;-1:-1:-1;;;;6575:427:4:o;5221:199:0:-;5341:4;2261:21:3;:19;:21::i;:::-;1239:19:2::1;:17;:19::i;:::-;5357:35:0::2;719:10:7::0;5381:2:0::2;5385:6;5357:9;:35::i;:::-;-1:-1:-1::0;5409:4:0::2;2303:20:3::0;1716:1;2809:7;:22;2629:209;3987:149:4;-1:-1:-1;;;;;4102:18:4;;;4076:7;4102:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3987:149::o;2584:474:0:-;1094:13:1;:11;:13::i;:::-;-1:-1:-1;;;;;2668:26:0;::::1;2660:66;;;::::0;-1:-1:-1;;;2660:66:0;;8114:2:8;2660:66:0::1;::::0;::::1;8096:21:8::0;8153:2;8133:18;;;8126:30;8192:29;8172:18;;;8165:57;8239:18;;2660:66:0::1;7912:351:8::0;2660:66:0::1;-1:-1:-1::0;;;;;2823:24:0;::::1;;:29:::0;2802:113:::1;;;::::0;-1:-1:-1;;;2802:113:0;;8470:2:8;2802:113:0::1;::::0;::::1;8452:21:8::0;8509:2;8489:18;;;8482:30;8548:34;8528:18;;;8521:62;-1:-1:-1;;;8599:18:8;;;8592:35;8644:19;;2802:113:0::1;8268:401:8::0;2802:113:0::1;2944:12;::::0;;-1:-1:-1;;;;;2966:27:0;;::::1;-1:-1:-1::0;;;;;;2966:27:0;::::1;::::0;::::1;::::0;;;3008:43:::1;::::0;;2944:12;;;::::1;8848:51:8::0;;;8930:2;8915:18;;8908:60;;;;3008:43:0::1;::::0;8821:18:8;3008:43:0::1;8674:300:8::0;3242:146:0;1094:13:1;:11;:13::i;:::-;-1:-1:-1;;;;;3310:27:0;::::1;3340:5;3310:27:::0;;;:18:::1;:27;::::0;;;;;;;;:35;;-1:-1:-1;;3310:35:0::1;::::0;;3360:21;;2430:51:8;;;3360:21:0::1;::::0;2403:18:8;3360:21:0::1;2284:203:8::0;2074:198:1;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2162:22:1;::::1;2154:73;;;::::0;-1:-1:-1;;;2154:73:1;;9181:2:8;2154:73:1::1;::::0;::::1;9163:21:8::0;9220:2;9200:18;;;9193:30;9259:34;9239:18;;;9232:62;-1:-1:-1;;;9310:18:8;;;9303:36;9356:19;;2154:73:1::1;8979:402:8::0;2154:73:1::1;2237:28;2256:8;2237:18;:28::i;10457:340:4:-:0;-1:-1:-1;;;;;10558:19:4;;10550:68;;;;-1:-1:-1;;;10550:68:4;;9588:2:8;10550:68:4;;;9570:21:8;9627:2;9607:18;;;9600:30;9666:34;9646:18;;;9639:62;-1:-1:-1;;;9717:18:8;;;9710:34;9761:19;;10550:68:4;9386:400:8;10550:68:4;-1:-1:-1;;;;;10636:21:4;;10628:68;;;;-1:-1:-1;;;10628:68:4;;9993:2:8;10628:68:4;;;9975:21:8;10032:2;10012:18;;;10005:30;10071:34;10051:18;;;10044:62;-1:-1:-1;;;10122:18:8;;;10115:32;10164:19;;10628:68:4;9791:398:8;10628:68:4;-1:-1:-1;;;;;10707:18:4;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10758:32;;1449:25:8;;;10758:32:4;;1422:18:8;10758:32:4;;;;;;;10457:340;;;:::o;1359:130:1:-;1273:6;;-1:-1:-1;;;;;1273:6:1;719:10:7;1422:23:1;1414:68;;;;-1:-1:-1;;;1414:68:1;;10396:2:8;1414:68:1;;;10378:21:8;;;10415:18;;;10408:30;10474:34;10454:18;;;10447:62;10526:18;;1414:68:1;10194:356:8;2426:187:1;2518:6;;;-1:-1:-1;;;;;2534:17:1;;;-1:-1:-1;;;;;;2534:17:1;;;;;;;2566:40;;2518:6;;;2534:17;2518:6;;2566:40;;2499:16;;2566:40;2489:124;2426:187;:::o;2336:287:3:-;1759:1;2468:7;;:19;2460:63;;;;-1:-1:-1;;;2460:63:3;;10757:2:8;2460:63:3;;;10739:21:8;10796:2;10776:18;;;10769:30;10835:33;10815:18;;;10808:61;10886:18;;2460:63:3;10555:355:8;2460:63:3;1759:1;2598:7;:18;2336:287::o;1767:106:2:-;1685:7;;-1:-1:-1;;;1685:7:2;;;;1836:9;1828:38;;;;-1:-1:-1;;;1828:38:2;;11117:2:8;1828:38:2;;;11099:21:8;11156:2;11136:18;;;11129:30;-1:-1:-1;;;11175:18:8;;;11168:46;11231:18;;1828:38:2;10915:340:8;11078:411:4;11178:24;11205:25;11215:5;11222:7;11205:9;:25::i;:::-;11178:52;;-1:-1:-1;;11244:16:4;:37;11240:243;;11325:6;11305:16;:26;;11297:68;;;;-1:-1:-1;;;11297:68:4;;11462:2:8;11297:68:4;;;11444:21:8;11501:2;11481:18;;;11474:30;11540:31;11520:18;;;11513:59;11589:18;;11297:68:4;11260:353:8;11297:68:4;11407:51;11416:5;11423:7;11451:6;11432:16;:25;11407:8;:51::i;3809:843:0:-;1239:19:2;:17;:19::i;:::-;-1:-1:-1;;;;;3959:20:0;::::1;3951:63;;;::::0;-1:-1:-1;;;3951:63:0;;11820:2:8;3951:63:0::1;::::0;::::1;11802:21:8::0;11859:2;11839:18;;;11832:30;11898:32;11878:18;;;11871:60;11948:18;;3951:63:0::1;11618:354:8::0;3951:63:0::1;-1:-1:-1::0;;;;;4032:23:0;::::1;4024:64;;;::::0;-1:-1:-1;;;4024:64:0;;5441:2:8;4024:64:0::1;::::0;::::1;5423:21:8::0;5480:2;5460:18;;;5453:30;5519;5499:18;;;5492:58;5567:18;;4024:64:0::1;5239:352:8::0;4024:64:0::1;4136:1;4115:18;;:22;:64;;;;-1:-1:-1::0;4153:12:0::1;::::0;-1:-1:-1;;;;;4153:12:0::1;:26:::0;::::1;4115:64;:107;;;;-1:-1:-1::0;;;;;;4196:26:0;::::1;;::::0;;;:18:::1;:26;::::0;;;;;::::1;;4195:27;4115:107;:153;;;;-1:-1:-1::0;;;;;;4239:29:0;::::1;;::::0;;;:18:::1;:29;::::0;;;;;::::1;;4238:30;4115:153;4098:548;;;4293:11;4339:3;4317:18;;4308:6;:27;;;;:::i;:::-;4307:35;;;;:::i;:::-;4293:49:::0;-1:-1:-1;4356:17:0::1;4376:12;4293:49:::0;4376:6;:12:::1;:::i;:::-;4457;::::0;4356:32;;-1:-1:-1;4433:42:0::1;::::0;4449:6;;-1:-1:-1;;;;;4457:12:0::1;4471:3:::0;4433:15:::1;:42::i;:::-;4517:45;4533:6;4541:9;4552;4517:15;:45::i;:::-;4279:294;;3809:843:::0;;;:::o;4098:548::-:1;4593:42;4609:6;4617:9;4628:6;4593:15;:42::i;:::-;3809:843:::0;;;:::o;2433:117:2:-;1486:16;:14;:16::i;:::-;2491:7:::1;:15:::0;;-1:-1:-1;;;;2491:15:2::1;::::0;;2521:22:::1;719:10:7::0;2530:12:2::1;2521:22;::::0;-1:-1:-1;;;;;2448:32:8;;;2430:51;;2418:2;2403:18;2521:22:2::1;;;;;;;2433:117::o:0;8520:535:4:-;-1:-1:-1;;;;;8603:21:4;;8595:65;;;;-1:-1:-1;;;8595:65:4;;12707:2:8;8595:65:4;;;12689:21:8;12746:2;12726:18;;;12719:30;12785:33;12765:18;;;12758:61;12836:18;;8595:65:4;12505:355:8;8595:65:4;8671:49;8700:1;8704:7;8713:6;8671:20;:49::i;:::-;8747:6;8731:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8899:18:4;;:9;:18;;;;;;;;;;;:28;;;;;;8952:37;1449:25:8;;;8952:37:4;;1422:18:8;8952:37:4;;;;;;;2046:172:0;;:::o;2186:115:2:-;1239:19;:17;:19::i;:::-;2245:7:::1;:14:::0;;-1:-1:-1;;;;2245:14:2::1;-1:-1:-1::0;;;2245:14:2::1;::::0;;2274:20:::1;2281:12;719:10:7::0;;640:96;7456:788:4;-1:-1:-1;;;;;7552:18:4;;7544:68;;;;-1:-1:-1;;;7544:68:4;;13067:2:8;7544:68:4;;;13049:21:8;13106:2;13086:18;;;13079:30;13145:34;13125:18;;;13118:62;-1:-1:-1;;;13196:18:8;;;13189:35;13241:19;;7544:68:4;12865:401:8;7544:68:4;-1:-1:-1;;;;;7630:16:4;;7622:64;;;;-1:-1:-1;;;7622:64:4;;13473:2:8;7622:64:4;;;13455:21:8;13512:2;13492:18;;;13485:30;13551:34;13531:18;;;13524:62;-1:-1:-1;;;13602:18:8;;;13595:33;13645:19;;7622:64:4;13271:399:8;7622:64:4;7697:38;7718:4;7724:2;7728:6;7697:20;:38::i;:::-;-1:-1:-1;;;;;7768:15:4;;7746:19;7768:15;;;;;;;;;;;7801:21;;;;7793:72;;;;-1:-1:-1;;;7793:72:4;;13877:2:8;7793:72:4;;;13859:21:8;13916:2;13896:18;;;13889:30;13955:34;13935:18;;;13928:62;-1:-1:-1;;;14006:18:8;;;13999:36;14052:19;;7793:72:4;13675:402:8;7793:72:4;-1:-1:-1;;;;;7899:15:4;;;:9;:15;;;;;;;;;;;7917:20;;;7899:38;;8114:13;;;;;;;;;;:23;;;;;;8163:26;;1449:25:8;;;8114:13:4;;8163:26;;1422:18:8;8163:26:4;;;;;;;8200:37;3809:843:0;1945:106:2;1685:7;;-1:-1:-1;;;1685:7:2;;;;2003:41;;;;-1:-1:-1;;;2003:41:2;;14284:2:8;2003:41:2;;;14266:21:8;14323:2;14303:18;;;14296:30;-1:-1:-1;;;14342:18:8;;;14335:50;14402:18;;2003:41:2;14082:344:8;4916:252:0;1685:7:2;;-1:-1:-1;;;1685:7:2;;;;5108:9:0;5100:61;;;;-1:-1:-1;;;5100:61:0;;14633:2:8;5100:61:0;;;14615:21:8;14672:2;14652:18;;;14645:30;14711:34;14691:18;;;14684:62;-1:-1:-1;;;14762:18:8;;;14755:37;14809:19;;5100:61:0;14431:403:8;14:418;163:2;152:9;145:21;126:4;195:6;189:13;238:6;233:2;222:9;218:18;211:34;297:6;292:2;284:6;280:15;275:2;264:9;260:18;254:50;353:1;348:2;339:6;328:9;324:22;320:31;313:42;423:2;416;412:7;407:2;399:6;395:15;391:29;380:9;376:45;372:54;364:62;;;14:418;;;;:::o;437:173::-;505:20;;-1:-1:-1;;;;;554:31:8;;544:42;;534:70;;600:1;597;590:12;534:70;437:173;;;:::o;615:300::-;683:6;691;744:2;732:9;723:7;719:23;715:32;712:52;;;760:1;757;750:12;712:52;783:29;802:9;783:29;:::i;:::-;773:39;881:2;866:18;;;;853:32;;-1:-1:-1;;;615:300:8:o;1112:186::-;1171:6;1224:2;1212:9;1203:7;1199:23;1195:32;1192:52;;;1240:1;1237;1230:12;1192:52;1263:29;1282:9;1263:29;:::i;1485:226::-;1544:6;1597:2;1585:9;1576:7;1572:23;1568:32;1565:52;;;1613:1;1610;1603:12;1565:52;-1:-1:-1;1658:23:8;;1485:226;-1:-1:-1;1485:226:8:o;1716:374::-;1793:6;1801;1809;1862:2;1850:9;1841:7;1837:23;1833:32;1830:52;;;1878:1;1875;1868:12;1830:52;1901:29;1920:9;1901:29;:::i;:::-;1891:39;;1949:38;1983:2;1972:9;1968:18;1949:38;:::i;:::-;1716:374;;1939:48;;-1:-1:-1;;;2056:2:8;2041:18;;;;2028:32;;1716:374::o;2492:367::-;2555:8;2565:6;2619:3;2612:4;2604:6;2600:17;2596:27;2586:55;;2637:1;2634;2627:12;2586:55;-1:-1:-1;2660:20:8;;2703:18;2692:30;;2689:50;;;2735:1;2732;2725:12;2689:50;2772:4;2764:6;2760:17;2748:29;;2832:3;2825:4;2815:6;2812:1;2808:14;2800:6;2796:27;2792:38;2789:47;2786:67;;;2849:1;2846;2839:12;2786:67;2492:367;;;;;:::o;2864:768::-;2986:6;2994;3002;3010;3063:2;3051:9;3042:7;3038:23;3034:32;3031:52;;;3079:1;3076;3069:12;3031:52;3119:9;3106:23;3152:18;3144:6;3141:30;3138:50;;;3184:1;3181;3174:12;3138:50;3223:70;3285:7;3276:6;3265:9;3261:22;3223:70;:::i;:::-;3312:8;;-1:-1:-1;3197:96:8;-1:-1:-1;;3400:2:8;3385:18;;3372:32;3429:18;3416:32;;3413:52;;;3461:1;3458;3451:12;3413:52;3500:72;3564:7;3553:8;3542:9;3538:24;3500:72;:::i;:::-;2864:768;;;;-1:-1:-1;3591:8:8;-1:-1:-1;;;;2864:768:8:o;3637:260::-;3705:6;3713;3766:2;3754:9;3745:7;3741:23;3737:32;3734:52;;;3782:1;3779;3772:12;3734:52;3805:29;3824:9;3805:29;:::i;:::-;3795:39;;3853:38;3887:2;3876:9;3872:18;3853:38;:::i;:::-;3843:48;;3637:260;;;;;:::o;3902:380::-;3981:1;3977:12;;;;4024;;;4045:61;;4099:4;4091:6;4087:17;4077:27;;4045:61;4152:2;4144:6;4141:14;4121:18;4118:38;4115:161;;4198:10;4193:3;4189:20;4186:1;4179:31;4233:4;4230:1;4223:15;4261:4;4258:1;4251:15;4115:161;;3902:380;;;:::o;5596:127::-;5657:10;5652:3;5648:20;5645:1;5638:31;5688:4;5685:1;5678:15;5712:4;5709:1;5702:15;5728:125;5793:9;;;5814:10;;;5811:36;;;5827:18;;:::i;7015:127::-;7076:10;7071:3;7067:20;7064:1;7057:31;7107:4;7104:1;7097:15;7131:4;7128:1;7121:15;11977:168;12050:9;;;12081;;12098:15;;;12092:22;;12078:37;12068:71;;12119:18;;:::i;12150:217::-;12190:1;12216;12206:132;;12260:10;12255:3;12251:20;12248:1;12241:31;12295:4;12292:1;12285:15;12323:4;12320:1;12313:15;12206:132;-1:-1:-1;12352:9:8;;12150:217::o;12372:128::-;12439:9;;;12460:11;;;12457:37;;;12474:18;;:::i"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1224200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"MAX_SUPPLY()": "240",
								"airdrop(address[],uint256[])": "infinite",
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "24670",
								"balanceOf(address)": "2605",
								"decimals()": "288",
								"decreaseAllowance(address,uint256)": "26990",
								"deployer()": "infinite",
								"excludeFromFee(address)": "27910",
								"feeRecipient()": "2425",
								"includeInFee(address)": "27936",
								"increaseAllowance(address,uint256)": "infinite",
								"mint(address,uint256)": "infinite",
								"name()": "infinite",
								"owner()": "2397",
								"ownerTransfer(address)": "32126",
								"pause()": "infinite",
								"paused()": "2431",
								"renounceOwnership()": "infinite",
								"setFeeRecipient(address)": "30834",
								"setTransferFeePercent(uint256)": "28031",
								"symbol()": "infinite",
								"totalSupply()": "2326",
								"transfer(address,uint256)": "infinite",
								"transferFeePercent()": "2383",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "28443",
								"unpause()": "infinite"
							},
							"internal": {
								"_beforeTokenTransfer(address,address,uint256)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 539,
									"end": 6748,
									"name": "PUSH",
									"source": 0,
									"value": "A0"
								},
								{
									"begin": 539,
									"end": 6748,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 539,
									"end": 6748,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 820,
									"end": 821,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 784,
									"end": 821,
									"name": "PUSH",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 784,
									"end": 821,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1423,
									"end": 1974,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 1423,
									"end": 1974,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1423,
									"end": 1974,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 1423,
									"end": 1974,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1423,
									"end": 1974,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1423,
									"end": 1974,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1423,
									"end": 1974,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1423,
									"end": 1974,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1423,
									"end": 1974,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1423,
									"end": 1974,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1423,
									"end": 1974,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "PUSH",
									"source": 4,
									"value": "A"
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "2932BB37B63A21B7B4B7"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "B1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "PUSH",
									"source": 4,
									"value": "6"
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "14995D9BDB1D"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "D2"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2054,
									"end": 2059,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2046,
									"end": 2051,
									"name": "PUSH",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 2046,
									"end": 2059,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2046,
									"end": 2059,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2046,
									"end": 2059,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "8"
								},
								{
									"begin": 2046,
									"end": 2059,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 2046,
									"end": 2059,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2046,
									"end": 2059,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "9"
								},
								{
									"begin": 2046,
									"end": 2059,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 2046,
									"end": 2059,
									"name": "tag",
									"source": 4,
									"value": "8"
								},
								{
									"begin": 2046,
									"end": 2059,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2069,
									"end": 2076,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 2069,
									"end": 2086,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "10"
								},
								{
									"begin": 2079,
									"end": 2086,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 2069,
									"end": 2076,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 2069,
									"end": 2086,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "9"
								},
								{
									"begin": 2069,
									"end": 2086,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 2069,
									"end": 2086,
									"name": "tag",
									"source": 4,
									"value": "10"
								},
								{
									"begin": 2069,
									"end": 2086,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2069,
									"end": 2086,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 936,
									"end": 968,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 955,
									"end": 967,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 955,
									"end": 967,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 955,
									"end": 967,
									"name": "tag",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 936,
									"end": 954,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 936,
									"end": 968,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 936,
									"end": 968,
									"name": "tag",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 996,
									"end": 1003,
									"name": "PUSH",
									"source": 2,
									"value": "5"
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1821,
									"end": 1828,
									"name": "PUSH",
									"source": 3,
									"value": "6"
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 1521,
									"end": 1531,
									"modifierDepth": 1,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 1510,
									"end": 1531,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 1510,
									"end": 1531,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1510,
									"end": 1531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1510,
									"end": 1531,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1589,
									"end": 1601,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1589,
									"end": 1614,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1589,
									"end": 1614,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1589,
									"end": 1614,
									"modifierDepth": 1,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1589,
									"end": 1614,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1589,
									"end": 1614,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1589,
									"end": 1614,
									"modifierDepth": 1,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 1589,
									"end": 1614,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1589,
									"end": 1614,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1678,
									"end": 1696,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1006,
									"end": 1011,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1697,
									"end": 1704,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 1273,
									"end": 1279,
									"name": "PUSH",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 1273,
									"end": 1279,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1273,
									"end": 1279,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1273,
									"end": 1279,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1201,
									"end": 1286,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1697,
									"end": 1704,
									"modifierDepth": 1,
									"name": "tag",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 1697,
									"end": 1704,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1678,
									"end": 1705,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1678,
									"end": 1705,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1678,
									"end": 1705,
									"modifierDepth": 1,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1678,
									"end": 1705,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1678,
									"end": 1705,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1678,
									"end": 1705,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1678,
									"end": 1705,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1678,
									"end": 1705,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 1678,
									"end": 1705,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1678,
									"end": 1705,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 1678,
									"end": 1705,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1678,
									"end": 1705,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 1678,
									"end": 1705,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1678,
									"end": 1705,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1678,
									"end": 1705,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1678,
									"end": 1705,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1678,
									"end": 1705,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 1678,
									"end": 1705,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1678,
									"end": 1705,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1678,
									"end": 1705,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 1678,
									"end": 1712,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1678,
									"end": 1712,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 1678,
									"end": 1712,
									"name": "SWAP6",
									"source": 0
								},
								{
									"begin": 1678,
									"end": 1712,
									"modifierDepth": 1,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 1678,
									"end": 1712,
									"modifierDepth": 1,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1678,
									"end": 1712,
									"name": "SWAP7",
									"source": 0
								},
								{
									"begin": 1678,
									"end": 1712,
									"name": "DUP8",
									"source": 0
								},
								{
									"begin": 1678,
									"end": 1712,
									"modifierDepth": 1,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1678,
									"end": 1712,
									"modifierDepth": 1,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 1678,
									"end": 1712,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1678,
									"end": 1712,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1741,
									"end": 1753,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1741,
									"end": 1753,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 1741,
									"end": 1753,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1741,
									"end": 1753,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1741,
									"end": 1753,
									"modifierDepth": 1,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1722,
									"end": 1754,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1722,
									"end": 1754,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1722,
									"end": 1740,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1722,
									"end": 1754,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1722,
									"end": 1754,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 1722,
									"end": 1754,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1722,
									"end": 1754,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1722,
									"end": 1754,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 1722,
									"end": 1761,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1722,
									"end": 1761,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 1722,
									"end": 1761,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1722,
									"end": 1761,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 1722,
									"end": 1761,
									"modifierDepth": 1,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1678,
									"end": 1712,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1722,
									"end": 1761,
									"modifierDepth": 1,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 1722,
									"end": 1761,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1722,
									"end": 1761,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1722,
									"end": 1761,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1915,
									"end": 1925,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 3186,
									"end": 3188,
									"name": "PUSH",
									"source": 4,
									"value": "12"
								},
								{
									"begin": 3186,
									"end": 3188,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 3104,
									"end": 3195,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1915,
									"end": 1925,
									"modifierDepth": 1,
									"name": "tag",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 1915,
									"end": 1925,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1909,
									"end": 1925,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "23"
								},
								{
									"begin": 1909,
									"end": 1925,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1909,
									"end": 1911,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "A"
								},
								{
									"begin": 1909,
									"end": 1925,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 1909,
									"end": 1925,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1909,
									"end": 1925,
									"modifierDepth": 1,
									"name": "tag",
									"source": 0,
									"value": "23"
								},
								{
									"begin": 1909,
									"end": 1925,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1897,
									"end": 1925,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "25"
								},
								{
									"begin": 1897,
									"end": 1925,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1897,
									"end": 1906,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "F4240"
								},
								{
									"begin": 1897,
									"end": 1925,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "26"
								},
								{
									"begin": 1897,
									"end": 1925,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1897,
									"end": 1925,
									"modifierDepth": 1,
									"name": "tag",
									"source": 0,
									"value": "25"
								},
								{
									"begin": 1897,
									"end": 1925,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1873,
									"end": 1925,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1935,
									"end": 1967,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "27"
								},
								{
									"begin": 1941,
									"end": 1951,
									"modifierDepth": 1,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 1873,
									"end": 1925,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1935,
									"end": 1940,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "28"
								},
								{
									"begin": 1935,
									"end": 1967,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1935,
									"end": 1967,
									"modifierDepth": 1,
									"name": "tag",
									"source": 0,
									"value": "27"
								},
								{
									"begin": 1935,
									"end": 1967,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1467,
									"end": 1974,
									"modifierDepth": 1,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 539,
									"end": 6748,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "65"
								},
								{
									"begin": 539,
									"end": 6748,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 640,
									"end": 736,
									"name": "tag",
									"source": 7,
									"value": "14"
								},
								{
									"begin": 640,
									"end": 736,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 7
								},
								{
									"begin": 719,
									"end": 729,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 640,
									"end": 736,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2426,
									"end": 2613,
									"name": "tag",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 2426,
									"end": 2613,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "PUSH",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "AND",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "PUSH",
									"source": 1,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2499,
									"end": 2515,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2499,
									"end": 2515,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "LOG3",
									"source": 1
								},
								{
									"begin": 2489,
									"end": 2613,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2426,
									"end": 2613,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2426,
									"end": 2613,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 8520,
									"end": 9055,
									"name": "tag",
									"source": 4,
									"value": "28"
								},
								{
									"begin": 8520,
									"end": 9055,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 8603,
									"end": 8624,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 8603,
									"end": 8624,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 8595,
									"end": 8660,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "35"
								},
								{
									"begin": 8595,
									"end": 8660,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 8595,
									"end": 8660,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 8595,
									"end": 8660,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 8595,
									"end": 8660,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 8595,
									"end": 8660,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 4594,
									"end": 4596,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 8595,
									"end": 8660,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 8595,
									"end": 8660,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 8595,
									"end": 8660,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 4576,
									"end": 4597,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 4633,
									"end": 4635,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 4613,
									"end": 4631,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 4613,
									"end": 4631,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 4613,
									"end": 4631,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 4606,
									"end": 4636,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 4672,
									"end": 4705,
									"name": "PUSH",
									"source": 8,
									"value": "45524332303A206D696E7420746F20746865207A65726F206164647265737300"
								},
								{
									"begin": 4652,
									"end": 4670,
									"name": "PUSH",
									"source": 8,
									"value": "44"
								},
								{
									"begin": 4652,
									"end": 4670,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 4652,
									"end": 4670,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 4645,
									"end": 4706,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 4723,
									"end": 4741,
									"name": "PUSH",
									"source": 8,
									"value": "64"
								},
								{
									"begin": 4723,
									"end": 4741,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 8595,
									"end": 8660,
									"name": "tag",
									"source": 4,
									"value": "36"
								},
								{
									"begin": 8595,
									"end": 8660,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 8595,
									"end": 8660,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 8595,
									"end": 8660,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 8595,
									"end": 8660,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 8595,
									"end": 8660,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 8595,
									"end": 8660,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 8595,
									"end": 8660,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 8595,
									"end": 8660,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 8595,
									"end": 8660,
									"name": "tag",
									"source": 4,
									"value": "35"
								},
								{
									"begin": 8595,
									"end": 8660,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 8671,
									"end": 8720,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "38"
								},
								{
									"begin": 8700,
									"end": 8701,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 8704,
									"end": 8711,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 8713,
									"end": 8719,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 8671,
									"end": 8691,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "39"
								},
								{
									"begin": 8671,
									"end": 8720,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 8671,
									"end": 8720,
									"name": "tag",
									"source": 4,
									"value": "38"
								},
								{
									"begin": 8671,
									"end": 8720,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 8747,
									"end": 8753,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 8731,
									"end": 8743,
									"name": "PUSH",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 8731,
									"end": 8743,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 8731,
									"end": 8753,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 8731,
									"end": 8753,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 8731,
									"end": 8753,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 8731,
									"end": 8753,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 8731,
									"end": 8753,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 8731,
									"end": 8753,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 8731,
									"end": 8753,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "41"
								},
								{
									"begin": 8731,
									"end": 8753,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 8731,
									"end": 8753,
									"name": "tag",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 8731,
									"end": 8753,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 8731,
									"end": 8753,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 8731,
									"end": 8753,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 8731,
									"end": 8753,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 8899,
									"end": 8917,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 8899,
									"end": 8917,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 8899,
									"end": 8908,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 8899,
									"end": 8917,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 8899,
									"end": 8917,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 8899,
									"end": 8917,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 8899,
									"end": 8917,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 8899,
									"end": 8917,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 8899,
									"end": 8917,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 8899,
									"end": 8917,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 8899,
									"end": 8917,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 8899,
									"end": 8917,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 8899,
									"end": 8917,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 8899,
									"end": 8917,
									"name": "KECCAK256",
									"source": 4
								},
								{
									"begin": 8899,
									"end": 8927,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 8899,
									"end": 8927,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 8899,
									"end": 8927,
									"name": "DUP7",
									"source": 4
								},
								{
									"begin": 8899,
									"end": 8927,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 8899,
									"end": 8927,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 8899,
									"end": 8927,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 8952,
									"end": 8989,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 5028,
									"end": 5053,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 5028,
									"end": 5053,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 5028,
									"end": 5053,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 8952,
									"end": 8989,
									"name": "PUSH",
									"source": 4,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 8952,
									"end": 8989,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 5001,
									"end": 5019,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 8952,
									"end": 8989,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 8952,
									"end": 8989,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 8952,
									"end": 8989,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 8952,
									"end": 8989,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 8952,
									"end": 8989,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 8952,
									"end": 8989,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 8952,
									"end": 8989,
									"name": "LOG3",
									"source": 4
								},
								{
									"begin": 8520,
									"end": 9055,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 8520,
									"end": 9055,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 8520,
									"end": 9055,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 4916,
									"end": 5168,
									"name": "tag",
									"source": 0,
									"value": "39"
								},
								{
									"begin": 4916,
									"end": 5168,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 5109,
									"end": 5117,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "49"
								},
								{
									"begin": 1685,
									"end": 1692,
									"name": "PUSH",
									"source": 2,
									"value": "5"
								},
								{
									"begin": 1685,
									"end": 1692,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1685,
									"end": 1692,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1685,
									"end": 1692,
									"name": "DIV",
									"source": 2
								},
								{
									"begin": 1685,
									"end": 1692,
									"name": "PUSH",
									"source": 2,
									"value": "FF"
								},
								{
									"begin": 1685,
									"end": 1692,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 1685,
									"end": 1692,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1615,
									"end": 1699,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 5109,
									"end": 5117,
									"name": "tag",
									"source": 0,
									"value": "49"
								},
								{
									"begin": 5109,
									"end": 5117,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 5108,
									"end": 5117,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 5100,
									"end": 5161,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "51"
								},
								{
									"begin": 5100,
									"end": 5161,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 5100,
									"end": 5161,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 5100,
									"end": 5161,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 5100,
									"end": 5161,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 5100,
									"end": 5161,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 5266,
									"end": 5268,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 5100,
									"end": 5161,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 5100,
									"end": 5161,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 5100,
									"end": 5161,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 5248,
									"end": 5269,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 5305,
									"end": 5307,
									"name": "PUSH",
									"source": 8,
									"value": "27"
								},
								{
									"begin": 5285,
									"end": 5303,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 5285,
									"end": 5303,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5285,
									"end": 5303,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 5278,
									"end": 5308,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 5344,
									"end": 5378,
									"name": "PUSH",
									"source": 8,
									"value": "5265766F6C74436F696E3A20746F6B656E207472616E73666572207768696C65"
								},
								{
									"begin": 5324,
									"end": 5342,
									"name": "PUSH",
									"source": 8,
									"value": "44"
								},
								{
									"begin": 5324,
									"end": 5342,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5324,
									"end": 5342,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 5317,
									"end": 5379,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "81C185D5CD959"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "CA"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 5395,
									"end": 5413,
									"name": "PUSH",
									"source": 8,
									"value": "64"
								},
								{
									"begin": 5395,
									"end": 5413,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5395,
									"end": 5413,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 5388,
									"end": 5425,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 5442,
									"end": 5461,
									"name": "PUSH",
									"source": 8,
									"value": "84"
								},
								{
									"begin": 5442,
									"end": 5461,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 5100,
									"end": 5161,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "36"
								},
								{
									"begin": 5064,
									"end": 5467,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5100,
									"end": 5161,
									"name": "tag",
									"source": 0,
									"value": "51"
								},
								{
									"begin": 5100,
									"end": 5161,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 4916,
									"end": 5168,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 4916,
									"end": 5168,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 4916,
									"end": 5168,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 4916,
									"end": 5168,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 141,
									"name": "tag",
									"source": 8,
									"value": "57"
								},
								{
									"begin": 14,
									"end": 141,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 75,
									"end": 85,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B71"
								},
								{
									"begin": 70,
									"end": 73,
									"name": "PUSH",
									"source": 8,
									"value": "E0"
								},
								{
									"begin": 66,
									"end": 86,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": 63,
									"end": 64,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 87,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 106,
									"end": 110,
									"name": "PUSH",
									"source": 8,
									"value": "41"
								},
								{
									"begin": 103,
									"end": 104,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 96,
									"end": 111,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 130,
									"end": 134,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 127,
									"end": 128,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 120,
									"end": 135,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 146,
									"end": 526,
									"name": "tag",
									"source": 8,
									"value": "58"
								},
								{
									"begin": 146,
									"end": 526,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 225,
									"end": 226,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 221,
									"end": 233,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 221,
									"end": 233,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 221,
									"end": 233,
									"name": "SHR",
									"source": 8
								},
								{
									"begin": 221,
									"end": 233,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 268,
									"end": 280,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 268,
									"end": 280,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 268,
									"end": 280,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 289,
									"end": 350,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "68"
								},
								{
									"begin": 289,
									"end": 350,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 343,
									"end": 347,
									"name": "PUSH",
									"source": 8,
									"value": "7F"
								},
								{
									"begin": 335,
									"end": 341,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 331,
									"end": 348,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 321,
									"end": 348,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 321,
									"end": 348,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 289,
									"end": 350,
									"name": "tag",
									"source": 8,
									"value": "68"
								},
								{
									"begin": 289,
									"end": 350,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 396,
									"end": 398,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 388,
									"end": 394,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 385,
									"end": 399,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 365,
									"end": 383,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 362,
									"end": 400,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 359,
									"end": 520,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "69"
								},
								{
									"begin": 359,
									"end": 520,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 442,
									"end": 452,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B71"
								},
								{
									"begin": 437,
									"end": 440,
									"name": "PUSH",
									"source": 8,
									"value": "E0"
								},
								{
									"begin": 433,
									"end": 453,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": 430,
									"end": 431,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 423,
									"end": 454,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 477,
									"end": 481,
									"name": "PUSH",
									"source": 8,
									"value": "22"
								},
								{
									"begin": 474,
									"end": 475,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 467,
									"end": 482,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 505,
									"end": 509,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 502,
									"end": 503,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 495,
									"end": 510,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 359,
									"end": 520,
									"name": "tag",
									"source": 8,
									"value": "69"
								},
								{
									"begin": 359,
									"end": 520,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 359,
									"end": 520,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 146,
									"end": 526,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 146,
									"end": 526,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 146,
									"end": 526,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 146,
									"end": 526,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 657,
									"end": 1175,
									"name": "tag",
									"source": 8,
									"value": "60"
								},
								{
									"begin": 657,
									"end": 1175,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 759,
									"end": 761,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 754,
									"end": 757,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 751,
									"end": 762,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 748,
									"end": 1169,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 748,
									"end": 1169,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "51"
								},
								{
									"begin": 748,
									"end": 1169,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 795,
									"end": 800,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 792,
									"end": 793,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 785,
									"end": 801,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 839,
									"end": 843,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 836,
									"end": 837,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 826,
									"end": 844,
									"name": "KECCAK256",
									"source": 8
								},
								{
									"begin": 909,
									"end": 911,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 897,
									"end": 907,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 893,
									"end": 912,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 890,
									"end": 891,
									"name": "PUSH",
									"source": 8,
									"value": "5"
								},
								{
									"begin": 886,
									"end": 913,
									"name": "SHR",
									"source": 8
								},
								{
									"begin": 880,
									"end": 884,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 876,
									"end": 914,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 945,
									"end": 949,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 933,
									"end": 943,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 930,
									"end": 950,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 927,
									"end": 974,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 927,
									"end": 974,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 927,
									"end": 974,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 968,
									"end": 972,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 927,
									"end": 974,
									"name": "tag",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 927,
									"end": 974,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1023,
									"end": 1025,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 1018,
									"end": 1021,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 1014,
									"end": 1026,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1011,
									"end": 1012,
									"name": "PUSH",
									"source": 8,
									"value": "5"
								},
								{
									"begin": 1007,
									"end": 1027,
									"name": "SHR",
									"source": 8
								},
								{
									"begin": 1001,
									"end": 1005,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 997,
									"end": 1028,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 987,
									"end": 1028,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 987,
									"end": 1028,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "tag",
									"source": 8,
									"value": "74"
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1096,
									"end": 1098,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1089,
									"end": 1094,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1086,
									"end": 1099,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "76"
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1155,
									"end": 1156,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1141,
									"end": 1157,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1141,
									"end": 1157,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 1122,
									"end": 1123,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 1111,
									"end": 1124,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "74"
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "tag",
									"source": 8,
									"value": "76"
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1082,
									"end": 1085,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1082,
									"end": 1085,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 657,
									"end": 1175,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 657,
									"end": 1175,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 657,
									"end": 1175,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 657,
									"end": 1175,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1351,
									"end": 2650,
									"name": "tag",
									"source": 8,
									"value": "9"
								},
								{
									"begin": 1351,
									"end": 2650,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1471,
									"end": 1481,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1471,
									"end": 1481,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1493,
									"end": 1523,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1493,
									"end": 1523,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 1490,
									"end": 1546,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 1490,
									"end": 1546,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 1490,
									"end": 1546,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1526,
									"end": 1544,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 1526,
									"end": 1544,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "57"
								},
								{
									"begin": 1526,
									"end": 1544,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1526,
									"end": 1544,
									"name": "tag",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 1526,
									"end": 1544,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1555,
									"end": 1652,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "81"
								},
								{
									"begin": 1645,
									"end": 1651,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1605,
									"end": 1643,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "82"
								},
								{
									"begin": 1637,
									"end": 1641,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 1631,
									"end": 1642,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": 1605,
									"end": 1643,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "58"
								},
								{
									"begin": 1605,
									"end": 1643,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1605,
									"end": 1643,
									"name": "tag",
									"source": 8,
									"value": "82"
								},
								{
									"begin": 1605,
									"end": 1643,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1599,
									"end": 1603,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 1555,
									"end": 1652,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "60"
								},
								{
									"begin": 1555,
									"end": 1652,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1555,
									"end": 1652,
									"name": "tag",
									"source": 8,
									"value": "81"
								},
								{
									"begin": 1555,
									"end": 1652,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1701,
									"end": 1705,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1732,
									"end": 1734,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 1721,
									"end": 1735,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1721,
									"end": 1735,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 1749,
									"end": 1750,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 1744,
									"end": 2393,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1744,
									"end": 2393,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 1744,
									"end": 2393,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "84"
								},
								{
									"begin": 1744,
									"end": 2393,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 2437,
									"end": 2438,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2454,
									"end": 2460,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 2451,
									"end": 2540,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 2451,
									"end": 2540,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "85"
								},
								{
									"begin": 2451,
									"end": 2540,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2506,
									"end": 2525,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 2506,
									"end": 2525,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2506,
									"end": 2525,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 2500,
									"end": 2526,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 2451,
									"end": 2540,
									"name": "tag",
									"source": 8,
									"value": "85"
								},
								{
									"begin": 2451,
									"end": 2540,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1308,
									"end": 1309,
									"name": "PUSH",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 1304,
									"end": 1315,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 1304,
									"end": 1315,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1304,
									"end": 1315,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": 1300,
									"end": 1324,
									"name": "SHR",
									"source": 8
								},
								{
									"begin": 1296,
									"end": 1325,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 1286,
									"end": 1326,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1332,
									"end": 1333,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 1328,
									"end": 1339,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 1328,
									"end": 1339,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1328,
									"end": 1339,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": 1283,
									"end": 1340,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 2553,
									"end": 2634,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 2553,
									"end": 2634,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 1714,
									"end": 2644,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "76"
								},
								{
									"begin": 1714,
									"end": 2644,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1744,
									"end": 2393,
									"name": "tag",
									"source": 8,
									"value": "84"
								},
								{
									"begin": 1744,
									"end": 2393,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 604,
									"end": 605,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 597,
									"end": 611,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 597,
									"end": 611,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 597,
									"end": 611,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 641,
									"end": 645,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 628,
									"end": 646,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 628,
									"end": 646,
									"name": "KECCAK256",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1780,
									"end": 1800,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 1780,
									"end": 1800,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1780,
									"end": 1800,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1898,
									"end": 2120,
									"name": "tag",
									"source": 8,
									"value": "88"
								},
								{
									"begin": 1898,
									"end": 2120,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1912,
									"end": 1919,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1909,
									"end": 1910,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1906,
									"end": 1920,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 1898,
									"end": 2120,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 1898,
									"end": 2120,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "90"
								},
								{
									"begin": 1898,
									"end": 2120,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1994,
									"end": 2013,
									"name": "DUP8",
									"source": 8
								},
								{
									"begin": 1994,
									"end": 2013,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 1994,
									"end": 2013,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1988,
									"end": 2014,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 1973,
									"end": 2015,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1973,
									"end": 2015,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 2101,
									"end": 2105,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 2086,
									"end": 2106,
									"name": "SWAP5",
									"source": 8
								},
								{
									"begin": 2086,
									"end": 2106,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 2086,
									"end": 2106,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 2086,
									"end": 2106,
									"name": "SWAP5",
									"source": 8
								},
								{
									"begin": 2054,
									"end": 2055,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 2042,
									"end": 2056,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2042,
									"end": 2056,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 2042,
									"end": 2056,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 2042,
									"end": 2056,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1928,
									"end": 1940,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1898,
									"end": 2120,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "88"
								},
								{
									"begin": 1898,
									"end": 2120,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1898,
									"end": 2120,
									"name": "tag",
									"source": 8,
									"value": "90"
								},
								{
									"begin": 1898,
									"end": 2120,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1902,
									"end": 1905,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2148,
									"end": 2154,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 2139,
									"end": 2146,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2136,
									"end": 2155,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 2133,
									"end": 2334,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 2133,
									"end": 2334,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "91"
								},
								{
									"begin": 2133,
									"end": 2334,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 2209,
									"end": 2228,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 2209,
									"end": 2228,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 2209,
									"end": 2228,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 2203,
									"end": 2229,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2292,
									"end": 2293,
									"name": "PUSH",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 2288,
									"end": 2302,
									"name": "DUP8",
									"source": 8
								},
								{
									"begin": 2288,
									"end": 2302,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2288,
									"end": 2302,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": 2304,
									"end": 2307,
									"name": "PUSH",
									"source": 8,
									"value": "F8"
								},
								{
									"begin": 2284,
									"end": 2308,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 2280,
									"end": 2317,
									"name": "SHR",
									"source": 8
								},
								{
									"begin": 2276,
									"end": 2318,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 2261,
									"end": 2319,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 2246,
									"end": 2320,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2246,
									"end": 2320,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 2133,
									"end": 2334,
									"name": "tag",
									"source": 8,
									"value": "91"
								},
								{
									"begin": 2133,
									"end": 2334,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2380,
									"end": 2381,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 2364,
									"end": 2378,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2364,
									"end": 2378,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2364,
									"end": 2378,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": 2360,
									"end": 2382,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 2347,
									"end": 2383,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2347,
									"end": 2383,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1351,
									"end": 2650,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2655,
									"end": 2782,
									"name": "tag",
									"source": 8,
									"value": "62"
								},
								{
									"begin": 2655,
									"end": 2782,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2716,
									"end": 2726,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B71"
								},
								{
									"begin": 2711,
									"end": 2714,
									"name": "PUSH",
									"source": 8,
									"value": "E0"
								},
								{
									"begin": 2707,
									"end": 2727,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": 2704,
									"end": 2705,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2697,
									"end": 2728,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 2747,
									"end": 2751,
									"name": "PUSH",
									"source": 8,
									"value": "11"
								},
								{
									"begin": 2744,
									"end": 2745,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 2737,
									"end": 2752,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 2771,
									"end": 2775,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 2768,
									"end": 2769,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2761,
									"end": 2776,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 2787,
									"end": 3162,
									"name": "tag",
									"source": 8,
									"value": "63"
								},
								{
									"begin": 2787,
									"end": 3162,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2875,
									"end": 2876,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 2893,
									"end": 2898,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2907,
									"end": 3156,
									"name": "tag",
									"source": 8,
									"value": "94"
								},
								{
									"begin": 2907,
									"end": 3156,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2928,
									"end": 2929,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 2918,
									"end": 2926,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 2915,
									"end": 2930,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 2907,
									"end": 3156,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 2907,
									"end": 3156,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "96"
								},
								{
									"begin": 2907,
									"end": 3156,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 2978,
									"end": 2982,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 2973,
									"end": 2976,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 2969,
									"end": 2983,
									"name": "DIV",
									"source": 8
								},
								{
									"begin": 2963,
									"end": 2967,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2960,
									"end": 2984,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 2957,
									"end": 3007,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 2957,
									"end": 3007,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "98"
								},
								{
									"begin": 2957,
									"end": 3007,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 2987,
									"end": 3005,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "98"
								},
								{
									"begin": 2987,
									"end": 3005,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "62"
								},
								{
									"begin": 2987,
									"end": 3005,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2987,
									"end": 3005,
									"name": "tag",
									"source": 8,
									"value": "98"
								},
								{
									"begin": 2987,
									"end": 3005,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3037,
									"end": 3038,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 3027,
									"end": 3035,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 3023,
									"end": 3039,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 3020,
									"end": 3069,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 3020,
									"end": 3069,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "99"
								},
								{
									"begin": 3020,
									"end": 3069,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 3051,
									"end": 3067,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3051,
									"end": 3067,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3051,
									"end": 3067,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 3051,
									"end": 3067,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3020,
									"end": 3069,
									"name": "tag",
									"source": 8,
									"value": "99"
								},
								{
									"begin": 3020,
									"end": 3069,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3134,
									"end": 3135,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 3130,
									"end": 3146,
									"name": "SWAP4",
									"source": 8
								},
								{
									"begin": 3130,
									"end": 3146,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3130,
									"end": 3146,
									"name": "SWAP4",
									"source": 8
								},
								{
									"begin": 3130,
									"end": 3146,
									"name": "SHR",
									"source": 8
								},
								{
									"begin": 3130,
									"end": 3146,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 3090,
									"end": 3105,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 3090,
									"end": 3105,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 2907,
									"end": 3156,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "94"
								},
								{
									"begin": 2907,
									"end": 3156,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2907,
									"end": 3156,
									"name": "tag",
									"source": 8,
									"value": "96"
								},
								{
									"begin": 2907,
									"end": 3156,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2787,
									"end": 3162,
									"name": "SWAP4",
									"source": 8
								},
								{
									"begin": 2787,
									"end": 3162,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2787,
									"end": 3162,
									"name": "SWAP4",
									"source": 8
								},
								{
									"begin": 2787,
									"end": 3162,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 2787,
									"end": 3162,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2787,
									"end": 3162,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2787,
									"end": 3162,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3167,
									"end": 4069,
									"name": "tag",
									"source": 8,
									"value": "64"
								},
								{
									"begin": 3167,
									"end": 4069,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3216,
									"end": 3221,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3246,
									"end": 3254,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 3236,
									"end": 3316,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "101"
								},
								{
									"begin": 3236,
									"end": 3316,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3287,
									"end": 3288,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 3301,
									"end": 3306,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "100"
								},
								{
									"begin": 3301,
									"end": 3306,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3236,
									"end": 3316,
									"name": "tag",
									"source": 8,
									"value": "101"
								},
								{
									"begin": 3236,
									"end": 3316,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3335,
									"end": 3339,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3325,
									"end": 3401,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "102"
								},
								{
									"begin": 3325,
									"end": 3401,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3372,
									"end": 3373,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3386,
									"end": 3391,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "100"
								},
								{
									"begin": 3386,
									"end": 3391,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3325,
									"end": 3401,
									"name": "tag",
									"source": 8,
									"value": "102"
								},
								{
									"begin": 3325,
									"end": 3401,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3417,
									"end": 3421,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3435,
									"end": 3436,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 3430,
									"end": 3489,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3430,
									"end": 3489,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 3430,
									"end": 3489,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "104"
								},
								{
									"begin": 3430,
									"end": 3489,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 3503,
									"end": 3504,
									"name": "PUSH",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 3498,
									"end": 3672,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3498,
									"end": 3672,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 3498,
									"end": 3672,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "105"
								},
								{
									"begin": 3498,
									"end": 3672,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 3410,
									"end": 3672,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "103"
								},
								{
									"begin": 3410,
									"end": 3672,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3430,
									"end": 3489,
									"name": "tag",
									"source": 8,
									"value": "104"
								},
								{
									"begin": 3430,
									"end": 3489,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3460,
									"end": 3461,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 3451,
									"end": 3461,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 3451,
									"end": 3461,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3474,
									"end": 3479,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3474,
									"end": 3479,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "100"
								},
								{
									"begin": 3474,
									"end": 3479,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3498,
									"end": 3672,
									"name": "tag",
									"source": 8,
									"value": "105"
								},
								{
									"begin": 3498,
									"end": 3672,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3535,
									"end": 3538,
									"name": "PUSH",
									"source": 8,
									"value": "FF"
								},
								{
									"begin": 3525,
									"end": 3533,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 3522,
									"end": 3539,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 3519,
									"end": 3562,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 3519,
									"end": 3562,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "107"
								},
								{
									"begin": 3519,
									"end": 3562,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 3542,
									"end": 3560,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "107"
								},
								{
									"begin": 3542,
									"end": 3560,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "62"
								},
								{
									"begin": 3542,
									"end": 3560,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3542,
									"end": 3560,
									"name": "tag",
									"source": 8,
									"value": "107"
								},
								{
									"begin": 3542,
									"end": 3560,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3598,
									"end": 3599,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 3584,
									"end": 3600,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 3584,
									"end": 3600,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": 3657,
									"end": 3662,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "100"
								},
								{
									"begin": 3657,
									"end": 3662,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3410,
									"end": 3672,
									"name": "tag",
									"source": 8,
									"value": "103"
								},
								{
									"begin": 3410,
									"end": 3672,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3410,
									"end": 3672,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3756,
									"end": 3758,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 3746,
									"end": 3754,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 3743,
									"end": 3759,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 3737,
									"end": 3740,
									"name": "PUSH",
									"source": 8,
									"value": "133"
								},
								{
									"begin": 3731,
									"end": 3735,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 3728,
									"end": 3741,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 3724,
									"end": 3760,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 3718,
									"end": 3720,
									"name": "PUSH",
									"source": 8,
									"value": "4E"
								},
								{
									"begin": 3708,
									"end": 3716,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 3705,
									"end": 3721,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 3700,
									"end": 3702,
									"name": "PUSH",
									"source": 8,
									"value": "B"
								},
								{
									"begin": 3694,
									"end": 3698,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 3691,
									"end": 3703,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 3687,
									"end": 3722,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 3684,
									"end": 3761,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 3681,
									"end": 3884,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 3681,
									"end": 3884,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "108"
								},
								{
									"begin": 3681,
									"end": 3884,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3793,
									"end": 3812,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3793,
									"end": 3812,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3793,
									"end": 3812,
									"name": "EXP",
									"source": 8
								},
								{
									"begin": 3869,
									"end": 3874,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "100"
								},
								{
									"begin": 3869,
									"end": 3874,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3681,
									"end": 3884,
									"name": "tag",
									"source": 8,
									"value": "108"
								},
								{
									"begin": 3681,
									"end": 3884,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3916,
									"end": 3958,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "109"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3941,
									"end": 3949,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 3935,
									"end": 3939,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 3916,
									"end": 3958,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "63"
								},
								{
									"begin": 3916,
									"end": 3958,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3916,
									"end": 3958,
									"name": "tag",
									"source": 8,
									"value": "109"
								},
								{
									"begin": 3916,
									"end": 3958,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3994,
									"end": 4000,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 3990,
									"end": 3991,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3986,
									"end": 3992,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 3982,
									"end": 4001,
									"name": "DIV",
									"source": 8
								},
								{
									"begin": 3973,
									"end": 3980,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 3970,
									"end": 4002,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 3967,
									"end": 4025,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 3967,
									"end": 4025,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "111"
								},
								{
									"begin": 3967,
									"end": 4025,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 4005,
									"end": 4023,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "111"
								},
								{
									"begin": 4005,
									"end": 4023,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "62"
								},
								{
									"begin": 4005,
									"end": 4023,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4005,
									"end": 4023,
									"name": "tag",
									"source": 8,
									"value": "111"
								},
								{
									"begin": 4005,
									"end": 4023,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4043,
									"end": 4063,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 4043,
									"end": 4063,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3167,
									"end": 4069,
									"name": "tag",
									"source": 8,
									"value": "100"
								},
								{
									"begin": 3167,
									"end": 4069,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3167,
									"end": 4069,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 3167,
									"end": 4069,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 3167,
									"end": 4069,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3167,
									"end": 4069,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3167,
									"end": 4069,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4074,
									"end": 4214,
									"name": "tag",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 4074,
									"end": 4214,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4132,
									"end": 4137,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 4161,
									"end": 4208,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "113"
								},
								{
									"begin": 4202,
									"end": 4206,
									"name": "PUSH",
									"source": 8,
									"value": "FF"
								},
								{
									"begin": 4192,
									"end": 4200,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 4188,
									"end": 4207,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 4182,
									"end": 4186,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 4161,
									"end": 4208,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "64"
								},
								{
									"begin": 4161,
									"end": 4208,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4161,
									"end": 4208,
									"name": "tag",
									"source": 8,
									"value": "113"
								},
								{
									"begin": 4161,
									"end": 4208,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4152,
									"end": 4208,
									"name": "SWAP4",
									"source": 8
								},
								{
									"begin": 4074,
									"end": 4214,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 4074,
									"end": 4214,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4219,
									"end": 4387,
									"name": "tag",
									"source": 8,
									"value": "26"
								},
								{
									"begin": 4219,
									"end": 4387,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4292,
									"end": 4301,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 4292,
									"end": 4301,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 4292,
									"end": 4301,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 4323,
									"end": 4332,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 4323,
									"end": 4332,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 4340,
									"end": 4355,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 4340,
									"end": 4355,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 4340,
									"end": 4355,
									"name": "DIV",
									"source": 8
								},
								{
									"begin": 4334,
									"end": 4356,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 4334,
									"end": 4356,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 4320,
									"end": 4357,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 4310,
									"end": 4381,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "100"
								},
								{
									"begin": 4310,
									"end": 4381,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 4361,
									"end": 4379,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "100"
								},
								{
									"begin": 4361,
									"end": 4379,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "62"
								},
								{
									"begin": 4361,
									"end": 4379,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4752,
									"end": 4877,
									"name": "tag",
									"source": 8,
									"value": "41"
								},
								{
									"begin": 4752,
									"end": 4877,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4817,
									"end": 4826,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 4817,
									"end": 4826,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 4817,
									"end": 4826,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 4838,
									"end": 4848,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 4838,
									"end": 4848,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 4838,
									"end": 4848,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 4835,
									"end": 4871,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 4835,
									"end": 4871,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "100"
								},
								{
									"begin": 4835,
									"end": 4871,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 4851,
									"end": 4869,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "100"
								},
								{
									"begin": 4851,
									"end": 4869,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "62"
								},
								{
									"begin": 4851,
									"end": 4869,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5064,
									"end": 5467,
									"name": "tag",
									"source": 8,
									"value": "65"
								},
								{
									"begin": 5064,
									"end": 5467,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 539,
									"end": 6748,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 539,
									"end": 6748,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 539,
									"end": 6748,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 539,
									"end": 6748,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 539,
									"end": 6748,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 539,
									"end": 6748,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 539,
									"end": 6748,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 539,
									"end": 6748,
									"name": "ASSIGNIMMUTABLE",
									"source": 0,
									"value": "31"
								},
								{
									"begin": 539,
									"end": 6748,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 539,
									"end": 6748,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 539,
									"end": 6748,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212206177a80f47e19f1f67f937535d0fa502028a4161efa47f80aeac788d78c4264764736f6c634300081a0033",
									".code": [
										{
											"begin": 539,
											"end": 6748,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 539,
											"end": 6748,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 539,
											"end": 6748,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 539,
											"end": 6748,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 539,
											"end": 6748,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 539,
											"end": 6748,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 539,
											"end": 6748,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 539,
											"end": 6748,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 539,
											"end": 6748,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 539,
											"end": 6748,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 539,
											"end": 6748,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 539,
											"end": 6748,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 539,
											"end": 6748,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 539,
											"end": 6748,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 539,
											"end": 6748,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 539,
											"end": 6748,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 539,
											"end": 6748,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 539,
											"end": 6748,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 539,
											"end": 6748,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 539,
											"end": 6748,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 539,
											"end": 6748,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 539,
											"end": 6748,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 539,
											"end": 6748,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 539,
											"end": 6748,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 539,
											"end": 6748,
											"name": "PUSH",
											"source": 0,
											"value": "67243482"
										},
										{
											"begin": 539,
											"end": 6748,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 539,
											"end": 6748,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 539,
											"end": 6748,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 539,
											"end": 6748,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 539,
											"end": 6748,
											"name": "PUSH",
											"source": 0,
											"value": "A457C2D7"
										},
										{
											"begin": 539,
											"end": 6748,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 539,
											"end": 6748,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 539,
											"end": 6748,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 539,
											"end": 6748,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 539,
											"end": 6748,
											"name": "PUSH",
											"source": 0,
											"value": "DD62ED3E"
										},
										{
											"begin": 539,
											"end": 6748,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 539,
											"end": 6748,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 539,
											"end": 6748,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 539,
											"end": 6748,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 539,
											"end": 6748,
											"name": "PUSH",
											"source": 0,
											"value": "DD62ED3E"
										},
										{
											"begin": 539,
											"end": 6748,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 539,
											"end": 6748,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 539,
											"end": 6748,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 539,
											"end": 6748,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 539,
											"end": 6748,
											"name": "PUSH",
											"source": 0,
											"value": "E74B981B"
										},
										{
											"begin": 539,
											"end": 6748,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 539,
											"end": 6748,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 539,
											"end": 6748,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 539,
											"end": 6748,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 539,
											"end": 6748,
											"name": "PUSH",
											"source": 0,
											"value": "EA2F0B37"
										},
										{
											"begin": 539,
											"end": 6748,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 539,
											"end": 6748,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 539,
											"end": 6748,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 539,
											"end": 6748,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 539,
											"end": 6748,
											"name": "PUSH",
											"source": 0,
											"value": "F2FDE38B"
										},
										{
											"begin": 539,
											"end": 6748,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 539,
											"end": 6748,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 539,
											"end": 6748,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 539,
											"end": 6748,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 539,
											"end": 6748,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 539,
											"end": 6748,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 539,
											"end": 6748,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 539,
											"end": 6748,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 539,
											"end": 6748,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 539,
											"end": 6748,
											"name": "PUSH",
											"source": 0,
											"value": "A457C2D7"
										},
										{
											"begin": 539,
											"end": 6748,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 539,
											"end": 6748,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 539,
											"end": 6748,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 539,
											"end": 6748,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 539,
											"end": 6748,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 539,
											"end": 6748,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 539,
											"end": 6748,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 539,
											"end": 6748,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 539,
											"end": 6748,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 539,
											"end": 6748,
											"name": "PUSH",
											"source": 0,
											"value": "D5F39488"
										},
										{
											"begin": 539,
											"end": 6748,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 539,
											"end": 6748,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 539,
											"end": 6748,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 539,
											"end": 6748,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 539,
											"end": 6748,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 539,
											"end": 6748,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 539,
											"end": 6748,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 539,
											"end": 6748,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 539,
											"end": 6748,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 539,
											"end": 6748,
											"name": "PUSH",
											"source": 0,
											"value": "8456CB59"
										},
										{
											"begin": 539,
											"end": 6748,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 539,
											"end": 6748,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 539,
											"end": 6748,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 539,
											"end": 6748,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 539,
											"end": 6748,
											"name": "PUSH",
											"source": 0,
											"value": "8456CB59"
										},
										{
											"begin": 539,
											"end": 6748,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 539,
											"end": 6748,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 539,
											"end": 6748,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 539,
											"end": 6748,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 539,
											"end": 6748,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 539,
											"end": 6748,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 539,
											"end": 6748,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 539,
											"end": 6748,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 539,
											"end": 6748,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 539,
											"end": 6748,
											"name": "PUSH",
											"source": 0,
											"value": "94544E64"
										},
										{
											"begin": 539,
											"end": 6748,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 539,
											"end": 6748,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 539,
											"end": 6748,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 539,
											"end": 6748,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 539,
											"end": 6748,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 539,
											"end": 6748,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 539,
											"end": 6748,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 539,
											"end": 6748,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 539,
											"end": 6748,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 539,
											"end": 6748,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 539,
											"end": 6748,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 539,
											"end": 6748,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 539,
											"end": 6748,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 539,
											"end": 6748,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 539,
											"end": 6748,
											"name": "PUSH",
											"source": 0,
											"value": "67243482"
										},
										{
											"begin": 539,
											"end": 6748,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 539,
											"end": 6748,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 539,
											"end": 6748,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 539,
											"end": 6748,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 539,
											"end": 6748,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 539,
											"end": 6748,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 539,
											"end": 6748,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 539,
											"end": 6748,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 539,
											"end": 6748,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 539,
											"end": 6748,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 539,
											"end": 6748,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 539,
											"end": 6748,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 539,
											"end": 6748,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 539,
											"end": 6748,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 539,
											"end": 6748,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 539,
											"end": 6748,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 539,
											"end": 6748,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 539,
											"end": 6748,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 539,
											"end": 6748,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 539,
											"end": 6748,
											"name": "PUSH",
											"source": 0,
											"value": "32CB6B0C"
										},
										{
											"begin": 539,
											"end": 6748,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 539,
											"end": 6748,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 539,
											"end": 6748,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 539,
											"end": 6748,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 539,
											"end": 6748,
											"name": "PUSH",
											"source": 0,
											"value": "40C10F19"
										},
										{
											"begin": 539,
											"end": 6748,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 539,
											"end": 6748,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 539,
											"end": 6748,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 539,
											"end": 6748,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 539,
											"end": 6748,
											"name": "PUSH",
											"source": 0,
											"value": "40C10F19"
										},
										{
											"begin": 539,
											"end": 6748,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 539,
											"end": 6748,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 539,
											"end": 6748,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 539,
											"end": 6748,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 539,
											"end": 6748,
											"name": "PUSH",
											"source": 0,
											"value": "437823EC"
										},
										{
											"begin": 539,
											"end": 6748,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 539,
											"end": 6748,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 539,
											"end": 6748,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 539,
											"end": 6748,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 539,
											"end": 6748,
											"name": "PUSH",
											"source": 0,
											"value": "46904840"
										},
										{
											"begin": 539,
											"end": 6748,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 539,
											"end": 6748,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 539,
											"end": 6748,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 539,
											"end": 6748,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 539,
											"end": 6748,
											"name": "PUSH",
											"source": 0,
											"value": "5C975ABB"
										},
										{
											"begin": 539,
											"end": 6748,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 539,
											"end": 6748,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 539,
											"end": 6748,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 539,
											"end": 6748,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 539,
											"end": 6748,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 539,
											"end": 6748,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 539,
											"end": 6748,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 539,
											"end": 6748,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 539,
											"end": 6748,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 539,
											"end": 6748,
											"name": "PUSH",
											"source": 0,
											"value": "32CB6B0C"
										},
										{
											"begin": 539,
											"end": 6748,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 539,
											"end": 6748,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 539,
											"end": 6748,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 539,
											"end": 6748,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 539,
											"end": 6748,
											"name": "PUSH",
											"source": 0,
											"value": "39509351"
										},
										{
											"begin": 539,
											"end": 6748,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 539,
											"end": 6748,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 539,
											"end": 6748,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 539,
											"end": 6748,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 539,
											"end": 6748,
											"name": "PUSH",
											"source": 0,
											"value": "3F4BA83A"
										},
										{
											"begin": 539,
											"end": 6748,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 539,
											"end": 6748,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 539,
											"end": 6748,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 539,
											"end": 6748,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 539,
											"end": 6748,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 539,
											"end": 6748,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 539,
											"end": 6748,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 539,
											"end": 6748,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 539,
											"end": 6748,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 539,
											"end": 6748,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 539,
											"end": 6748,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 539,
											"end": 6748,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 539,
											"end": 6748,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 539,
											"end": 6748,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 539,
											"end": 6748,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 539,
											"end": 6748,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 539,
											"end": 6748,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 539,
											"end": 6748,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 539,
											"end": 6748,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 539,
											"end": 6748,
											"name": "PUSH",
											"source": 0,
											"value": "1F36D925"
										},
										{
											"begin": 539,
											"end": 6748,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 539,
											"end": 6748,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 539,
											"end": 6748,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 539,
											"end": 6748,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 539,
											"end": 6748,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 539,
											"end": 6748,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 539,
											"end": 6748,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 539,
											"end": 6748,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 539,
											"end": 6748,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 539,
											"end": 6748,
											"name": "PUSH",
											"source": 0,
											"value": "313CE567"
										},
										{
											"begin": 539,
											"end": 6748,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 539,
											"end": 6748,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 539,
											"end": 6748,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 539,
											"end": 6748,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 539,
											"end": 6748,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 539,
											"end": 6748,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 539,
											"end": 6748,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 539,
											"end": 6748,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 539,
											"end": 6748,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 539,
											"end": 6748,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 539,
											"end": 6748,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 539,
											"end": 6748,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 539,
											"end": 6748,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 539,
											"end": 6748,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 539,
											"end": 6748,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 539,
											"end": 6748,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 539,
											"end": 6748,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 539,
											"end": 6748,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 539,
											"end": 6748,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 539,
											"end": 6748,
											"name": "PUSH",
											"source": 0,
											"value": "1815C208"
										},
										{
											"begin": 539,
											"end": 6748,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 539,
											"end": 6748,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 539,
											"end": 6748,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 539,
											"end": 6748,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 539,
											"end": 6748,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 539,
											"end": 6748,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 539,
											"end": 6748,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 539,
											"end": 6748,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "tag",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 2158,
											"end": 2256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "tag",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 2158,
											"end": 2256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "tag",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "tag",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 4444,
											"end": 4641,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "tag",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 4444,
											"end": 4641,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "tag",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1085,
											"end": 1099,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1085,
											"end": 1099,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1078,
											"end": 1100,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1060,
											"end": 1101,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1060,
											"end": 1101,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1048,
											"end": 1050,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1033,
											"end": 1051,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 920,
											"end": 1107,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3481,
											"end": 3706,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3481,
											"end": 3706,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3481,
											"end": 3706,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 3481,
											"end": 3706,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 3481,
											"end": 3706,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3481,
											"end": 3706,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3481,
											"end": 3706,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 3481,
											"end": 3706,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3481,
											"end": 3706,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 3481,
											"end": 3706,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3481,
											"end": 3706,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 3481,
											"end": 3706,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3481,
											"end": 3706,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 3481,
											"end": 3706,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3481,
											"end": 3706,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "tag",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3342,
											"end": 3354,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 3342,
											"end": 3354,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "tag",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1449,
											"end": 1474,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1449,
											"end": 1474,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1449,
											"end": 1474,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1437,
											"end": 1439,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1422,
											"end": 1440,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1303,
											"end": 1480,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2281,
											"end": 2543,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 2281,
											"end": 2543,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2281,
											"end": 2543,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 2281,
											"end": 2543,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 2281,
											"end": 2543,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2281,
											"end": 2543,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2281,
											"end": 2543,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 2281,
											"end": 2543,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2281,
											"end": 2543,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 2281,
											"end": 2543,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2281,
											"end": 2543,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 2281,
											"end": 2543,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5426,
											"end": 5763,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 5426,
											"end": 5763,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5426,
											"end": 5763,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 5426,
											"end": 5763,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 5426,
											"end": 5763,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5426,
											"end": 5763,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5426,
											"end": 5763,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 5426,
											"end": 5763,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5426,
											"end": 5763,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 5426,
											"end": 5763,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5426,
											"end": 5763,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 5426,
											"end": 5763,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3104,
											"end": 3195,
											"name": "tag",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 3104,
											"end": 3195,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3104,
											"end": 3195,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3104,
											"end": 3195,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3186,
											"end": 3188,
											"name": "PUSH",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 2237,
											"end": 2273,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2237,
											"end": 2273,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2225,
											"end": 2227,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2210,
											"end": 2228,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3104,
											"end": 3195,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2095,
											"end": 2279,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 669,
											"end": 727,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 669,
											"end": 727,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 669,
											"end": 727,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 706,
											"end": 727,
											"name": "PUSH",
											"source": 0,
											"value": "84595161401484A000000"
										},
										{
											"begin": 669,
											"end": 727,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 669,
											"end": 727,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "tag",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 5854,
											"end": 6088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "tag",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 5854,
											"end": 6088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4789,
											"end": 4854,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 4789,
											"end": 4854,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4789,
											"end": 4854,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 4789,
											"end": 4854,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 4789,
											"end": 4854,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2046,
											"end": 2218,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 2046,
											"end": 2218,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2046,
											"end": 2218,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 2046,
											"end": 2218,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 2046,
											"end": 2218,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2046,
											"end": 2218,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2046,
											"end": 2218,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 2046,
											"end": 2218,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2046,
											"end": 2218,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 2046,
											"end": 2218,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2046,
											"end": 2218,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 2046,
											"end": 2218,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3087,
											"end": 3236,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 3087,
											"end": 3236,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3087,
											"end": 3236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 3087,
											"end": 3236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 3087,
											"end": 3236,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3087,
											"end": 3236,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3087,
											"end": 3236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 3087,
											"end": 3236,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3087,
											"end": 3236,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 3087,
											"end": 3236,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3087,
											"end": 3236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 3087,
											"end": 3236,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 827,
											"end": 854,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 827,
											"end": 854,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 827,
											"end": 854,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 827,
											"end": 854,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 827,
											"end": 854,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 827,
											"end": 854,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 827,
											"end": 854,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 827,
											"end": 854,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 827,
											"end": 854,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 827,
											"end": 854,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 827,
											"end": 854,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 827,
											"end": 854,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 827,
											"end": 854,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2448,
											"end": 2480,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2448,
											"end": 2480,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2448,
											"end": 2480,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2430,
											"end": 2481,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2430,
											"end": 2481,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2418,
											"end": 2420,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2403,
											"end": 2421,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 827,
											"end": 854,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2284,
											"end": 2487,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5952,
											"end": 6746,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 5952,
											"end": 6746,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5952,
											"end": 6746,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 5952,
											"end": 6746,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 5952,
											"end": 6746,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5952,
											"end": 6746,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5952,
											"end": 6746,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 5952,
											"end": 6746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5952,
											"end": 6746,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 5952,
											"end": 6746,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5952,
											"end": 6746,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 5952,
											"end": 6746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "tag",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 3419,
											"end": 3544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "tag",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3493,
											"end": 3500,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1824,
											"end": 1925,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4693,
											"end": 4754,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4693,
											"end": 4754,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4693,
											"end": 4754,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 4693,
											"end": 4754,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 4693,
											"end": 4754,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 784,
											"end": 821,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 784,
											"end": 821,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 784,
											"end": 821,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 784,
											"end": 821,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 784,
											"end": 821,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 784,
											"end": 821,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 784,
											"end": 821,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2369,
											"end": 2471,
											"name": "tag",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 2369,
											"end": 2471,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2369,
											"end": 2471,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 2369,
											"end": 2471,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "110"
										},
										{
											"begin": 2369,
											"end": 2471,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "tag",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 6575,
											"end": 7002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "tag",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "114"
										},
										{
											"begin": 6575,
											"end": 7002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5221,
											"end": 5420,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 5221,
											"end": 5420,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5221,
											"end": 5420,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 5221,
											"end": 5420,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 5221,
											"end": 5420,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5221,
											"end": 5420,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5221,
											"end": 5420,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 5221,
											"end": 5420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5221,
											"end": 5420,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 5221,
											"end": 5420,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5221,
											"end": 5420,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 5221,
											"end": 5420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 987,
											"end": 1020,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 987,
											"end": 1020,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 987,
											"end": 1020,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 987,
											"end": 1020,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 987,
											"end": 1020,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 987,
											"end": 1020,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "tag",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "124"
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "125"
										},
										{
											"begin": 3987,
											"end": 4136,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "tag",
											"source": 4,
											"value": "124"
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "126"
										},
										{
											"begin": 3987,
											"end": 4136,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2584,
											"end": 3058,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 2584,
											"end": 3058,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2584,
											"end": 3058,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 2584,
											"end": 3058,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 2584,
											"end": 3058,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2584,
											"end": 3058,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2584,
											"end": 3058,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 2584,
											"end": 3058,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2584,
											"end": 3058,
											"name": "tag",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 2584,
											"end": 3058,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2584,
											"end": 3058,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 2584,
											"end": 3058,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3242,
											"end": 3388,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 3242,
											"end": 3388,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3242,
											"end": 3388,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 3242,
											"end": 3388,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 3242,
											"end": 3388,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3242,
											"end": 3388,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3242,
											"end": 3388,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 3242,
											"end": 3388,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3242,
											"end": 3388,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 3242,
											"end": 3388,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3242,
											"end": 3388,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 3242,
											"end": 3388,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 2074,
											"end": 2272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "tag",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 2074,
											"end": 2272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "tag",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2212,
											"end": 2225,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 2244,
											"end": 2249,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "138"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "139"
										},
										{
											"begin": 2237,
											"end": 2249,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "tag",
											"source": 4,
											"value": "138"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "140"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "139"
										},
										{
											"begin": 2237,
											"end": 2249,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "tag",
											"source": 4,
											"value": "140"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "141"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "142"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "141"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "tag",
											"source": 4,
											"value": "142"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "tag",
											"source": 4,
											"value": "143"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "143"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "tag",
											"source": 4,
											"value": "141"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2158,
											"end": 2256,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "tag",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4527,
											"end": 4531,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 4581,
											"end": 4613,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "147"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4597,
											"end": 4604,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4606,
											"end": 4612,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4581,
											"end": 4589,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "148"
										},
										{
											"begin": 4581,
											"end": 4613,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4581,
											"end": 4613,
											"name": "tag",
											"source": 4,
											"value": "147"
										},
										{
											"begin": 4581,
											"end": 4613,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4630,
											"end": 4634,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 4623,
											"end": 4634,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4623,
											"end": 4634,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4623,
											"end": 4634,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "tag",
											"source": 4,
											"value": "144"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4444,
											"end": 4641,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3481,
											"end": 3706,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 3481,
											"end": 3706,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "150"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 1,
											"value": "150"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3559,
											"end": 3581,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3559,
											"end": 3581,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3551,
											"end": 3615,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 3551,
											"end": 3615,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3551,
											"end": 3615,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3551,
											"end": 3615,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3551,
											"end": 3615,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3551,
											"end": 3615,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4489,
											"end": 4491,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3551,
											"end": 3615,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3551,
											"end": 3615,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3551,
											"end": 3615,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4471,
											"end": 4492,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4528,
											"end": 4530,
											"name": "PUSH",
											"source": 8,
											"value": "1D"
										},
										{
											"begin": 4508,
											"end": 4526,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 4508,
											"end": 4526,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4508,
											"end": 4526,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4501,
											"end": 4531,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4567,
											"end": 4598,
											"name": "PUSH",
											"source": 8,
											"value": "5265766F6C74436F696E3A20696E76616C6964206E6577206F776E6572000000"
										},
										{
											"begin": 4547,
											"end": 4565,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 4547,
											"end": 4565,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4547,
											"end": 4565,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4540,
											"end": 4599,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4616,
											"end": 4634,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 4616,
											"end": 4634,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3551,
											"end": 3615,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 3551,
											"end": 3615,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3551,
											"end": 3615,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3551,
											"end": 3615,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3551,
											"end": 3615,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3551,
											"end": 3615,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3551,
											"end": 3615,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3551,
											"end": 3615,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3551,
											"end": 3615,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3551,
											"end": 3615,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 3551,
											"end": 3615,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3652,
											"end": 3660,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3630,
											"end": 3661,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3643,
											"end": 3650,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3643,
											"end": 3650,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 3643,
											"end": 3650,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3630,
											"end": 3661,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3630,
											"end": 3661,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8292FCE18FA69EDF4DB7B94EA2E58241DF0AE57F97E0A6C9B29067028BF92D76"
										},
										{
											"begin": 3630,
											"end": 3661,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3630,
											"end": 3661,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3630,
											"end": 3661,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3630,
											"end": 3661,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3630,
											"end": 3661,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3630,
											"end": 3661,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3630,
											"end": 3661,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3630,
											"end": 3661,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3630,
											"end": 3661,
											"modifierDepth": 1,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 3671,
											"end": 3699,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 3690,
											"end": 3698,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3671,
											"end": 3689,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 3671,
											"end": 3699,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3671,
											"end": 3699,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 3671,
											"end": 3699,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3481,
											"end": 3706,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3481,
											"end": 3706,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2281,
											"end": 2543,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 2281,
											"end": 2543,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "161"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 1,
											"value": "161"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2375,
											"end": 2377,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 2365,
											"end": 2371,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2365,
											"end": 2377,
											"modifierDepth": 1,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 2365,
											"end": 2377,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2394,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 2357,
											"end": 2394,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2394,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2357,
											"end": 2394,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2357,
											"end": 2394,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2394,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4847,
											"end": 4849,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2357,
											"end": 2394,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2357,
											"end": 2394,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2394,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4829,
											"end": 4850,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4886,
											"end": 4888,
											"name": "PUSH",
											"source": 8,
											"value": "C"
										},
										{
											"begin": 4866,
											"end": 4884,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 4866,
											"end": 4884,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4866,
											"end": 4884,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4859,
											"end": 4889,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "8CCACA40E8DEDE40D0D2CED"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4905,
											"end": 4923,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 4905,
											"end": 4923,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4905,
											"end": 4923,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4898,
											"end": 4940,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4957,
											"end": 4975,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 4957,
											"end": 4975,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2357,
											"end": 2394,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 4645,
											"end": 4981,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2357,
											"end": 2394,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 2357,
											"end": 2394,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2423,
											"end": 2441,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 2423,
											"end": 2441,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2423,
											"end": 2441,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2451,
											"end": 2478,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2451,
											"end": 2478,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2451,
											"end": 2478,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2451,
											"end": 2478,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2493,
											"end": 2536,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2493,
											"end": 2536,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2493,
											"end": 2536,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5160,
											"end": 5185,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5160,
											"end": 5185,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5160,
											"end": 5185,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5216,
											"end": 5218,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5201,
											"end": 5219,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5201,
											"end": 5219,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5194,
											"end": 5228,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 5194,
											"end": 5228,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5194,
											"end": 5228,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2493,
											"end": 2536,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "D141D90E37CFF90C4910D122C1B6BC4951144BBF7AD06233CE2A2954E5C25E3B"
										},
										{
											"begin": 2493,
											"end": 2536,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5133,
											"end": 5151,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2493,
											"end": 2536,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 2493,
											"end": 2536,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2493,
											"end": 2536,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2493,
											"end": 2536,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2493,
											"end": 2536,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2493,
											"end": 2536,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2493,
											"end": 2536,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2493,
											"end": 2536,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2493,
											"end": 2536,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 2347,
											"end": 2543,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2281,
											"end": 2543,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2281,
											"end": 2543,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5426,
											"end": 5763,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 5426,
											"end": 5763,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5572,
											"end": 5576,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "169"
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "170"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "tag",
											"source": 3,
											"value": "169"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1239,
											"end": 1258,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "172"
										},
										{
											"begin": 1239,
											"end": 1256,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "173"
										},
										{
											"begin": 1239,
											"end": 1258,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1239,
											"end": 1258,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "172"
										},
										{
											"begin": 1239,
											"end": 1258,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5596,
											"end": 5612,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5596,
											"end": 5612,
											"modifierDepth": 2,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5588,
											"end": 5645,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 5588,
											"end": 5645,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5588,
											"end": 5645,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5588,
											"end": 5645,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5588,
											"end": 5645,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5588,
											"end": 5645,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5441,
											"end": 5443,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5588,
											"end": 5645,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5588,
											"end": 5645,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5588,
											"end": 5645,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5423,
											"end": 5444,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5480,
											"end": 5482,
											"name": "PUSH",
											"source": 8,
											"value": "1C"
										},
										{
											"begin": 5460,
											"end": 5478,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 5460,
											"end": 5478,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5460,
											"end": 5478,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5453,
											"end": 5483,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5519,
											"end": 5549,
											"name": "PUSH",
											"source": 8,
											"value": "5265766F6C74436F696E3A207472616E7366657220746F207A65726F00000000"
										},
										{
											"begin": 5499,
											"end": 5517,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 5499,
											"end": 5517,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5499,
											"end": 5517,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5492,
											"end": 5550,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5567,
											"end": 5585,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 5567,
											"end": 5585,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5588,
											"end": 5645,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 5239,
											"end": 5591,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5588,
											"end": 5645,
											"modifierDepth": 2,
											"name": "tag",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 5588,
											"end": 5645,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5655,
											"end": 5698,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 5671,
											"end": 5675,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 5691,
											"end": 5697,
											"modifierDepth": 2,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5655,
											"end": 5670,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 5655,
											"end": 5698,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5655,
											"end": 5698,
											"modifierDepth": 2,
											"name": "tag",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 5655,
											"end": 5698,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5708,
											"end": 5735,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 5718,
											"end": 5722,
											"modifierDepth": 2,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5724,
											"end": 5726,
											"modifierDepth": 2,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5728,
											"end": 5734,
											"modifierDepth": 2,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5708,
											"end": 5717,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 5708,
											"end": 5735,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5708,
											"end": 5735,
											"modifierDepth": 2,
											"name": "tag",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 5708,
											"end": 5735,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5752,
											"end": 5756,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "183"
										},
										{
											"begin": 1716,
											"end": 1717,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2809,
											"end": 2816,
											"name": "PUSH",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "tag",
											"source": 3,
											"value": "183"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5426,
											"end": 5763,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 5426,
											"end": 5763,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5426,
											"end": 5763,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5426,
											"end": 5763,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5426,
											"end": 5763,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5426,
											"end": 5763,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "tag",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5942,
											"end": 5946,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 5996,
											"end": 6060,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "147"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6012,
											"end": 6019,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 6049,
											"end": 6059,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 6021,
											"end": 6046,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "189"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6012,
											"end": 6019,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6021,
											"end": 6030,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "126"
										},
										{
											"begin": 6021,
											"end": 6046,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6021,
											"end": 6046,
											"name": "tag",
											"source": 4,
											"value": "189"
										},
										{
											"begin": 6021,
											"end": 6046,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6021,
											"end": 6059,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "190"
										},
										{
											"begin": 6021,
											"end": 6059,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6021,
											"end": 6059,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6021,
											"end": 6059,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "191"
										},
										{
											"begin": 6021,
											"end": 6059,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6021,
											"end": 6059,
											"name": "tag",
											"source": 4,
											"value": "190"
										},
										{
											"begin": 6021,
											"end": 6059,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5996,
											"end": 6004,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "148"
										},
										{
											"begin": 5996,
											"end": 6060,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4789,
											"end": 4854,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 4789,
											"end": 4854,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "193"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 1,
											"value": "193"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4837,
											"end": 4847,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 4837,
											"end": 4845,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 4837,
											"end": 4847,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4837,
											"end": 4847,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 4837,
											"end": 4847,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4789,
											"end": 4854,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2046,
											"end": 2218,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 2046,
											"end": 2218,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "198"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 1,
											"value": "198"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 706,
											"end": 727,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "84595161401484A000000"
										},
										{
											"begin": 2141,
											"end": 2147,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2138,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 3342,
											"end": 3354,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 3342,
											"end": 3354,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3342,
											"end": 3354,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2125,
											"end": 2138,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 2125,
											"end": 2138,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2147,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 2125,
											"end": 2147,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2147,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2147,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 2125,
											"end": 2147,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2147,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 2125,
											"end": 2147,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2161,
											"modifierDepth": 1,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2161,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2117,
											"end": 2184,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 2117,
											"end": 2184,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2117,
											"end": 2184,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2117,
											"end": 2184,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2117,
											"end": 2184,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2117,
											"end": 2184,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6060,
											"end": 6062,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2117,
											"end": 2184,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2117,
											"end": 2184,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2117,
											"end": 2184,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6042,
											"end": 6063,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6099,
											"end": 6101,
											"name": "PUSH",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 6079,
											"end": 6097,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 6079,
											"end": 6097,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6079,
											"end": 6097,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6072,
											"end": 6102,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "45786365656473206D617820737570706C79"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6118,
											"end": 6136,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 6118,
											"end": 6136,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6118,
											"end": 6136,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6111,
											"end": 6159,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6176,
											"end": 6194,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 6176,
											"end": 6194,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2117,
											"end": 2184,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 5858,
											"end": 6200,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2117,
											"end": 2184,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 2117,
											"end": 2184,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2194,
											"end": 2211,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 2200,
											"end": 2202,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2204,
											"end": 2210,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2194,
											"end": 2199,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 2194,
											"end": 2211,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2194,
											"end": 2211,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 2194,
											"end": 2211,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2046,
											"end": 2218,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2046,
											"end": 2218,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2046,
											"end": 2218,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3087,
											"end": 3236,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 3087,
											"end": 3236,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "208"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 1,
											"value": "208"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3157,
											"end": 3184,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3157,
											"end": 3184,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3157,
											"end": 3184,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3157,
											"end": 3184,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3157,
											"end": 3184,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3157,
											"end": 3184,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3157,
											"end": 3175,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 3157,
											"end": 3184,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3157,
											"end": 3184,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3157,
											"end": 3184,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3157,
											"end": 3184,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3157,
											"end": 3184,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3157,
											"end": 3184,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3157,
											"end": 3184,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3157,
											"end": 3184,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3157,
											"end": 3184,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3157,
											"end": 3191,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3157,
											"end": 3191,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3157,
											"end": 3191,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3187,
											"end": 3191,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3157,
											"end": 3191,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3157,
											"end": 3191,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3157,
											"end": 3191,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3206,
											"end": 3229,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3206,
											"end": 3229,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2430,
											"end": 2481,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2430,
											"end": 2481,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2430,
											"end": 2481,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3206,
											"end": 3229,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "58C3E0504C69D3A92726966F152A771E0F8F6AD4DACA1AE9055A38ABA1FD2B62"
										},
										{
											"begin": 3206,
											"end": 3229,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2403,
											"end": 2421,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3206,
											"end": 3229,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 3206,
											"end": 3229,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3206,
											"end": 3229,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3206,
											"end": 3229,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3206,
											"end": 3229,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3206,
											"end": 3229,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3206,
											"end": 3229,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3206,
											"end": 3229,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3206,
											"end": 3229,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 3087,
											"end": 3236,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3087,
											"end": 3236,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5952,
											"end": 6746,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 5952,
											"end": 6746,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "213"
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "170"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "tag",
											"source": 3,
											"value": "213"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1239,
											"end": 1258,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "215"
										},
										{
											"begin": 1239,
											"end": 1256,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "173"
										},
										{
											"begin": 1239,
											"end": 1258,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1239,
											"end": 1258,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "215"
										},
										{
											"begin": 1239,
											"end": 1258,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6110,
											"end": 6120,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6124,
											"end": 6132,
											"modifierDepth": 2,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 6110,
											"end": 6132,
											"modifierDepth": 2,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6110,
											"end": 6132,
											"modifierDepth": 2,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6102,
											"end": 6174,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 6102,
											"end": 6174,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6102,
											"end": 6174,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6102,
											"end": 6174,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6102,
											"end": 6174,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6102,
											"end": 6174,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6407,
											"end": 6409,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6102,
											"end": 6174,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6102,
											"end": 6174,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6102,
											"end": 6174,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6389,
											"end": 6410,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6446,
											"end": 6448,
											"name": "PUSH",
											"source": 8,
											"value": "25"
										},
										{
											"begin": 6426,
											"end": 6444,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 6426,
											"end": 6444,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6426,
											"end": 6444,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6419,
											"end": 6449,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6485,
											"end": 6519,
											"name": "PUSH",
											"source": 8,
											"value": "5265766F6C74436F696E3A206F6E6C79206465706C6F7965722063616E206169"
										},
										{
											"begin": 6465,
											"end": 6483,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 6465,
											"end": 6483,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6465,
											"end": 6483,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6458,
											"end": 6520,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7264726F7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "DC"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6536,
											"end": 6554,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 6536,
											"end": 6554,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6536,
											"end": 6554,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6529,
											"end": 6564,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6581,
											"end": 6600,
											"name": "PUSH",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 6581,
											"end": 6600,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6102,
											"end": 6174,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 6205,
											"end": 6606,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6102,
											"end": 6174,
											"modifierDepth": 2,
											"name": "tag",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 6102,
											"end": 6174,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6192,
											"end": 6227,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6192,
											"end": 6227,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6192,
											"end": 6227,
											"modifierDepth": 2,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6184,
											"end": 6267,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 6184,
											"end": 6267,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6184,
											"end": 6267,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6184,
											"end": 6267,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6184,
											"end": 6267,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6184,
											"end": 6267,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6813,
											"end": 6815,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6184,
											"end": 6267,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6184,
											"end": 6267,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6184,
											"end": 6267,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6795,
											"end": 6816,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6852,
											"end": 6854,
											"name": "PUSH",
											"source": 8,
											"value": "23"
										},
										{
											"begin": 6832,
											"end": 6850,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 6832,
											"end": 6850,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6832,
											"end": 6850,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6825,
											"end": 6855,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6891,
											"end": 6925,
											"name": "PUSH",
											"source": 8,
											"value": "5265766F6C74436F696E3A2061697264726F7020617272617973206D69736D61"
										},
										{
											"begin": 6871,
											"end": 6889,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 6871,
											"end": 6889,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6871,
											"end": 6889,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6864,
											"end": 6926,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8C6D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "EB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6942,
											"end": 6960,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 6942,
											"end": 6960,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6942,
											"end": 6960,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6935,
											"end": 6968,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6985,
											"end": 7004,
											"name": "PUSH",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 6985,
											"end": 7004,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6184,
											"end": 6267,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 6611,
											"end": 7010,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6184,
											"end": 6267,
											"modifierDepth": 2,
											"name": "tag",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 6184,
											"end": 6267,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6277,
											"end": 6290,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6277,
											"end": 6290,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6330,
											"end": 6419,
											"modifierDepth": 2,
											"name": "tag",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 6330,
											"end": 6419,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6350,
											"end": 6368,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6350,
											"end": 6368,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6350,
											"end": 6368,
											"modifierDepth": 2,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 6330,
											"end": 6419,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6330,
											"end": 6419,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 6330,
											"end": 6419,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6398,
											"end": 6405,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6398,
											"end": 6405,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6406,
											"end": 6407,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6398,
											"end": 6408,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6398,
											"end": 6408,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6398,
											"end": 6408,
											"modifierDepth": 2,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 6398,
											"end": 6408,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 6398,
											"end": 6408,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6398,
											"end": 6408,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 6398,
											"end": 6408,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 6398,
											"end": 6408,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6398,
											"end": 6408,
											"modifierDepth": 2,
											"name": "tag",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 6398,
											"end": 6408,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6398,
											"end": 6408,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6398,
											"end": 6408,
											"modifierDepth": 2,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6398,
											"end": 6408,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6398,
											"end": 6408,
											"modifierDepth": 2,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6398,
											"end": 6408,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6398,
											"end": 6408,
											"modifierDepth": 2,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 6389,
											"end": 6408,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6389,
											"end": 6408,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 6389,
											"end": 6408,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6389,
											"end": 6408,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6389,
											"end": 6408,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 6389,
											"end": 6408,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6389,
											"end": 6408,
											"modifierDepth": 2,
											"name": "tag",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 6389,
											"end": 6408,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6389,
											"end": 6408,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6370,
											"end": 6373,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6370,
											"end": 6373,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6330,
											"end": 6419,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 6330,
											"end": 6419,
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6330,
											"end": 6419,
											"modifierDepth": 2,
											"name": "tag",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 6330,
											"end": 6419,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6330,
											"end": 6419,
											"modifierDepth": 2,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 706,
											"end": 727,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "84595161401484A000000"
										},
										{
											"begin": 6494,
											"end": 6499,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6478,
											"end": 6491,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 3342,
											"end": 3354,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 3342,
											"end": 3354,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3342,
											"end": 3354,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6478,
											"end": 6491,
											"modifierDepth": 2,
											"name": "tag",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 6478,
											"end": 6491,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6478,
											"end": 6499,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 6478,
											"end": 6499,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6478,
											"end": 6499,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6478,
											"end": 6499,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 6478,
											"end": 6499,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6478,
											"end": 6499,
											"modifierDepth": 2,
											"name": "tag",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 6478,
											"end": 6499,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6478,
											"end": 6513,
											"modifierDepth": 2,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 6478,
											"end": 6513,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6470,
											"end": 6548,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 6470,
											"end": 6548,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6470,
											"end": 6548,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6470,
											"end": 6548,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6470,
											"end": 6548,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6470,
											"end": 6548,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7349,
											"end": 7351,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6470,
											"end": 6548,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6470,
											"end": 6548,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6470,
											"end": 6548,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7331,
											"end": 7352,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7388,
											"end": 7390,
											"name": "PUSH",
											"source": 8,
											"value": "1E"
										},
										{
											"begin": 7368,
											"end": 7386,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 7368,
											"end": 7386,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7368,
											"end": 7386,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7361,
											"end": 7391,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7427,
											"end": 7459,
											"name": "PUSH",
											"source": 8,
											"value": "5265766F6C74436F696E3A2065786365656473206D617820737570706C790000"
										},
										{
											"begin": 7407,
											"end": 7425,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 7407,
											"end": 7425,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7407,
											"end": 7425,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7400,
											"end": 7460,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7477,
											"end": 7495,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 7477,
											"end": 7495,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6470,
											"end": 6548,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 7147,
											"end": 7501,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6470,
											"end": 6548,
											"modifierDepth": 2,
											"name": "tag",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 6470,
											"end": 6548,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6587,
											"end": 6596,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6582,
											"end": 6740,
											"modifierDepth": 2,
											"name": "tag",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 6582,
											"end": 6740,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6602,
											"end": 6623,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6602,
											"end": 6623,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6602,
											"end": 6623,
											"modifierDepth": 2,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 6582,
											"end": 6740,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6582,
											"end": 6740,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 6582,
											"end": 6740,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6644,
											"end": 6676,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 6650,
											"end": 6660,
											"modifierDepth": 2,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 6650,
											"end": 6660,
											"modifierDepth": 2,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 6661,
											"end": 6662,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6650,
											"end": 6663,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6650,
											"end": 6663,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6650,
											"end": 6663,
											"modifierDepth": 2,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 6650,
											"end": 6663,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 6650,
											"end": 6663,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6650,
											"end": 6663,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 6650,
											"end": 6663,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 6650,
											"end": 6663,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6650,
											"end": 6663,
											"modifierDepth": 2,
											"name": "tag",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 6650,
											"end": 6663,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6650,
											"end": 6663,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6650,
											"end": 6663,
											"modifierDepth": 2,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6650,
											"end": 6663,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6650,
											"end": 6663,
											"modifierDepth": 2,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6650,
											"end": 6663,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6650,
											"end": 6663,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6650,
											"end": 6663,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6650,
											"end": 6663,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6650,
											"end": 6663,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6650,
											"end": 6663,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 6650,
											"end": 6663,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6650,
											"end": 6663,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6650,
											"end": 6663,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 6650,
											"end": 6663,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6650,
											"end": 6663,
											"modifierDepth": 2,
											"name": "tag",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 6650,
											"end": 6663,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6665,
											"end": 6672,
											"modifierDepth": 2,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6665,
											"end": 6672,
											"modifierDepth": 2,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6673,
											"end": 6674,
											"modifierDepth": 2,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6665,
											"end": 6675,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6665,
											"end": 6675,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6665,
											"end": 6675,
											"modifierDepth": 2,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 6665,
											"end": 6675,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 6665,
											"end": 6675,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6665,
											"end": 6675,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 6665,
											"end": 6675,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 6665,
											"end": 6675,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6665,
											"end": 6675,
											"modifierDepth": 2,
											"name": "tag",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 6665,
											"end": 6675,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6665,
											"end": 6675,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6665,
											"end": 6675,
											"modifierDepth": 2,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6665,
											"end": 6675,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6665,
											"end": 6675,
											"modifierDepth": 2,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6665,
											"end": 6675,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6665,
											"end": 6675,
											"modifierDepth": 2,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 6644,
											"end": 6649,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 6644,
											"end": 6676,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6644,
											"end": 6676,
											"modifierDepth": 2,
											"name": "tag",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 6644,
											"end": 6676,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6703,
											"end": 6713,
											"modifierDepth": 2,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6703,
											"end": 6713,
											"modifierDepth": 2,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6714,
											"end": 6715,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6703,
											"end": 6716,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6703,
											"end": 6716,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6703,
											"end": 6716,
											"modifierDepth": 2,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 6703,
											"end": 6716,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 6703,
											"end": 6716,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6703,
											"end": 6716,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 6703,
											"end": 6716,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 6703,
											"end": 6716,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6703,
											"end": 6716,
											"modifierDepth": 2,
											"name": "tag",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 6703,
											"end": 6716,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6703,
											"end": 6716,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6703,
											"end": 6716,
											"modifierDepth": 2,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6703,
											"end": 6716,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6703,
											"end": 6716,
											"modifierDepth": 2,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6703,
											"end": 6716,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6703,
											"end": 6716,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6703,
											"end": 6716,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6703,
											"end": 6716,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6703,
											"end": 6716,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6703,
											"end": 6716,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 6703,
											"end": 6716,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6703,
											"end": 6716,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6703,
											"end": 6716,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 6703,
											"end": 6716,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6703,
											"end": 6716,
											"modifierDepth": 2,
											"name": "tag",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 6703,
											"end": 6716,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6695,
											"end": 6729,
											"modifierDepth": 2,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6695,
											"end": 6729,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "8C32C568416FCF97BE35CE5B27844CFDDCD63A67A1A602C3595BA5DAC38F303A"
										},
										{
											"begin": 6718,
											"end": 6725,
											"modifierDepth": 2,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6718,
											"end": 6725,
											"modifierDepth": 2,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6726,
											"end": 6727,
											"modifierDepth": 2,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6718,
											"end": 6728,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6718,
											"end": 6728,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6718,
											"end": 6728,
											"modifierDepth": 2,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 6718,
											"end": 6728,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 6718,
											"end": 6728,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6718,
											"end": 6728,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 6718,
											"end": 6728,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 6718,
											"end": 6728,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6718,
											"end": 6728,
											"modifierDepth": 2,
											"name": "tag",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 6718,
											"end": 6728,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6718,
											"end": 6728,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6718,
											"end": 6728,
											"modifierDepth": 2,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6718,
											"end": 6728,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6718,
											"end": 6728,
											"modifierDepth": 2,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6718,
											"end": 6728,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6718,
											"end": 6728,
											"modifierDepth": 2,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 6695,
											"end": 6729,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6695,
											"end": 6729,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6695,
											"end": 6729,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 6695,
											"end": 6729,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1449,
											"end": 1474,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1449,
											"end": 1474,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1437,
											"end": 1439,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1422,
											"end": 1440,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1422,
											"end": 1440,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1303,
											"end": 1480,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6695,
											"end": 6729,
											"modifierDepth": 2,
											"name": "tag",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 6695,
											"end": 6729,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6695,
											"end": 6729,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6695,
											"end": 6729,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6695,
											"end": 6729,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6695,
											"end": 6729,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6695,
											"end": 6729,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6695,
											"end": 6729,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6695,
											"end": 6729,
											"modifierDepth": 2,
											"name": "LOG2",
											"source": 0
										},
										{
											"begin": 6625,
											"end": 6628,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6625,
											"end": 6628,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6582,
											"end": 6740,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 6582,
											"end": 6740,
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6582,
											"end": 6740,
											"modifierDepth": 2,
											"name": "tag",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 6582,
											"end": 6740,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6582,
											"end": 6740,
											"modifierDepth": 2,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6092,
											"end": 6746,
											"modifierDepth": 2,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "250"
										},
										{
											"begin": 1716,
											"end": 1717,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2809,
											"end": 2816,
											"name": "PUSH",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "tag",
											"source": 3,
											"value": "250"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5952,
											"end": 6746,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5952,
											"end": 6746,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5952,
											"end": 6746,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5952,
											"end": 6746,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5952,
											"end": 6746,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "tag",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "253"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 1,
											"value": "253"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1888,
											"end": 1918,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "195"
										},
										{
											"begin": 1915,
											"end": 1916,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1888,
											"end": 1906,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "158"
										},
										{
											"begin": 1888,
											"end": 1918,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4693,
											"end": 4754,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 4693,
											"end": 4754,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "257"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 1,
											"value": "257"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4739,
											"end": 4747,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 4739,
											"end": 4745,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "260"
										},
										{
											"begin": 4739,
											"end": 4747,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2369,
											"end": 2471,
											"name": "tag",
											"source": 4,
											"value": "110"
										},
										{
											"begin": 2369,
											"end": 2471,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2425,
											"end": 2438,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 2457,
											"end": 2464,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "138"
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "139"
										},
										{
											"begin": 2450,
											"end": 2464,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "tag",
											"source": 4,
											"value": "114"
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6668,
											"end": 6672,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 6668,
											"end": 6672,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6749,
											"end": 6774,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "270"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6766,
											"end": 6773,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 6749,
											"end": 6758,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "126"
										},
										{
											"begin": 6749,
											"end": 6774,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6749,
											"end": 6774,
											"name": "tag",
											"source": 4,
											"value": "270"
										},
										{
											"begin": 6749,
											"end": 6774,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6722,
											"end": 6774,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6722,
											"end": 6774,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6812,
											"end": 6827,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6792,
											"end": 6808,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6792,
											"end": 6827,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 6792,
											"end": 6827,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "271"
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7708,
											"end": 7710,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7690,
											"end": 7711,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7747,
											"end": 7749,
											"name": "PUSH",
											"source": 8,
											"value": "25"
										},
										{
											"begin": 7727,
											"end": 7745,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 7727,
											"end": 7745,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7727,
											"end": 7745,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7720,
											"end": 7750,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7786,
											"end": 7820,
											"name": "PUSH",
											"source": 8,
											"value": "45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77"
										},
										{
											"begin": 7766,
											"end": 7784,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 7766,
											"end": 7784,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7766,
											"end": 7784,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7759,
											"end": 7821,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "207A65726F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7837,
											"end": 7855,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 7837,
											"end": 7855,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7837,
											"end": 7855,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7830,
											"end": 7865,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7882,
											"end": 7901,
											"name": "PUSH",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 7882,
											"end": 7901,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "154"
										},
										{
											"begin": 7506,
											"end": 7907,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "tag",
											"source": 4,
											"value": "271"
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6903,
											"end": 6963,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "274"
										},
										{
											"begin": 6912,
											"end": 6917,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6919,
											"end": 6926,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 6947,
											"end": 6962,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 6928,
											"end": 6944,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 6928,
											"end": 6962,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6903,
											"end": 6911,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "148"
										},
										{
											"begin": 6903,
											"end": 6963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6903,
											"end": 6963,
											"name": "tag",
											"source": 4,
											"value": "274"
										},
										{
											"begin": 6903,
											"end": 6963,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6991,
											"end": 6995,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 6991,
											"end": 6995,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6575,
											"end": 7002,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5221,
											"end": 5420,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 5221,
											"end": 5420,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5341,
											"end": 5345,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "276"
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "170"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "tag",
											"source": 3,
											"value": "276"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1239,
											"end": 1258,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "278"
										},
										{
											"begin": 1239,
											"end": 1256,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "173"
										},
										{
											"begin": 1239,
											"end": 1258,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1239,
											"end": 1258,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "278"
										},
										{
											"begin": 1239,
											"end": 1258,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5357,
											"end": 5392,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "280"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 5381,
											"end": 5383,
											"modifierDepth": 2,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5385,
											"end": 5391,
											"modifierDepth": 2,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5357,
											"end": 5366,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 5357,
											"end": 5392,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5357,
											"end": 5392,
											"modifierDepth": 2,
											"name": "tag",
											"source": 0,
											"value": "280"
										},
										{
											"begin": 5357,
											"end": 5392,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5409,
											"end": 5413,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "144"
										},
										{
											"begin": 1716,
											"end": 1717,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2809,
											"end": 2816,
											"name": "PUSH",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "tag",
											"source": 4,
											"value": "126"
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4076,
											"end": 4083,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4102,
											"end": 4113,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3987,
											"end": 4136,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2584,
											"end": 3058,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 2584,
											"end": 3058,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "285"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 1,
											"value": "285"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2668,
											"end": 2694,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2668,
											"end": 2694,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2660,
											"end": 2726,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "287"
										},
										{
											"begin": 2660,
											"end": 2726,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2660,
											"end": 2726,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2660,
											"end": 2726,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2660,
											"end": 2726,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2660,
											"end": 2726,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8114,
											"end": 8116,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2660,
											"end": 2726,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2660,
											"end": 2726,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2660,
											"end": 2726,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8096,
											"end": 8117,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8153,
											"end": 8155,
											"name": "PUSH",
											"source": 8,
											"value": "1B"
										},
										{
											"begin": 8133,
											"end": 8151,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 8133,
											"end": 8151,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8133,
											"end": 8151,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8126,
											"end": 8156,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8192,
											"end": 8221,
											"name": "PUSH",
											"source": 8,
											"value": "5265766F6C74436F696E3A20696E76616C696420616464726573730000000000"
										},
										{
											"begin": 8172,
											"end": 8190,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 8172,
											"end": 8190,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8172,
											"end": 8190,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8165,
											"end": 8222,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8239,
											"end": 8257,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 8239,
											"end": 8257,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2660,
											"end": 2726,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 7912,
											"end": 8263,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2660,
											"end": 2726,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "287"
										},
										{
											"begin": 2660,
											"end": 2726,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2823,
											"end": 2847,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2823,
											"end": 2847,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2823,
											"end": 2847,
											"modifierDepth": 1,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 2823,
											"end": 2852,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2802,
											"end": 2915,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "290"
										},
										{
											"begin": 2802,
											"end": 2915,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2802,
											"end": 2915,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2802,
											"end": 2915,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2802,
											"end": 2915,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2802,
											"end": 2915,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8470,
											"end": 8472,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2802,
											"end": 2915,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2802,
											"end": 2915,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2802,
											"end": 2915,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8452,
											"end": 8473,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8509,
											"end": 8511,
											"name": "PUSH",
											"source": 8,
											"value": "25"
										},
										{
											"begin": 8489,
											"end": 8507,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 8489,
											"end": 8507,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8489,
											"end": 8507,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8482,
											"end": 8512,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8548,
											"end": 8582,
											"name": "PUSH",
											"source": 8,
											"value": "5265766F6C74436F696E3A2066656520726563697069656E74206D7573742062"
										},
										{
											"begin": 8528,
											"end": 8546,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 8528,
											"end": 8546,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8528,
											"end": 8546,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8521,
											"end": 8583,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6520454F41"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8599,
											"end": 8617,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 8599,
											"end": 8617,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8599,
											"end": 8617,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8592,
											"end": 8627,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8644,
											"end": 8663,
											"name": "PUSH",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 8644,
											"end": 8663,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2802,
											"end": 2915,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 8268,
											"end": 8669,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2802,
											"end": 2915,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "290"
										},
										{
											"begin": 2802,
											"end": 2915,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2944,
											"end": 2956,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 2944,
											"end": 2956,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2944,
											"end": 2956,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2966,
											"end": 2993,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2966,
											"end": 2993,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2966,
											"end": 2993,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2966,
											"end": 2993,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2966,
											"end": 2993,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2966,
											"end": 2993,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2966,
											"end": 2993,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2966,
											"end": 2993,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2966,
											"end": 2993,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 2966,
											"end": 2993,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3008,
											"end": 3051,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3008,
											"end": 3051,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3008,
											"end": 3051,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2944,
											"end": 2956,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2944,
											"end": 2956,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2944,
											"end": 2956,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2944,
											"end": 2956,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8848,
											"end": 8899,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 8848,
											"end": 8899,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8848,
											"end": 8899,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8930,
											"end": 8932,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 8915,
											"end": 8933,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8915,
											"end": 8933,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8908,
											"end": 8968,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 8908,
											"end": 8968,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8908,
											"end": 8968,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 8908,
											"end": 8968,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3008,
											"end": 3051,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "AAEBCF1BFA00580E41D966056B48521FA9F202645C86D4DDF28113E617C1B1D3"
										},
										{
											"begin": 3008,
											"end": 3051,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8821,
											"end": 8839,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3008,
											"end": 3051,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 8674,
											"end": 8974,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3242,
											"end": 3388,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 3242,
											"end": 3388,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "296"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 1,
											"value": "296"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3310,
											"end": 3337,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3310,
											"end": 3337,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3340,
											"end": 3345,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3310,
											"end": 3337,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3310,
											"end": 3337,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3310,
											"end": 3337,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3310,
											"end": 3328,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 3310,
											"end": 3337,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3310,
											"end": 3337,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3310,
											"end": 3337,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3310,
											"end": 3337,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3310,
											"end": 3337,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3310,
											"end": 3337,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3310,
											"end": 3337,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3310,
											"end": 3337,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3310,
											"end": 3337,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3310,
											"end": 3345,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3310,
											"end": 3345,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3310,
											"end": 3345,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3310,
											"end": 3345,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3310,
											"end": 3345,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3360,
											"end": 3381,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3360,
											"end": 3381,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2430,
											"end": 2481,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2430,
											"end": 2481,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2430,
											"end": 2481,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3360,
											"end": 3381,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4F6A6B6EFE34EC6478021AA9FB7F6980E78EA3A10C74074A8CE49D5D3EBF1F7E"
										},
										{
											"begin": 3360,
											"end": 3381,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2403,
											"end": 2421,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3360,
											"end": 3381,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 2284,
											"end": 2487,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "tag",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "300"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 1,
											"value": "300"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2162,
											"end": 2184,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2162,
											"end": 2184,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "302"
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2154,
											"end": 2227,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2154,
											"end": 2227,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2154,
											"end": 2227,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9181,
											"end": 9183,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2154,
											"end": 2227,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9163,
											"end": 9184,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9220,
											"end": 9222,
											"name": "PUSH",
											"source": 8,
											"value": "26"
										},
										{
											"begin": 9200,
											"end": 9218,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 9200,
											"end": 9218,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9200,
											"end": 9218,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9193,
											"end": 9223,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9259,
											"end": 9293,
											"name": "PUSH",
											"source": 8,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 9239,
											"end": 9257,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 9239,
											"end": 9257,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9239,
											"end": 9257,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9232,
											"end": 9294,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9310,
											"end": 9328,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 9310,
											"end": 9328,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9310,
											"end": 9328,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9303,
											"end": 9339,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9356,
											"end": 9375,
											"name": "PUSH",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 9356,
											"end": 9375,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 8979,
											"end": 9381,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "302"
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2265,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 2256,
											"end": 2264,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2255,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "158"
										},
										{
											"begin": 2237,
											"end": 2265,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10457,
											"end": 10797,
											"name": "tag",
											"source": 4,
											"value": "148"
										},
										{
											"begin": 10457,
											"end": 10797,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10558,
											"end": 10577,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 10558,
											"end": 10577,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "308"
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9588,
											"end": 9590,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9570,
											"end": 9591,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9627,
											"end": 9629,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 9607,
											"end": 9625,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 9607,
											"end": 9625,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9607,
											"end": 9625,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9600,
											"end": 9630,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9666,
											"end": 9700,
											"name": "PUSH",
											"source": 8,
											"value": "45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
										},
										{
											"begin": 9646,
											"end": 9664,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 9646,
											"end": 9664,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9646,
											"end": 9664,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9639,
											"end": 9701,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9717,
											"end": 9735,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 9717,
											"end": 9735,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9717,
											"end": 9735,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9710,
											"end": 9744,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9761,
											"end": 9780,
											"name": "PUSH",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 9761,
											"end": 9780,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "154"
										},
										{
											"begin": 9386,
											"end": 9786,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "tag",
											"source": 4,
											"value": "308"
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10636,
											"end": 10657,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10636,
											"end": 10657,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "311"
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9993,
											"end": 9995,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9975,
											"end": 9996,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10032,
											"end": 10034,
											"name": "PUSH",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 10012,
											"end": 10030,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 10012,
											"end": 10030,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10012,
											"end": 10030,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10005,
											"end": 10035,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10071,
											"end": 10105,
											"name": "PUSH",
											"source": 8,
											"value": "45524332303A20617070726F766520746F20746865207A65726F206164647265"
										},
										{
											"begin": 10051,
											"end": 10069,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 10051,
											"end": 10069,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10051,
											"end": 10069,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10044,
											"end": 10106,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10122,
											"end": 10140,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 10122,
											"end": 10140,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10122,
											"end": 10140,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10115,
											"end": 10147,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10164,
											"end": 10183,
											"name": "PUSH",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 10164,
											"end": 10183,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "154"
										},
										{
											"begin": 9791,
											"end": 10189,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "tag",
											"source": 4,
											"value": "311"
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10707,
											"end": 10718,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 10707,
											"end": 10743,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 10707,
											"end": 10743,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10707,
											"end": 10743,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1449,
											"end": 1474,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1449,
											"end": 1474,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1449,
											"end": 1474,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "PUSH",
											"source": 4,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1422,
											"end": 1440,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "LOG3",
											"source": 4
										},
										{
											"begin": 10457,
											"end": 10797,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10457,
											"end": 10797,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10457,
											"end": 10797,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10457,
											"end": 10797,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "tag",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "195"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10396,
											"end": 10398,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10378,
											"end": 10399,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10378,
											"end": 10399,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10378,
											"end": 10399,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10415,
											"end": 10433,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 10415,
											"end": 10433,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10415,
											"end": 10433,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10408,
											"end": 10438,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10474,
											"end": 10508,
											"name": "PUSH",
											"source": 8,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 10454,
											"end": 10472,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 10454,
											"end": 10472,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10454,
											"end": 10472,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10447,
											"end": 10509,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10526,
											"end": 10544,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 10526,
											"end": 10544,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 10194,
											"end": 10550,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2426,
											"end": 2613,
											"name": "tag",
											"source": 1,
											"value": "158"
										},
										{
											"begin": 2426,
											"end": 2613,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "AND",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "PUSH",
											"source": 1,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 2489,
											"end": 2613,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2426,
											"end": 2613,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2426,
											"end": 2613,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "tag",
											"source": 3,
											"value": "170"
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "PUSH",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2468,
											"end": 2487,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "323"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10757,
											"end": 10759,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10739,
											"end": 10760,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10796,
											"end": 10798,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 10776,
											"end": 10794,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 10776,
											"end": 10794,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10776,
											"end": 10794,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10769,
											"end": 10799,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10835,
											"end": 10868,
											"name": "PUSH",
											"source": 8,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 10815,
											"end": 10833,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 10815,
											"end": 10833,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10815,
											"end": 10833,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10808,
											"end": 10869,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10886,
											"end": 10904,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 10886,
											"end": 10904,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "154"
										},
										{
											"begin": 10555,
											"end": 10910,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 3,
											"value": "323"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2598,
											"end": 2605,
											"name": "PUSH",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 2336,
											"end": 2623,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1767,
											"end": 1873,
											"name": "tag",
											"source": 2,
											"value": "173"
										},
										{
											"begin": 1767,
											"end": 1873,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1836,
											"end": 1845,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "195"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11117,
											"end": 11119,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11099,
											"end": 11120,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11156,
											"end": 11158,
											"name": "PUSH",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 11136,
											"end": 11154,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 11136,
											"end": 11154,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11136,
											"end": 11154,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11129,
											"end": 11159,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "14185D5CD8589B194E881C185D5CD959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "82"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11175,
											"end": 11193,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 11175,
											"end": 11193,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11175,
											"end": 11193,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11168,
											"end": 11214,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11231,
											"end": 11249,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 11231,
											"end": 11249,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "154"
										},
										{
											"begin": 10915,
											"end": 11255,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11078,
											"end": 11489,
											"name": "tag",
											"source": 4,
											"value": "180"
										},
										{
											"begin": 11078,
											"end": 11489,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11178,
											"end": 11202,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11205,
											"end": 11230,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "332"
										},
										{
											"begin": 11215,
											"end": 11220,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 11222,
											"end": 11229,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 11205,
											"end": 11214,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "126"
										},
										{
											"begin": 11205,
											"end": 11230,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11205,
											"end": 11230,
											"name": "tag",
											"source": 4,
											"value": "332"
										},
										{
											"begin": 11205,
											"end": 11230,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11178,
											"end": 11230,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11178,
											"end": 11230,
											"name": "POP",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 11244,
											"end": 11260,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11244,
											"end": 11281,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 11240,
											"end": 11483,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "250"
										},
										{
											"begin": 11240,
											"end": 11483,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 11325,
											"end": 11331,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11305,
											"end": 11321,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11305,
											"end": 11331,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 11305,
											"end": 11331,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "334"
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11462,
											"end": 11464,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11444,
											"end": 11465,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11501,
											"end": 11503,
											"name": "PUSH",
											"source": 8,
											"value": "1D"
										},
										{
											"begin": 11481,
											"end": 11499,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 11481,
											"end": 11499,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11481,
											"end": 11499,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11474,
											"end": 11504,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11540,
											"end": 11571,
											"name": "PUSH",
											"source": 8,
											"value": "45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000"
										},
										{
											"begin": 11520,
											"end": 11538,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 11520,
											"end": 11538,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11520,
											"end": 11538,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11513,
											"end": 11572,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11589,
											"end": 11607,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 11589,
											"end": 11607,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "154"
										},
										{
											"begin": 11260,
											"end": 11613,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "tag",
											"source": 4,
											"value": "334"
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11407,
											"end": 11458,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "250"
										},
										{
											"begin": 11416,
											"end": 11421,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 11423,
											"end": 11430,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 11451,
											"end": 11457,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 11432,
											"end": 11448,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 11432,
											"end": 11457,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 11407,
											"end": 11415,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "148"
										},
										{
											"begin": 11407,
											"end": 11458,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3809,
											"end": 4652,
											"name": "tag",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 3809,
											"end": 4652,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "339"
										},
										{
											"begin": 1239,
											"end": 1256,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "173"
										},
										{
											"begin": 1239,
											"end": 1258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "tag",
											"source": 2,
											"value": "339"
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3959,
											"end": 3979,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3959,
											"end": 3979,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3951,
											"end": 4014,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "341"
										},
										{
											"begin": 3951,
											"end": 4014,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3951,
											"end": 4014,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3951,
											"end": 4014,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3951,
											"end": 4014,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3951,
											"end": 4014,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11820,
											"end": 11822,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3951,
											"end": 4014,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3951,
											"end": 4014,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3951,
											"end": 4014,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11802,
											"end": 11823,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11859,
											"end": 11861,
											"name": "PUSH",
											"source": 8,
											"value": "1E"
										},
										{
											"begin": 11839,
											"end": 11857,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 11839,
											"end": 11857,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11839,
											"end": 11857,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11832,
											"end": 11862,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11898,
											"end": 11930,
											"name": "PUSH",
											"source": 8,
											"value": "5265766F6C74436F696E3A207472616E736665722066726F6D207A65726F0000"
										},
										{
											"begin": 11878,
											"end": 11896,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 11878,
											"end": 11896,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11878,
											"end": 11896,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11871,
											"end": 11931,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11948,
											"end": 11966,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 11948,
											"end": 11966,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3951,
											"end": 4014,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 11618,
											"end": 11972,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3951,
											"end": 4014,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "341"
										},
										{
											"begin": 3951,
											"end": 4014,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4032,
											"end": 4055,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4032,
											"end": 4055,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4024,
											"end": 4088,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "344"
										},
										{
											"begin": 4024,
											"end": 4088,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4024,
											"end": 4088,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4024,
											"end": 4088,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4024,
											"end": 4088,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4024,
											"end": 4088,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5441,
											"end": 5443,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4024,
											"end": 4088,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4024,
											"end": 4088,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4024,
											"end": 4088,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5423,
											"end": 5444,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5480,
											"end": 5482,
											"name": "PUSH",
											"source": 8,
											"value": "1C"
										},
										{
											"begin": 5460,
											"end": 5478,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 5460,
											"end": 5478,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5460,
											"end": 5478,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5453,
											"end": 5483,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5519,
											"end": 5549,
											"name": "PUSH",
											"source": 8,
											"value": "5265766F6C74436F696E3A207472616E7366657220746F207A65726F00000000"
										},
										{
											"begin": 5499,
											"end": 5517,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 5499,
											"end": 5517,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5499,
											"end": 5517,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5492,
											"end": 5550,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5567,
											"end": 5585,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 5567,
											"end": 5585,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4024,
											"end": 4088,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 5239,
											"end": 5591,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4024,
											"end": 4088,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "344"
										},
										{
											"begin": 4024,
											"end": 4088,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4136,
											"end": 4137,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4115,
											"end": 4133,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 4115,
											"end": 4133,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4115,
											"end": 4137,
											"modifierDepth": 1,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 4115,
											"end": 4179,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4115,
											"end": 4179,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4115,
											"end": 4179,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "346"
										},
										{
											"begin": 4115,
											"end": 4179,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4153,
											"end": 4165,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 4153,
											"end": 4165,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4153,
											"end": 4165,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4153,
											"end": 4179,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4153,
											"end": 4179,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4115,
											"end": 4179,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "346"
										},
										{
											"begin": 4115,
											"end": 4179,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4115,
											"end": 4222,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4115,
											"end": 4222,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4115,
											"end": 4222,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "347"
										},
										{
											"begin": 4115,
											"end": 4222,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4196,
											"end": 4222,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4196,
											"end": 4222,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4196,
											"end": 4222,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4196,
											"end": 4222,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4196,
											"end": 4222,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4196,
											"end": 4222,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4196,
											"end": 4214,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 4196,
											"end": 4222,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4196,
											"end": 4222,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4196,
											"end": 4222,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4196,
											"end": 4222,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4196,
											"end": 4222,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4196,
											"end": 4222,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4196,
											"end": 4222,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 4196,
											"end": 4222,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4195,
											"end": 4222,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4115,
											"end": 4222,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "347"
										},
										{
											"begin": 4115,
											"end": 4222,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4115,
											"end": 4268,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4115,
											"end": 4268,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4115,
											"end": 4268,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "348"
										},
										{
											"begin": 4115,
											"end": 4268,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4239,
											"end": 4268,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4239,
											"end": 4268,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4239,
											"end": 4268,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4239,
											"end": 4268,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4239,
											"end": 4268,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4239,
											"end": 4268,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4239,
											"end": 4257,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 4239,
											"end": 4268,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4239,
											"end": 4268,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4239,
											"end": 4268,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4239,
											"end": 4268,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4239,
											"end": 4268,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4239,
											"end": 4268,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4239,
											"end": 4268,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 4239,
											"end": 4268,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4238,
											"end": 4268,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4115,
											"end": 4268,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "348"
										},
										{
											"begin": 4115,
											"end": 4268,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4098,
											"end": 4646,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4098,
											"end": 4646,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "349"
										},
										{
											"begin": 4098,
											"end": 4646,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4293,
											"end": 4304,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4339,
											"end": 4342,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 4317,
											"end": 4335,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 4317,
											"end": 4335,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4308,
											"end": 4314,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4308,
											"end": 4335,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "350"
										},
										{
											"begin": 4308,
											"end": 4335,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4308,
											"end": 4335,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4308,
											"end": 4335,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "351"
										},
										{
											"begin": 4308,
											"end": 4335,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4308,
											"end": 4335,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "350"
										},
										{
											"begin": 4308,
											"end": 4335,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4307,
											"end": 4342,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "352"
										},
										{
											"begin": 4307,
											"end": 4342,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4307,
											"end": 4342,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4307,
											"end": 4342,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "353"
										},
										{
											"begin": 4307,
											"end": 4342,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4307,
											"end": 4342,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "352"
										},
										{
											"begin": 4307,
											"end": 4342,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4293,
											"end": 4342,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4356,
											"end": 4373,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4376,
											"end": 4388,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "354"
										},
										{
											"begin": 4293,
											"end": 4342,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4376,
											"end": 4382,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4376,
											"end": 4388,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "355"
										},
										{
											"begin": 4376,
											"end": 4388,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4376,
											"end": 4388,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "354"
										},
										{
											"begin": 4376,
											"end": 4388,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4457,
											"end": 4469,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 4457,
											"end": 4469,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4356,
											"end": 4388,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4356,
											"end": 4388,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4433,
											"end": 4475,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "356"
										},
										{
											"begin": 4433,
											"end": 4475,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4449,
											"end": 4455,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 4449,
											"end": 4455,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4457,
											"end": 4469,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4471,
											"end": 4474,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4433,
											"end": 4448,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "357"
										},
										{
											"begin": 4433,
											"end": 4475,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4433,
											"end": 4475,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "356"
										},
										{
											"begin": 4433,
											"end": 4475,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4517,
											"end": 4562,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "358"
										},
										{
											"begin": 4533,
											"end": 4539,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4541,
											"end": 4550,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4552,
											"end": 4561,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4517,
											"end": 4532,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "357"
										},
										{
											"begin": 4517,
											"end": 4562,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4517,
											"end": 4562,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "358"
										},
										{
											"begin": 4517,
											"end": 4562,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4279,
											"end": 4573,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4279,
											"end": 4573,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3809,
											"end": 4652,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3809,
											"end": 4652,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3809,
											"end": 4652,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3809,
											"end": 4652,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4098,
											"end": 4646,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "349"
										},
										{
											"begin": 4098,
											"end": 4646,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4593,
											"end": 4635,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "360"
										},
										{
											"begin": 4609,
											"end": 4615,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4617,
											"end": 4626,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4628,
											"end": 4634,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4593,
											"end": 4608,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "357"
										},
										{
											"begin": 4593,
											"end": 4635,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4593,
											"end": 4635,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "360"
										},
										{
											"begin": 4593,
											"end": 4635,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3809,
											"end": 4652,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3809,
											"end": 4652,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3809,
											"end": 4652,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3809,
											"end": 4652,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2433,
											"end": 2550,
											"name": "tag",
											"source": 2,
											"value": "196"
										},
										{
											"begin": 2433,
											"end": 2550,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1486,
											"end": 1502,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "363"
										},
										{
											"begin": 1486,
											"end": 1500,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "364"
										},
										{
											"begin": 1486,
											"end": 1502,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1486,
											"end": 1502,
											"name": "tag",
											"source": 2,
											"value": "363"
										},
										{
											"begin": 1486,
											"end": 1502,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2491,
											"end": 2498,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 2491,
											"end": 2506,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2491,
											"end": 2506,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2491,
											"end": 2506,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2491,
											"end": 2506,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 2530,
											"end": 2542,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "366"
										},
										{
											"begin": 2530,
											"end": 2542,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2521,
											"end": 2543,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2448,
											"end": 2480,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2448,
											"end": 2480,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2448,
											"end": 2480,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2430,
											"end": 2481,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2430,
											"end": 2481,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2418,
											"end": 2420,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2403,
											"end": 2421,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 2
										},
										{
											"begin": 2433,
											"end": 2550,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8520,
											"end": 9055,
											"name": "tag",
											"source": 4,
											"value": "206"
										},
										{
											"begin": 8520,
											"end": 9055,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8603,
											"end": 8624,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8603,
											"end": 8624,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8595,
											"end": 8660,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "369"
										},
										{
											"begin": 8595,
											"end": 8660,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 8595,
											"end": 8660,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8595,
											"end": 8660,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8595,
											"end": 8660,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8595,
											"end": 8660,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 12707,
											"end": 12709,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 8595,
											"end": 8660,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 8595,
											"end": 8660,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8595,
											"end": 8660,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 12689,
											"end": 12710,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12746,
											"end": 12748,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 12726,
											"end": 12744,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 12726,
											"end": 12744,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12726,
											"end": 12744,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12719,
											"end": 12749,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12785,
											"end": 12818,
											"name": "PUSH",
											"source": 8,
											"value": "45524332303A206D696E7420746F20746865207A65726F206164647265737300"
										},
										{
											"begin": 12765,
											"end": 12783,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 12765,
											"end": 12783,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12765,
											"end": 12783,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12758,
											"end": 12819,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12836,
											"end": 12854,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 12836,
											"end": 12854,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8595,
											"end": 8660,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "154"
										},
										{
											"begin": 12505,
											"end": 12860,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8595,
											"end": 8660,
											"name": "tag",
											"source": 4,
											"value": "369"
										},
										{
											"begin": 8595,
											"end": 8660,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8671,
											"end": 8720,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "372"
										},
										{
											"begin": 8700,
											"end": 8701,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8704,
											"end": 8711,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8713,
											"end": 8719,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8671,
											"end": 8691,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "373"
										},
										{
											"begin": 8671,
											"end": 8720,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8671,
											"end": 8720,
											"name": "tag",
											"source": 4,
											"value": "372"
										},
										{
											"begin": 8671,
											"end": 8720,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8747,
											"end": 8753,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8731,
											"end": 8743,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 8731,
											"end": 8743,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8731,
											"end": 8753,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8731,
											"end": 8753,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8731,
											"end": 8753,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 8731,
											"end": 8753,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "374"
										},
										{
											"begin": 8731,
											"end": 8753,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8731,
											"end": 8753,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8731,
											"end": 8753,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "191"
										},
										{
											"begin": 8731,
											"end": 8753,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8731,
											"end": 8753,
											"name": "tag",
											"source": 4,
											"value": "374"
										},
										{
											"begin": 8731,
											"end": 8753,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8731,
											"end": 8753,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8731,
											"end": 8753,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8731,
											"end": 8753,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8899,
											"end": 8917,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8899,
											"end": 8917,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8899,
											"end": 8908,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8899,
											"end": 8917,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8899,
											"end": 8917,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8899,
											"end": 8917,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8899,
											"end": 8917,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 8899,
											"end": 8917,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8899,
											"end": 8917,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8899,
											"end": 8917,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8899,
											"end": 8917,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8899,
											"end": 8917,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8899,
											"end": 8917,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8899,
											"end": 8917,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 8899,
											"end": 8927,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8899,
											"end": 8927,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 8899,
											"end": 8927,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 8899,
											"end": 8927,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8899,
											"end": 8927,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8899,
											"end": 8927,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 8952,
											"end": 8989,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1449,
											"end": 1474,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1449,
											"end": 1474,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1449,
											"end": 1474,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8952,
											"end": 8989,
											"name": "PUSH",
											"source": 4,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 8952,
											"end": 8989,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1422,
											"end": 1440,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8952,
											"end": 8989,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8952,
											"end": 8989,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 8952,
											"end": 8989,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8952,
											"end": 8989,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8952,
											"end": 8989,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 8952,
											"end": 8989,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8952,
											"end": 8989,
											"name": "LOG3",
											"source": 4
										},
										{
											"begin": 2046,
											"end": 2218,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2046,
											"end": 2218,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2046,
											"end": 2218,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2186,
											"end": 2301,
											"name": "tag",
											"source": 2,
											"value": "260"
										},
										{
											"begin": 2186,
											"end": 2301,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "379"
										},
										{
											"begin": 1239,
											"end": 1256,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "173"
										},
										{
											"begin": 1239,
											"end": 1258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "tag",
											"source": 2,
											"value": "379"
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2245,
											"end": 2252,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 2245,
											"end": 2259,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2245,
											"end": 2259,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 2245,
											"end": 2259,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2245,
											"end": 2259,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258"
										},
										{
											"begin": 2281,
											"end": 2293,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "366"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 719,
											"end": 729,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7456,
											"end": 8244,
											"name": "tag",
											"source": 4,
											"value": "357"
										},
										{
											"begin": 7456,
											"end": 8244,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7552,
											"end": 7570,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7552,
											"end": 7570,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "384"
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 13067,
											"end": 13069,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 13049,
											"end": 13070,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 13106,
											"end": 13108,
											"name": "PUSH",
											"source": 8,
											"value": "25"
										},
										{
											"begin": 13086,
											"end": 13104,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 13086,
											"end": 13104,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13086,
											"end": 13104,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13079,
											"end": 13109,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 13145,
											"end": 13179,
											"name": "PUSH",
											"source": 8,
											"value": "45524332303A207472616E736665722066726F6D20746865207A65726F206164"
										},
										{
											"begin": 13125,
											"end": 13143,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 13125,
											"end": 13143,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13125,
											"end": 13143,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13118,
											"end": 13180,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13196,
											"end": 13214,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 13196,
											"end": 13214,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13196,
											"end": 13214,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13189,
											"end": 13224,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 13241,
											"end": 13260,
											"name": "PUSH",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 13241,
											"end": 13260,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "154"
										},
										{
											"begin": 12865,
											"end": 13266,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "tag",
											"source": 4,
											"value": "384"
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7630,
											"end": 7646,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7630,
											"end": 7646,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "387"
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 13473,
											"end": 13475,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 13455,
											"end": 13476,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 13512,
											"end": 13514,
											"name": "PUSH",
											"source": 8,
											"value": "23"
										},
										{
											"begin": 13492,
											"end": 13510,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 13492,
											"end": 13510,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13492,
											"end": 13510,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13485,
											"end": 13515,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 13551,
											"end": 13585,
											"name": "PUSH",
											"source": 8,
											"value": "45524332303A207472616E7366657220746F20746865207A65726F2061646472"
										},
										{
											"begin": 13531,
											"end": 13549,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 13531,
											"end": 13549,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13531,
											"end": 13549,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13524,
											"end": 13586,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13602,
											"end": 13620,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 13602,
											"end": 13620,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13602,
											"end": 13620,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13595,
											"end": 13628,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 13645,
											"end": 13664,
											"name": "PUSH",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 13645,
											"end": 13664,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "154"
										},
										{
											"begin": 13271,
											"end": 13670,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "tag",
											"source": 4,
											"value": "387"
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7697,
											"end": 7735,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "390"
										},
										{
											"begin": 7718,
											"end": 7722,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7724,
											"end": 7726,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7728,
											"end": 7734,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7697,
											"end": 7717,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "373"
										},
										{
											"begin": 7697,
											"end": 7735,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7697,
											"end": 7735,
											"name": "tag",
											"source": 4,
											"value": "390"
										},
										{
											"begin": 7697,
											"end": 7735,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7746,
											"end": 7765,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 7801,
											"end": 7822,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7801,
											"end": 7822,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7801,
											"end": 7822,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 7801,
											"end": 7822,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "391"
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 13877,
											"end": 13879,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 13859,
											"end": 13880,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 13916,
											"end": 13918,
											"name": "PUSH",
											"source": 8,
											"value": "26"
										},
										{
											"begin": 13896,
											"end": 13914,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 13896,
											"end": 13914,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13896,
											"end": 13914,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13889,
											"end": 13919,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 13955,
											"end": 13989,
											"name": "PUSH",
											"source": 8,
											"value": "45524332303A207472616E7366657220616D6F756E7420657863656564732062"
										},
										{
											"begin": 13935,
											"end": 13953,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 13935,
											"end": 13953,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13935,
											"end": 13953,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13928,
											"end": 13990,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "616C616E6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14006,
											"end": 14024,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 14006,
											"end": 14024,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 14006,
											"end": 14024,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13999,
											"end": 14035,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 14052,
											"end": 14071,
											"name": "PUSH",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 14052,
											"end": 14071,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "154"
										},
										{
											"begin": 13675,
											"end": 14077,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "tag",
											"source": 4,
											"value": "391"
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7899,
											"end": 7908,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 7917,
											"end": 7937,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 7917,
											"end": 7937,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 7917,
											"end": 7937,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7899,
											"end": 7937,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7899,
											"end": 7937,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 8114,
											"end": 8137,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8114,
											"end": 8137,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 8114,
											"end": 8137,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 8114,
											"end": 8137,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8114,
											"end": 8137,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8114,
											"end": 8137,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1449,
											"end": 1474,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1449,
											"end": 1474,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1449,
											"end": 1474,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "PUSH",
											"source": 4,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1422,
											"end": 1440,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "LOG3",
											"source": 4
										},
										{
											"begin": 8200,
											"end": 8237,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "250"
										},
										{
											"begin": 3809,
											"end": 4652,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1945,
											"end": 2051,
											"name": "tag",
											"source": 2,
											"value": "364"
										},
										{
											"begin": 1945,
											"end": 2051,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "195"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 14284,
											"end": 14286,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14266,
											"end": 14287,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 14323,
											"end": 14325,
											"name": "PUSH",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 14303,
											"end": 14321,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 14303,
											"end": 14321,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 14303,
											"end": 14321,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14296,
											"end": 14326,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "14185D5CD8589B194E881B9BDD081C185D5CD959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "62"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14342,
											"end": 14360,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 14342,
											"end": 14360,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 14342,
											"end": 14360,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14335,
											"end": 14385,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 14402,
											"end": 14420,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 14402,
											"end": 14420,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "154"
										},
										{
											"begin": 14082,
											"end": 14426,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4916,
											"end": 5168,
											"name": "tag",
											"source": 0,
											"value": "373"
										},
										{
											"begin": 4916,
											"end": 5168,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5108,
											"end": 5117,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5100,
											"end": 5161,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "360"
										},
										{
											"begin": 5100,
											"end": 5161,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5100,
											"end": 5161,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5100,
											"end": 5161,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5100,
											"end": 5161,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5100,
											"end": 5161,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14633,
											"end": 14635,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5100,
											"end": 5161,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5100,
											"end": 5161,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5100,
											"end": 5161,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14615,
											"end": 14636,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 14672,
											"end": 14674,
											"name": "PUSH",
											"source": 8,
											"value": "27"
										},
										{
											"begin": 14652,
											"end": 14670,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 14652,
											"end": 14670,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 14652,
											"end": 14670,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14645,
											"end": 14675,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 14711,
											"end": 14745,
											"name": "PUSH",
											"source": 8,
											"value": "5265766F6C74436F696E3A20746F6B656E207472616E73666572207768696C65"
										},
										{
											"begin": 14691,
											"end": 14709,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 14691,
											"end": 14709,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 14691,
											"end": 14709,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14684,
											"end": 14746,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "81C185D5CD959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "CA"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14762,
											"end": 14780,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 14762,
											"end": 14780,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 14762,
											"end": 14780,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14755,
											"end": 14792,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 14809,
											"end": 14828,
											"name": "PUSH",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 14809,
											"end": 14828,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5100,
											"end": 5161,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 14431,
											"end": 14834,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14,
											"end": 432,
											"name": "tag",
											"source": 8,
											"value": "41"
										},
										{
											"begin": 14,
											"end": 432,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 163,
											"end": 165,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 152,
											"end": 161,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 145,
											"end": 166,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 126,
											"end": 130,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 195,
											"end": 201,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 189,
											"end": 202,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 238,
											"end": 244,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 233,
											"end": 235,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 222,
											"end": 231,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 218,
											"end": 236,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 211,
											"end": 245,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 297,
											"end": 303,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 294,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 284,
											"end": 290,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 280,
											"end": 295,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 275,
											"end": 277,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 264,
											"end": 273,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 260,
											"end": 278,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 254,
											"end": 304,
											"name": "MCOPY",
											"source": 8
										},
										{
											"begin": 353,
											"end": 354,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 348,
											"end": 350,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 339,
											"end": 345,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 328,
											"end": 337,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 324,
											"end": 346,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 320,
											"end": 351,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 313,
											"end": 355,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 423,
											"end": 425,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 416,
											"end": 418,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 412,
											"end": 419,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 407,
											"end": 409,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 399,
											"end": 405,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 395,
											"end": 410,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 391,
											"end": 420,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 380,
											"end": 389,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 376,
											"end": 421,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 372,
											"end": 426,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 364,
											"end": 426,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 364,
											"end": 426,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 364,
											"end": 426,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14,
											"end": 432,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 14,
											"end": 432,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 14,
											"end": 432,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14,
											"end": 432,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14,
											"end": 432,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 437,
											"end": 610,
											"name": "tag",
											"source": 8,
											"value": "410"
										},
										{
											"begin": 437,
											"end": 610,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 505,
											"end": 525,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 505,
											"end": 525,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 554,
											"end": 585,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 554,
											"end": 585,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 544,
											"end": 586,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 544,
											"end": 586,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 534,
											"end": 604,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "416"
										},
										{
											"begin": 534,
											"end": 604,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 600,
											"end": 601,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 597,
											"end": 598,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 590,
											"end": 602,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 534,
											"end": 604,
											"name": "tag",
											"source": 8,
											"value": "416"
										},
										{
											"begin": 534,
											"end": 604,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 437,
											"end": 610,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 437,
											"end": 610,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 437,
											"end": 610,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 437,
											"end": 610,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 615,
											"end": 915,
											"name": "tag",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 615,
											"end": 915,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 683,
											"end": 689,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 691,
											"end": 697,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 744,
											"end": 746,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 732,
											"end": 741,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 723,
											"end": 730,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 719,
											"end": 742,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 715,
											"end": 747,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 712,
											"end": 764,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 712,
											"end": 764,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "418"
										},
										{
											"begin": 712,
											"end": 764,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 760,
											"end": 761,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 757,
											"end": 758,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 750,
											"end": 762,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 712,
											"end": 764,
											"name": "tag",
											"source": 8,
											"value": "418"
										},
										{
											"begin": 712,
											"end": 764,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 783,
											"end": 812,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "419"
										},
										{
											"begin": 802,
											"end": 811,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 783,
											"end": 812,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "410"
										},
										{
											"begin": 783,
											"end": 812,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 783,
											"end": 812,
											"name": "tag",
											"source": 8,
											"value": "419"
										},
										{
											"begin": 783,
											"end": 812,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 773,
											"end": 812,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 881,
											"end": 883,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 866,
											"end": 884,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 866,
											"end": 884,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 866,
											"end": 884,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 866,
											"end": 884,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 853,
											"end": 885,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 853,
											"end": 885,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 615,
											"end": 915,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1112,
											"end": 1298,
											"name": "tag",
											"source": 8,
											"value": "50"
										},
										{
											"begin": 1112,
											"end": 1298,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1171,
											"end": 1177,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1224,
											"end": 1226,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1212,
											"end": 1221,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1203,
											"end": 1210,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1199,
											"end": 1222,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1195,
											"end": 1227,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 1192,
											"end": 1244,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1192,
											"end": 1244,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "422"
										},
										{
											"begin": 1192,
											"end": 1244,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1240,
											"end": 1241,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1237,
											"end": 1238,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1230,
											"end": 1242,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1192,
											"end": 1244,
											"name": "tag",
											"source": 8,
											"value": "422"
										},
										{
											"begin": 1192,
											"end": 1244,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1263,
											"end": 1292,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "183"
										},
										{
											"begin": 1282,
											"end": 1291,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1263,
											"end": 1292,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "410"
										},
										{
											"begin": 1263,
											"end": 1292,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1485,
											"end": 1711,
											"name": "tag",
											"source": 8,
											"value": "58"
										},
										{
											"begin": 1485,
											"end": 1711,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1544,
											"end": 1550,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1597,
											"end": 1599,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1585,
											"end": 1594,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1576,
											"end": 1583,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1572,
											"end": 1595,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1568,
											"end": 1600,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 1565,
											"end": 1617,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1565,
											"end": 1617,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "426"
										},
										{
											"begin": 1565,
											"end": 1617,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1613,
											"end": 1614,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1610,
											"end": 1611,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1603,
											"end": 1615,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1565,
											"end": 1617,
											"name": "tag",
											"source": 8,
											"value": "426"
										},
										{
											"begin": 1565,
											"end": 1617,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1658,
											"end": 1681,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 1658,
											"end": 1681,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1485,
											"end": 1711,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1485,
											"end": 1711,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1716,
											"end": 2090,
											"name": "tag",
											"source": 8,
											"value": "62"
										},
										{
											"begin": 1716,
											"end": 2090,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1793,
											"end": 1799,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1801,
											"end": 1807,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1809,
											"end": 1815,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1862,
											"end": 1864,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 1850,
											"end": 1859,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1841,
											"end": 1848,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 1837,
											"end": 1860,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1833,
											"end": 1865,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 1830,
											"end": 1882,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1830,
											"end": 1882,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "428"
										},
										{
											"begin": 1830,
											"end": 1882,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1878,
											"end": 1879,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1875,
											"end": 1876,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1868,
											"end": 1880,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1830,
											"end": 1882,
											"name": "tag",
											"source": 8,
											"value": "428"
										},
										{
											"begin": 1830,
											"end": 1882,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1901,
											"end": 1930,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "429"
										},
										{
											"begin": 1920,
											"end": 1929,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1901,
											"end": 1930,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "410"
										},
										{
											"begin": 1901,
											"end": 1930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1901,
											"end": 1930,
											"name": "tag",
											"source": 8,
											"value": "429"
										},
										{
											"begin": 1901,
											"end": 1930,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1891,
											"end": 1930,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1891,
											"end": 1930,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1949,
											"end": 1987,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "430"
										},
										{
											"begin": 1983,
											"end": 1985,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1972,
											"end": 1981,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1968,
											"end": 1986,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1949,
											"end": 1987,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "410"
										},
										{
											"begin": 1949,
											"end": 1987,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1949,
											"end": 1987,
											"name": "tag",
											"source": 8,
											"value": "430"
										},
										{
											"begin": 1949,
											"end": 1987,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1716,
											"end": 2090,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1716,
											"end": 2090,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 1939,
											"end": 1987,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1939,
											"end": 1987,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2056,
											"end": 2058,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2041,
											"end": 2059,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2041,
											"end": 2059,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2041,
											"end": 2059,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2041,
											"end": 2059,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2028,
											"end": 2060,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 2028,
											"end": 2060,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1716,
											"end": 2090,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2492,
											"end": 2859,
											"name": "tag",
											"source": 8,
											"value": "411"
										},
										{
											"begin": 2492,
											"end": 2859,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2555,
											"end": 2563,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2565,
											"end": 2571,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2619,
											"end": 2622,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2612,
											"end": 2616,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 2604,
											"end": 2610,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2600,
											"end": 2617,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2596,
											"end": 2623,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 2586,
											"end": 2641,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "434"
										},
										{
											"begin": 2586,
											"end": 2641,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2637,
											"end": 2638,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2634,
											"end": 2635,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2627,
											"end": 2639,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2586,
											"end": 2641,
											"name": "tag",
											"source": 8,
											"value": "434"
										},
										{
											"begin": 2586,
											"end": 2641,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2660,
											"end": 2680,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2660,
											"end": 2680,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 2703,
											"end": 2721,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2692,
											"end": 2722,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2692,
											"end": 2722,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 2689,
											"end": 2739,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2689,
											"end": 2739,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "435"
										},
										{
											"begin": 2689,
											"end": 2739,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2735,
											"end": 2736,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2732,
											"end": 2733,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2725,
											"end": 2737,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2689,
											"end": 2739,
											"name": "tag",
											"source": 8,
											"value": "435"
										},
										{
											"begin": 2689,
											"end": 2739,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2772,
											"end": 2776,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2764,
											"end": 2770,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2760,
											"end": 2777,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2748,
											"end": 2777,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2748,
											"end": 2777,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2832,
											"end": 2835,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2825,
											"end": 2829,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2815,
											"end": 2821,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2812,
											"end": 2813,
											"name": "PUSH",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 2808,
											"end": 2822,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 2800,
											"end": 2806,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2796,
											"end": 2823,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2792,
											"end": 2830,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2789,
											"end": 2836,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 2786,
											"end": 2853,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2786,
											"end": 2853,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "436"
										},
										{
											"begin": 2786,
											"end": 2853,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2849,
											"end": 2850,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2846,
											"end": 2847,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2839,
											"end": 2851,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2786,
											"end": 2853,
											"name": "tag",
											"source": 8,
											"value": "436"
										},
										{
											"begin": 2786,
											"end": 2853,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2492,
											"end": 2859,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2492,
											"end": 2859,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2492,
											"end": 2859,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2492,
											"end": 2859,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2492,
											"end": 2859,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2492,
											"end": 2859,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2864,
											"end": 3632,
											"name": "tag",
											"source": 8,
											"value": "93"
										},
										{
											"begin": 2864,
											"end": 3632,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2986,
											"end": 2992,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2994,
											"end": 3000,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3002,
											"end": 3008,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3010,
											"end": 3016,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3063,
											"end": 3065,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3051,
											"end": 3060,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 3042,
											"end": 3049,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 3038,
											"end": 3061,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3034,
											"end": 3066,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 3031,
											"end": 3083,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3031,
											"end": 3083,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "438"
										},
										{
											"begin": 3031,
											"end": 3083,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3079,
											"end": 3080,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3076,
											"end": 3077,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3069,
											"end": 3081,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3031,
											"end": 3083,
											"name": "tag",
											"source": 8,
											"value": "438"
										},
										{
											"begin": 3031,
											"end": 3083,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3119,
											"end": 3128,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3106,
											"end": 3129,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 3152,
											"end": 3170,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3144,
											"end": 3150,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3141,
											"end": 3171,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 3138,
											"end": 3188,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3138,
											"end": 3188,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "439"
										},
										{
											"begin": 3138,
											"end": 3188,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3184,
											"end": 3185,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3181,
											"end": 3182,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3174,
											"end": 3186,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3138,
											"end": 3188,
											"name": "tag",
											"source": 8,
											"value": "439"
										},
										{
											"begin": 3138,
											"end": 3188,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3223,
											"end": 3293,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "440"
										},
										{
											"begin": 3285,
											"end": 3292,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 3276,
											"end": 3282,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3265,
											"end": 3274,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 3261,
											"end": 3283,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3223,
											"end": 3293,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "411"
										},
										{
											"begin": 3223,
											"end": 3293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3223,
											"end": 3293,
											"name": "tag",
											"source": 8,
											"value": "440"
										},
										{
											"begin": 3223,
											"end": 3293,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3312,
											"end": 3320,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3312,
											"end": 3320,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3197,
											"end": 3293,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3400,
											"end": 3402,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3385,
											"end": 3403,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 3385,
											"end": 3403,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3372,
											"end": 3404,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 3429,
											"end": 3447,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3416,
											"end": 3448,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3416,
											"end": 3448,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 3413,
											"end": 3465,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3413,
											"end": 3465,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "441"
										},
										{
											"begin": 3413,
											"end": 3465,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3461,
											"end": 3462,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3458,
											"end": 3459,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3451,
											"end": 3463,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3413,
											"end": 3465,
											"name": "tag",
											"source": 8,
											"value": "441"
										},
										{
											"begin": 3413,
											"end": 3465,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3500,
											"end": 3572,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "442"
										},
										{
											"begin": 3564,
											"end": 3571,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 3553,
											"end": 3561,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3542,
											"end": 3551,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 3538,
											"end": 3562,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3500,
											"end": 3572,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "411"
										},
										{
											"begin": 3500,
											"end": 3572,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3500,
											"end": 3572,
											"name": "tag",
											"source": 8,
											"value": "442"
										},
										{
											"begin": 3500,
											"end": 3572,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2864,
											"end": 3632,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 2864,
											"end": 3632,
											"name": "SWAP9",
											"source": 8
										},
										{
											"begin": 2864,
											"end": 3632,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 2864,
											"end": 3632,
											"name": "SWAP8",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3591,
											"end": 3599,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2864,
											"end": 3632,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3637,
											"end": 3897,
											"name": "tag",
											"source": 8,
											"value": "125"
										},
										{
											"begin": 3637,
											"end": 3897,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3705,
											"end": 3711,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3713,
											"end": 3719,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3766,
											"end": 3768,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3754,
											"end": 3763,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3745,
											"end": 3752,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 3741,
											"end": 3764,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3737,
											"end": 3769,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 3734,
											"end": 3786,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3734,
											"end": 3786,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "444"
										},
										{
											"begin": 3734,
											"end": 3786,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3782,
											"end": 3783,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3779,
											"end": 3780,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3772,
											"end": 3784,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3734,
											"end": 3786,
											"name": "tag",
											"source": 8,
											"value": "444"
										},
										{
											"begin": 3734,
											"end": 3786,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3805,
											"end": 3834,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "445"
										},
										{
											"begin": 3824,
											"end": 3833,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3805,
											"end": 3834,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "410"
										},
										{
											"begin": 3805,
											"end": 3834,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3805,
											"end": 3834,
											"name": "tag",
											"source": 8,
											"value": "445"
										},
										{
											"begin": 3805,
											"end": 3834,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3795,
											"end": 3834,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3795,
											"end": 3834,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3853,
											"end": 3891,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "446"
										},
										{
											"begin": 3887,
											"end": 3889,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3876,
											"end": 3885,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3872,
											"end": 3890,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3853,
											"end": 3891,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "410"
										},
										{
											"begin": 3853,
											"end": 3891,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3853,
											"end": 3891,
											"name": "tag",
											"source": 8,
											"value": "446"
										},
										{
											"begin": 3853,
											"end": 3891,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3843,
											"end": 3891,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3843,
											"end": 3891,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3637,
											"end": 3897,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3637,
											"end": 3897,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3637,
											"end": 3897,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3637,
											"end": 3897,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3637,
											"end": 3897,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3637,
											"end": 3897,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3902,
											"end": 4282,
											"name": "tag",
											"source": 8,
											"value": "139"
										},
										{
											"begin": 3902,
											"end": 4282,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3981,
											"end": 3982,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 3977,
											"end": 3989,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3977,
											"end": 3989,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3977,
											"end": 3989,
											"name": "SHR",
											"source": 8
										},
										{
											"begin": 3977,
											"end": 3989,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4024,
											"end": 4036,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4024,
											"end": 4036,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4024,
											"end": 4036,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4045,
											"end": 4106,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "448"
										},
										{
											"begin": 4045,
											"end": 4106,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4099,
											"end": 4103,
											"name": "PUSH",
											"source": 8,
											"value": "7F"
										},
										{
											"begin": 4091,
											"end": 4097,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4087,
											"end": 4104,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4077,
											"end": 4104,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4077,
											"end": 4104,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4045,
											"end": 4106,
											"name": "tag",
											"source": 8,
											"value": "448"
										},
										{
											"begin": 4045,
											"end": 4106,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4152,
											"end": 4154,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4144,
											"end": 4150,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4141,
											"end": 4155,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 4121,
											"end": 4139,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4118,
											"end": 4156,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4115,
											"end": 4276,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "449"
										},
										{
											"begin": 4115,
											"end": 4276,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4198,
											"end": 4208,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B71"
										},
										{
											"begin": 4193,
											"end": 4196,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 4189,
											"end": 4209,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 4186,
											"end": 4187,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4179,
											"end": 4210,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4233,
											"end": 4237,
											"name": "PUSH",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 4230,
											"end": 4231,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 4223,
											"end": 4238,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4261,
											"end": 4265,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 4258,
											"end": 4259,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4251,
											"end": 4266,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 4115,
											"end": 4276,
											"name": "tag",
											"source": 8,
											"value": "449"
										},
										{
											"begin": 4115,
											"end": 4276,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4115,
											"end": 4276,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3902,
											"end": 4282,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3902,
											"end": 4282,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3902,
											"end": 4282,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3902,
											"end": 4282,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5596,
											"end": 5723,
											"name": "tag",
											"source": 8,
											"value": "412"
										},
										{
											"begin": 5596,
											"end": 5723,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5657,
											"end": 5667,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B71"
										},
										{
											"begin": 5652,
											"end": 5655,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 5648,
											"end": 5668,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 5645,
											"end": 5646,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5638,
											"end": 5669,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5688,
											"end": 5692,
											"name": "PUSH",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 5685,
											"end": 5686,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 5678,
											"end": 5693,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5712,
											"end": 5716,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 5709,
											"end": 5710,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5702,
											"end": 5717,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 5728,
											"end": 5853,
											"name": "tag",
											"source": 8,
											"value": "191"
										},
										{
											"begin": 5728,
											"end": 5853,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5793,
											"end": 5802,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5793,
											"end": 5802,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5793,
											"end": 5802,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5814,
											"end": 5824,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5814,
											"end": 5824,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5814,
											"end": 5824,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 5811,
											"end": 5847,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5811,
											"end": 5847,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "144"
										},
										{
											"begin": 5811,
											"end": 5847,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5827,
											"end": 5845,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "144"
										},
										{
											"begin": 5827,
											"end": 5845,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "412"
										},
										{
											"begin": 5827,
											"end": 5845,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7015,
											"end": 7142,
											"name": "tag",
											"source": 8,
											"value": "228"
										},
										{
											"begin": 7015,
											"end": 7142,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7076,
											"end": 7086,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B71"
										},
										{
											"begin": 7071,
											"end": 7074,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 7067,
											"end": 7087,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 7064,
											"end": 7065,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7057,
											"end": 7088,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7107,
											"end": 7111,
											"name": "PUSH",
											"source": 8,
											"value": "32"
										},
										{
											"begin": 7104,
											"end": 7105,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 7097,
											"end": 7112,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7131,
											"end": 7135,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 7128,
											"end": 7129,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7121,
											"end": 7136,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 11977,
											"end": 12145,
											"name": "tag",
											"source": 8,
											"value": "351"
										},
										{
											"begin": 11977,
											"end": 12145,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12050,
											"end": 12059,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 12050,
											"end": 12059,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12050,
											"end": 12059,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 12081,
											"end": 12090,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12081,
											"end": 12090,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 12098,
											"end": 12113,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12098,
											"end": 12113,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12098,
											"end": 12113,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 12092,
											"end": 12114,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 12092,
											"end": 12114,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 12078,
											"end": 12115,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 12068,
											"end": 12139,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "144"
										},
										{
											"begin": 12068,
											"end": 12139,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 12119,
											"end": 12137,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "144"
										},
										{
											"begin": 12119,
											"end": 12137,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "412"
										},
										{
											"begin": 12119,
											"end": 12137,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12150,
											"end": 12367,
											"name": "tag",
											"source": 8,
											"value": "353"
										},
										{
											"begin": 12150,
											"end": 12367,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12190,
											"end": 12191,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12216,
											"end": 12217,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12206,
											"end": 12338,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "479"
										},
										{
											"begin": 12206,
											"end": 12338,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 12260,
											"end": 12270,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B71"
										},
										{
											"begin": 12255,
											"end": 12258,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 12251,
											"end": 12271,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 12248,
											"end": 12249,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12241,
											"end": 12272,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12295,
											"end": 12299,
											"name": "PUSH",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 12292,
											"end": 12293,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 12285,
											"end": 12300,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12323,
											"end": 12327,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 12320,
											"end": 12321,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12313,
											"end": 12328,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 12206,
											"end": 12338,
											"name": "tag",
											"source": 8,
											"value": "479"
										},
										{
											"begin": 12206,
											"end": 12338,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12352,
											"end": 12361,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 12352,
											"end": 12361,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12150,
											"end": 12367,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12372,
											"end": 12500,
											"name": "tag",
											"source": 8,
											"value": "355"
										},
										{
											"begin": 12372,
											"end": 12500,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12439,
											"end": 12448,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12439,
											"end": 12448,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12439,
											"end": 12448,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 12460,
											"end": 12471,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12460,
											"end": 12471,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12460,
											"end": 12471,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 12457,
											"end": 12494,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 12457,
											"end": 12494,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "144"
										},
										{
											"begin": 12457,
											"end": 12494,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 12474,
											"end": 12492,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "144"
										},
										{
											"begin": 12474,
											"end": 12492,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "412"
										},
										{
											"begin": 12474,
											"end": 12492,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										}
									]
								}
							},
							"sourceList": [
								"Revolt.sol",
								"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/access/Ownable.sol",
								"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/security/Pausable.sol",
								"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/security/ReentrancyGuard.sol",
								"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol",
								"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/IERC20.sol",
								"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/utils/Context.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"MAX_SUPPLY()": "32cb6b0c",
							"airdrop(address[],uint256[])": "67243482",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"deployer()": "d5f39488",
							"excludeFromFee(address)": "437823ec",
							"feeRecipient()": "46904840",
							"includeInFee(address)": "ea2f0b37",
							"increaseAllowance(address,uint256)": "39509351",
							"mint(address,uint256)": "40c10f19",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"ownerTransfer(address)": "1815c208",
							"pause()": "8456cb59",
							"paused()": "5c975abb",
							"renounceOwnership()": "715018a6",
							"setFeeRecipient(address)": "e74b981b",
							"setTransferFeePercent(uint256)": "1f36d925",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFeePercent()": "94544e64",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b",
							"unpause()": "3f4ba83a"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Airdrop\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"ExcludeFromFee\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousRecipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newRecipient\",\"type\":\"address\"}],\"name\":\"FeeRecipientUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"IncludeInFee\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnerUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"previousFee\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newFee\",\"type\":\"uint256\"}],\"name\":\"TransferFeePercentUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"MAX_SUPPLY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"recipients\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"name\":\"airdrop\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deployer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"excludeFromFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeRecipient\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"includeInFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"ownerTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newRecipient\",\"type\":\"address\"}],\"name\":\"setFeeRecipient\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newFee\",\"type\":\"uint256\"}],\"name\":\"setTransferFeePercent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"transferFeePercent\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"airdrop(address[],uint256[])\":{\"params\":{\"amounts\":\"\\u6bcf\\u4e2a\\u5730\\u5740\\u5bf9\\u5e94\\u7684\\u7a7a\\u6295\\u6570\\u91cf\\uff08\\u6700\\u5c0f\\u5355\\u4f4d\\uff09\",\"recipients\":\"\\u63a5\\u6536\\u5730\\u5740\\u5217\\u8868\"}},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"ownerTransfer(address)\":{\"params\":{\"newOwner\":\"\\u65b0\\u6240\\u6709\\u8005\\u5730\\u5740\"}},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"airdrop(address[],uint256[])\":{\"notice\":\"\\u6279\\u91cf\\u7a7a\\u6295\\u4ee3\\u5e01\\u7ed9\\u6307\\u5b9a\\u5730\\u5740\"},\"ownerTransfer(address)\":{\"notice\":\"\\u5b89\\u5168\\u8f6c\\u79fb\\u5408\\u7ea6\\u6240\\u6709\\u6743\"},\"pause()\":{\"notice\":\"\\u6682\\u505c\\u6240\\u6709\\u8f6c\\u8d26\"},\"transfer(address,uint256)\":{\"notice\":\"\\u9632\\u91cd\\u5165\\u5b89\\u5168\\u7684\\u8f6c\\u8d26\\u63a5\\u53e3\"},\"unpause()\":{\"notice\":\"\\u6062\\u590d\\u8f6c\\u8d26\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Revolt.sol\":\"RevoltCoin\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Revolt.sol\":{\"keccak256\":\"0xa5192eb08f765665d7c7b2fe1378758388e192a7c30095e75682af4a950e7fc8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9d1988ac7772d3a78d8a9f1d2c9fefe48cced46b015b804023c30b62c6cf302e\",\"dweb:/ipfs/Qmbes2MbFv38pWadxFwNoZp6ieCddPun7tNmhhuARMTnjq\"]},\"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/security/Pausable.sol\":{\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004\",\"dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B\"]},\"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cac938788bc4be12101e59d45588b4e059579f4e61062e1cda8d6b06c0191b15\",\"dweb:/ipfs/QmV2JKCyjTVH3rkWNrfdJRhAT7tZ3usAN2XcnD4h53Mvih\"]},\"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 875,
								"contract": "Revolt.sol:RevoltCoin",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 881,
								"contract": "Revolt.sol:RevoltCoin",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 883,
								"contract": "Revolt.sol:RevoltCoin",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 885,
								"contract": "Revolt.sol:RevoltCoin",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 887,
								"contract": "Revolt.sol:RevoltCoin",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 581,
								"contract": "Revolt.sol:RevoltCoin",
								"label": "_owner",
								"offset": 0,
								"slot": "5",
								"type": "t_address"
							},
							{
								"astId": 704,
								"contract": "Revolt.sol:RevoltCoin",
								"label": "_paused",
								"offset": 20,
								"slot": "5",
								"type": "t_bool"
							},
							{
								"astId": 805,
								"contract": "Revolt.sol:RevoltCoin",
								"label": "_status",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 23,
								"contract": "Revolt.sol:RevoltCoin",
								"label": "transferFeePercent",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							},
							{
								"astId": 25,
								"contract": "Revolt.sol:RevoltCoin",
								"label": "feeRecipient",
								"offset": 0,
								"slot": "8",
								"type": "t_address"
							},
							{
								"astId": 29,
								"contract": "Revolt.sol:RevoltCoin",
								"label": "_isExcludedFromFee",
								"offset": 0,
								"slot": "9",
								"type": "t_mapping(t_address,t_bool)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"airdrop(address[],uint256[])": {
								"notice": "批量空投代币给指定地址"
							},
							"ownerTransfer(address)": {
								"notice": "安全转移合约所有权"
							},
							"pause()": {
								"notice": "暂停所有转账"
							},
							"transfer(address,uint256)": {
								"notice": "防重入安全的转账接口"
							},
							"unpause()": {
								"notice": "恢复转账"
							}
						},
						"version": 1
					}
				}
			},
			"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 581,
								"contract": "https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/security/Pausable.sol": {
				"Pausable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.",
						"events": {
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract in unpaused state."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"paused()": "5c975abb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract in unpaused state.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/security/Pausable.sol\":\"Pausable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/security/Pausable.sol\":{\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004\",\"dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B\"]},\"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 704,
								"contract": "https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/security/Pausable.sol:Pausable",
								"label": "_paused",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							}
						],
						"types": {
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/security/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 805,
								"contract": "https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name_",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol_",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":1532:12844  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n  mstore(0x40, 0x80)\n    /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":1980:2093  constructor(string memory name_, string memory symbol_) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":2046:2051  _name */\n  0x03\n    /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":2046:2059  _name = name_ */\n  tag_6\n    /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":2054:2059  name_ */\n  dup4\n    /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":2046:2051  _name */\n  dup3\n    /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":2046:2059  _name = name_ */\n  tag_7\n  jump\t// in\ntag_6:\n  pop\n    /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":2069:2076  _symbol */\n  0x04\n    /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":2069:2086  _symbol = symbol_ */\n  tag_8\n    /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":2079:2086  symbol_ */\n  dup3\n    /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":2069:2076  _symbol */\n  dup3\n    /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":2069:2086  _symbol = symbol_ */\n  tag_7\n  jump\t// in\ntag_8:\n  pop\n    /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":1980:2093  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":1532:12844  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n  jump(tag_16)\n    /* \"#utility.yul\":14:141   */\ntag_10:\n    /* \"#utility.yul\":75:85   */\n  0x4e487b71\n    /* \"#utility.yul\":70:73   */\n  0xe0\n    /* \"#utility.yul\":66:86   */\n  shl\n    /* \"#utility.yul\":63:64   */\n  0x00\n    /* \"#utility.yul\":56:87   */\n  mstore\n    /* \"#utility.yul\":106:110   */\n  0x41\n    /* \"#utility.yul\":103:104   */\n  0x04\n    /* \"#utility.yul\":96:111   */\n  mstore\n    /* \"#utility.yul\":130:134   */\n  0x24\n    /* \"#utility.yul\":127:128   */\n  0x00\n    /* \"#utility.yul\":120:135   */\n  revert\n    /* \"#utility.yul\":146:869   */\ntag_11:\n    /* \"#utility.yul\":200:205   */\n  0x00\n    /* \"#utility.yul\":253:256   */\n  dup3\n    /* \"#utility.yul\":246:250   */\n  0x1f\n    /* \"#utility.yul\":238:244   */\n  dup4\n    /* \"#utility.yul\":234:251   */\n  add\n    /* \"#utility.yul\":230:257   */\n  slt\n    /* \"#utility.yul\":220:275   */\n  tag_19\n  jumpi\n    /* \"#utility.yul\":271:272   */\n  0x00\n    /* \"#utility.yul\":268:269   */\n  dup1\n    /* \"#utility.yul\":261:273   */\n  revert\n    /* \"#utility.yul\":220:275   */\ntag_19:\n    /* \"#utility.yul\":298:311   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":323:353   */\n  dup2\n  gt\n    /* \"#utility.yul\":320:376   */\n  iszero\n  tag_21\n  jumpi\n    /* \"#utility.yul\":356:374   */\n  tag_21\n  tag_10\n  jump\t// in\ntag_21:\n    /* \"#utility.yul\":405:407   */\n  0x40\n    /* \"#utility.yul\":399:408   */\n  mload\n    /* \"#utility.yul\":497:499   */\n  0x1f\n    /* \"#utility.yul\":459:476   */\n  dup3\n  add\n  not(0x1f)\n    /* \"#utility.yul\":455:486   */\n  swap1\n  dup2\n  and\n    /* \"#utility.yul\":488:490   */\n  0x3f\n    /* \"#utility.yul\":451:491   */\n  add\n    /* \"#utility.yul\":447:501   */\n  and\n    /* \"#utility.yul\":435:502   */\n  dup2\n  add\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":517:551   */\n  dup2\n  gt\n    /* \"#utility.yul\":553:575   */\n  dup3\n  dup3\n  lt\n    /* \"#utility.yul\":514:576   */\n  or\n    /* \"#utility.yul\":511:599   */\n  iszero\n  tag_23\n  jumpi\n    /* \"#utility.yul\":579:597   */\n  tag_23\n  tag_10\n  jump\t// in\ntag_23:\n    /* \"#utility.yul\":615:617   */\n  0x40\n    /* \"#utility.yul\":608:630   */\n  mstore\n    /* \"#utility.yul\":639:661   */\n  dup2\n  dup2\n  mstore\n    /* \"#utility.yul\":680:699   */\n  dup4\n  dup3\n  add\n    /* \"#utility.yul\":701:705   */\n  0x20\n    /* \"#utility.yul\":676:706   */\n  add\n    /* \"#utility.yul\":673:712   */\n  dup6\n  lt\n    /* \"#utility.yul\":670:729   */\n  iszero\n  tag_24\n  jumpi\n    /* \"#utility.yul\":725:726   */\n  0x00\n    /* \"#utility.yul\":722:723   */\n  dup1\n    /* \"#utility.yul\":715:727   */\n  revert\n    /* \"#utility.yul\":670:729   */\ntag_24:\n    /* \"#utility.yul\":782:788   */\n  dup2\n    /* \"#utility.yul\":775:779   */\n  0x20\n    /* \"#utility.yul\":767:773   */\n  dup6\n    /* \"#utility.yul\":763:780   */\n  add\n    /* \"#utility.yul\":756:760   */\n  0x20\n    /* \"#utility.yul\":748:754   */\n  dup4\n    /* \"#utility.yul\":744:761   */\n  add\n    /* \"#utility.yul\":738:789   */\n  mcopy\n    /* \"#utility.yul\":837:838   */\n  0x00\n    /* \"#utility.yul\":809:828   */\n  swap2\n  dup2\n  add\n    /* \"#utility.yul\":830:834   */\n  0x20\n    /* \"#utility.yul\":805:835   */\n  add\n    /* \"#utility.yul\":798:839   */\n  swap2\n  swap1\n  swap2\n  mstore\n    /* \"#utility.yul\":813:819   */\n  swap4\n    /* \"#utility.yul\":146:869   */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":874:1431   */\ntag_3:\n    /* \"#utility.yul\":973:979   */\n  0x00\n    /* \"#utility.yul\":981:987   */\n  dup1\n    /* \"#utility.yul\":1034:1036   */\n  0x40\n    /* \"#utility.yul\":1022:1031   */\n  dup4\n    /* \"#utility.yul\":1013:1020   */\n  dup6\n    /* \"#utility.yul\":1009:1032   */\n  sub\n    /* \"#utility.yul\":1005:1037   */\n  slt\n    /* \"#utility.yul\":1002:1054   */\n  iszero\n  tag_26\n  jumpi\n    /* \"#utility.yul\":1050:1051   */\n  0x00\n    /* \"#utility.yul\":1047:1048   */\n  dup1\n    /* \"#utility.yul\":1040:1052   */\n  revert\n    /* \"#utility.yul\":1002:1054   */\ntag_26:\n    /* \"#utility.yul\":1077:1093   */\n  dup3\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1105:1135   */\n  dup2\n  gt\n    /* \"#utility.yul\":1102:1152   */\n  iszero\n  tag_27\n  jumpi\n    /* \"#utility.yul\":1148:1149   */\n  0x00\n    /* \"#utility.yul\":1145:1146   */\n  dup1\n    /* \"#utility.yul\":1138:1150   */\n  revert\n    /* \"#utility.yul\":1102:1152   */\ntag_27:\n    /* \"#utility.yul\":1171:1232   */\n  tag_28\n    /* \"#utility.yul\":1224:1231   */\n  dup6\n    /* \"#utility.yul\":1215:1221   */\n  dup3\n    /* \"#utility.yul\":1204:1213   */\n  dup7\n    /* \"#utility.yul\":1200:1222   */\n  add\n    /* \"#utility.yul\":1171:1232   */\n  tag_11\n  jump\t// in\ntag_28:\n    /* \"#utility.yul\":1278:1280   */\n  0x20\n    /* \"#utility.yul\":1263:1281   */\n  dup6\n  add\n    /* \"#utility.yul\":1257:1282   */\n  mload\n    /* \"#utility.yul\":1161:1232   */\n  swap1\n  swap4\n  pop\n    /* \"#utility.yul\":1257:1282   */\n  swap1\n  pop\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1294:1326   */\n  dup2\n  gt\n    /* \"#utility.yul\":1291:1343   */\n  iszero\n  tag_29\n  jumpi\n    /* \"#utility.yul\":1339:1340   */\n  0x00\n    /* \"#utility.yul\":1336:1337   */\n  dup1\n    /* \"#utility.yul\":1329:1341   */\n  revert\n    /* \"#utility.yul\":1291:1343   */\ntag_29:\n    /* \"#utility.yul\":1362:1425   */\n  tag_30\n    /* \"#utility.yul\":1417:1424   */\n  dup6\n    /* \"#utility.yul\":1406:1414   */\n  dup3\n    /* \"#utility.yul\":1395:1404   */\n  dup7\n    /* \"#utility.yul\":1391:1415   */\n  add\n    /* \"#utility.yul\":1362:1425   */\n  tag_11\n  jump\t// in\ntag_30:\n    /* \"#utility.yul\":1352:1425   */\n  swap2\n  pop\n  pop\n    /* \"#utility.yul\":874:1431   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1436:1816   */\ntag_12:\n    /* \"#utility.yul\":1515:1516   */\n  0x01\n    /* \"#utility.yul\":1511:1523   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":1558:1570   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":1579:1640   */\n  tag_32\n  jumpi\n    /* \"#utility.yul\":1633:1637   */\n  0x7f\n    /* \"#utility.yul\":1625:1631   */\n  dup3\n    /* \"#utility.yul\":1621:1638   */\n  and\n    /* \"#utility.yul\":1611:1638   */\n  swap2\n  pop\n    /* \"#utility.yul\":1579:1640   */\ntag_32:\n    /* \"#utility.yul\":1686:1688   */\n  0x20\n    /* \"#utility.yul\":1678:1684   */\n  dup3\n    /* \"#utility.yul\":1675:1689   */\n  lt\n    /* \"#utility.yul\":1655:1673   */\n  dup2\n    /* \"#utility.yul\":1652:1690   */\n  sub\n    /* \"#utility.yul\":1649:1810   */\n  tag_33\n  jumpi\n    /* \"#utility.yul\":1732:1742   */\n  0x4e487b71\n    /* \"#utility.yul\":1727:1730   */\n  0xe0\n    /* \"#utility.yul\":1723:1743   */\n  shl\n    /* \"#utility.yul\":1720:1721   */\n  0x00\n    /* \"#utility.yul\":1713:1744   */\n  mstore\n    /* \"#utility.yul\":1767:1771   */\n  0x22\n    /* \"#utility.yul\":1764:1765   */\n  0x04\n    /* \"#utility.yul\":1757:1772   */\n  mstore\n    /* \"#utility.yul\":1795:1799   */\n  0x24\n    /* \"#utility.yul\":1792:1793   */\n  0x00\n    /* \"#utility.yul\":1785:1800   */\n  revert\n    /* \"#utility.yul\":1649:1810   */\ntag_33:\n  pop\n    /* \"#utility.yul\":1436:1816   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1947:2465   */\ntag_14:\n    /* \"#utility.yul\":2049:2051   */\n  0x1f\n    /* \"#utility.yul\":2044:2047   */\n  dup3\n    /* \"#utility.yul\":2041:2052   */\n  gt\n    /* \"#utility.yul\":2038:2459   */\n  iszero\n  tag_36\n  jumpi\n    /* \"#utility.yul\":2085:2090   */\n  dup1\n    /* \"#utility.yul\":2082:2083   */\n  0x00\n    /* \"#utility.yul\":2075:2091   */\n  mstore\n    /* \"#utility.yul\":2129:2133   */\n  0x20\n    /* \"#utility.yul\":2126:2127   */\n  0x00\n    /* \"#utility.yul\":2116:2134   */\n  keccak256\n    /* \"#utility.yul\":2199:2201   */\n  0x1f\n    /* \"#utility.yul\":2187:2197   */\n  dup5\n    /* \"#utility.yul\":2183:2202   */\n  add\n    /* \"#utility.yul\":2180:2181   */\n  0x05\n    /* \"#utility.yul\":2176:2203   */\n  shr\n    /* \"#utility.yul\":2170:2174   */\n  dup2\n    /* \"#utility.yul\":2166:2204   */\n  add\n    /* \"#utility.yul\":2235:2239   */\n  0x20\n    /* \"#utility.yul\":2223:2233   */\n  dup6\n    /* \"#utility.yul\":2220:2240   */\n  lt\n    /* \"#utility.yul\":2217:2264   */\n  iszero\n  tag_37\n  jumpi\n  pop\n    /* \"#utility.yul\":2258:2262   */\n  dup1\n    /* \"#utility.yul\":2217:2264   */\ntag_37:\n    /* \"#utility.yul\":2313:2315   */\n  0x1f\n    /* \"#utility.yul\":2308:2311   */\n  dup5\n    /* \"#utility.yul\":2304:2316   */\n  add\n    /* \"#utility.yul\":2301:2302   */\n  0x05\n    /* \"#utility.yul\":2297:2317   */\n  shr\n    /* \"#utility.yul\":2291:2295   */\n  dup3\n    /* \"#utility.yul\":2287:2318   */\n  add\n    /* \"#utility.yul\":2277:2318   */\n  swap2\n  pop\n    /* \"#utility.yul\":2368:2449   */\ntag_38:\n    /* \"#utility.yul\":2386:2388   */\n  dup2\n    /* \"#utility.yul\":2379:2384   */\n  dup2\n    /* \"#utility.yul\":2376:2389   */\n  lt\n    /* \"#utility.yul\":2368:2449   */\n  iszero\n  tag_40\n  jumpi\n    /* \"#utility.yul\":2445:2446   */\n  0x00\n    /* \"#utility.yul\":2431:2447   */\n  dup2\n  sstore\n    /* \"#utility.yul\":2412:2413   */\n  0x01\n    /* \"#utility.yul\":2401:2414   */\n  add\n    /* \"#utility.yul\":2368:2449   */\n  jump(tag_38)\ntag_40:\n    /* \"#utility.yul\":2372:2375   */\n  pop\n  pop\n    /* \"#utility.yul\":2038:2459   */\ntag_36:\n    /* \"#utility.yul\":1947:2465   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2641:3940   */\ntag_7:\n    /* \"#utility.yul\":2761:2771   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":2783:2813   */\n  dup2\n  gt\n    /* \"#utility.yul\":2780:2836   */\n  iszero\n  tag_44\n  jumpi\n    /* \"#utility.yul\":2816:2834   */\n  tag_44\n  tag_10\n  jump\t// in\ntag_44:\n    /* \"#utility.yul\":2845:2942   */\n  tag_45\n    /* \"#utility.yul\":2935:2941   */\n  dup2\n    /* \"#utility.yul\":2895:2933   */\n  tag_46\n    /* \"#utility.yul\":2927:2931   */\n  dup5\n    /* \"#utility.yul\":2921:2932   */\n  sload\n    /* \"#utility.yul\":2895:2933   */\n  tag_12\n  jump\t// in\ntag_46:\n    /* \"#utility.yul\":2889:2893   */\n  dup5\n    /* \"#utility.yul\":2845:2942   */\n  tag_14\n  jump\t// in\ntag_45:\n    /* \"#utility.yul\":2991:2995   */\n  0x20\n    /* \"#utility.yul\":3022:3024   */\n  0x1f\n    /* \"#utility.yul\":3011:3025   */\n  dup3\n  gt\n    /* \"#utility.yul\":3039:3040   */\n  0x01\n    /* \"#utility.yul\":3034:3683   */\n  dup2\n  eq\n  tag_48\n  jumpi\n    /* \"#utility.yul\":3727:3728   */\n  0x00\n    /* \"#utility.yul\":3744:3750   */\n  dup4\n    /* \"#utility.yul\":3741:3830   */\n  iszero\n  tag_49\n  jumpi\n  pop\n    /* \"#utility.yul\":3796:3815   */\n  dup5\n  dup3\n  add\n    /* \"#utility.yul\":3790:3816   */\n  mload\n    /* \"#utility.yul\":3741:3830   */\ntag_49:\n  not(0x00)\n    /* \"#utility.yul\":2598:2599   */\n  0x03\n    /* \"#utility.yul\":2594:2605   */\n  dup6\n  swap1\n  shl\n    /* \"#utility.yul\":2590:2614   */\n  shr\n    /* \"#utility.yul\":2586:2615   */\n  not\n    /* \"#utility.yul\":2576:2616   */\n  and\n    /* \"#utility.yul\":2622:2623   */\n  0x01\n    /* \"#utility.yul\":2618:2629   */\n  dup5\n  swap1\n  shl\n    /* \"#utility.yul\":2573:2630   */\n  or\n    /* \"#utility.yul\":3843:3924   */\n  dup5\n  sstore\n    /* \"#utility.yul\":3004:3934   */\n  jump(tag_40)\n    /* \"#utility.yul\":3034:3683   */\ntag_48:\n    /* \"#utility.yul\":1894:1895   */\n  0x00\n    /* \"#utility.yul\":1887:1901   */\n  dup5\n  dup2\n  mstore\n    /* \"#utility.yul\":1931:1935   */\n  0x20\n    /* \"#utility.yul\":1918:1936   */\n  dup2\n  keccak256\n  not(0x1f)\n    /* \"#utility.yul\":3070:3090   */\n  dup6\n  and\n  swap2\n    /* \"#utility.yul\":3188:3410   */\ntag_52:\n    /* \"#utility.yul\":3202:3209   */\n  dup3\n    /* \"#utility.yul\":3199:3200   */\n  dup2\n    /* \"#utility.yul\":3196:3210   */\n  lt\n    /* \"#utility.yul\":3188:3410   */\n  iszero\n  tag_54\n  jumpi\n    /* \"#utility.yul\":3284:3303   */\n  dup8\n  dup6\n  add\n    /* \"#utility.yul\":3278:3304   */\n  mload\n    /* \"#utility.yul\":3263:3305   */\n  dup3\n  sstore\n    /* \"#utility.yul\":3391:3395   */\n  0x20\n    /* \"#utility.yul\":3376:3396   */\n  swap5\n  dup6\n  add\n  swap5\n    /* \"#utility.yul\":3344:3345   */\n  0x01\n    /* \"#utility.yul\":3332:3346   */\n  swap1\n  swap3\n  add\n  swap2\n    /* \"#utility.yul\":3218:3230   */\n  add\n    /* \"#utility.yul\":3188:3410   */\n  jump(tag_52)\ntag_54:\n    /* \"#utility.yul\":3192:3195   */\n  pop\n    /* \"#utility.yul\":3438:3444   */\n  dup5\n    /* \"#utility.yul\":3429:3436   */\n  dup3\n    /* \"#utility.yul\":3426:3445   */\n  lt\n    /* \"#utility.yul\":3423:3624   */\n  iszero\n  tag_55\n  jumpi\n    /* \"#utility.yul\":3499:3518   */\n  dup7\n  dup5\n  add\n    /* \"#utility.yul\":3493:3519   */\n  mload\n  not(0x00)\n    /* \"#utility.yul\":3582:3583   */\n  0x03\n    /* \"#utility.yul\":3578:3592   */\n  dup8\n  swap1\n  shl\n    /* \"#utility.yul\":3594:3597   */\n  0xf8\n    /* \"#utility.yul\":3574:3598   */\n  and\n    /* \"#utility.yul\":3570:3607   */\n  shr\n    /* \"#utility.yul\":3566:3608   */\n  not\n    /* \"#utility.yul\":3551:3609   */\n  and\n    /* \"#utility.yul\":3536:3610   */\n  dup2\n  sstore\n    /* \"#utility.yul\":3423:3624   */\ntag_55:\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":3670:3671   */\n  0x01\n    /* \"#utility.yul\":3654:3668   */\n  swap1\n  dup2\n  shl\n    /* \"#utility.yul\":3650:3672   */\n  add\n    /* \"#utility.yul\":3637:3673   */\n  swap1\n  sstore\n  pop\n    /* \"#utility.yul\":2641:3940   */\n  jump\t// out\ntag_16:\n    /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":1532:12844  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":1532:12844  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x39509351\n      gt\n      tag_14\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_13\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_14:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":2158:2256  function name() public view virtual override returns (string memory) {... */\n    tag_3:\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":4444:4641  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_4:\n      tag_19\n      tag_20\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_20:\n      tag_22\n      jump\t// in\n    tag_19:\n      mload(0x40)\n        /* \"#utility.yul\":1085:1099   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1078:1100   */\n      iszero\n        /* \"#utility.yul\":1060:1101   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1048:1050   */\n      0x20\n        /* \"#utility.yul\":1033:1051   */\n      add\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":4444:4641  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n      tag_17\n        /* \"#utility.yul\":920:1107   */\n      jump\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":3255:3361  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_5:\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":3342:3354  _totalSupply */\n      sload(0x02)\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":3255:3361  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_25:\n      mload(0x40)\n        /* \"#utility.yul\":1258:1283   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1246:1248   */\n      0x20\n        /* \"#utility.yul\":1231:1249   */\n      add\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":3255:3361  function totalSupply() public view virtual override returns (uint256) {... */\n      tag_17\n        /* \"#utility.yul\":1112:1289   */\n      jump\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":5203:5459  function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_6:\n      tag_19\n      tag_30\n      calldatasize\n      0x04\n      tag_31\n      jump\t// in\n    tag_30:\n      tag_32\n      jump\t// in\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":3104:3195  function decimals() public view virtual override returns (uint8) {... */\n    tag_7:\n      mload(0x40)\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":3186:3188  18 */\n      0x12\n        /* \"#utility.yul\":1815:1851   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1803:1805   */\n      0x20\n        /* \"#utility.yul\":1788:1806   */\n      add\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":3104:3195  function decimals() public view virtual override returns (uint8) {... */\n      tag_17\n        /* \"#utility.yul\":1673:1857   */\n      jump\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":5854:6088  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_8:\n      tag_19\n      tag_39\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_39:\n      tag_40\n      jump\t// in\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":3419:3544  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_9:\n      tag_25\n      tag_43\n      calldatasize\n      0x04\n      tag_44\n      jump\t// in\n    tag_43:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":3519:3537  _balances[account] */\n      and\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":3493:3500  uint256 */\n      0x00\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":3519:3537  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":3419:3544  function balanceOf(address account) public view virtual override returns (uint256) {... */\n      jump\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":2369:2471  function symbol() public view virtual override returns (string memory) {... */\n    tag_10:\n      tag_15\n      tag_48\n      jump\t// in\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":6575:7002  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_11:\n      tag_19\n      tag_51\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_51:\n      tag_52\n      jump\t// in\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":3740:3929  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_12:\n      tag_19\n      tag_55\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_55:\n      tag_56\n      jump\t// in\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":3987:4136  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_13:\n      tag_25\n      tag_59\n      calldatasize\n      0x04\n      tag_60\n      jump\t// in\n    tag_59:\n      tag_61\n      jump\t// in\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":2158:2256  function name() public view virtual override returns (string memory) {... */\n    tag_16:\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":2212:2225  string memory */\n      0x60\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":2244:2249  _name */\n      0x03\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":2237:2249  return _name */\n      dup1\n      sload\n      tag_64\n      swap1\n      tag_65\n      jump\t// in\n    tag_64:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_66\n      swap1\n      tag_65\n      jump\t// in\n    tag_66:\n      dup1\n      iszero\n      tag_67\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_68\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_67)\n    tag_68:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_69:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_69\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_67:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":2158:2256  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":4444:4641  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_22:\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":4527:4531  bool */\n      0x00\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":4581:4613  _approve(owner, spender, amount) */\n      tag_73\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/utils/Context.sol\":719:729  msg.sender */\n      dup2\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":4597:4604  spender */\n      dup6\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":4606:4612  amount */\n      dup6\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":4581:4589  _approve */\n      tag_74\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":4581:4613  _approve(owner, spender, amount) */\n      jump\t// in\n    tag_73:\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":4630:4634  true */\n      0x01\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":4623:4634  return true */\n      swap2\n      pop\n      pop\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":4444:4641  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_70:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":5203:5459  function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_32:\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":5300:5304  bool */\n      0x00\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":5356:5394  _spendAllowance(from, spender, amount) */\n      tag_78\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":5372:5376  from */\n      dup6\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/utils/Context.sol\":719:729  msg.sender */\n      dup3\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":5387:5393  amount */\n      dup6\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":5356:5371  _spendAllowance */\n      tag_79\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":5356:5394  _spendAllowance(from, spender, amount) */\n      jump\t// in\n    tag_78:\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":5404:5431  _transfer(from, to, amount) */\n      tag_80\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":5414:5418  from */\n      dup6\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":5420:5422  to */\n      dup6\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":5424:5430  amount */\n      dup6\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":5404:5413  _transfer */\n      tag_81\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":5404:5431  _transfer(from, to, amount) */\n      jump\t// in\n    tag_80:\n      pop\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":5448:5452  true */\n      0x01\n      swap5\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":5203:5459  function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":5854:6088  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_40:\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":5942:5946  bool */\n      0x00\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":5996:6060  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      tag_73\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/utils/Context.sol\":719:729  msg.sender */\n      dup2\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":6012:6019  spender */\n      dup6\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":6049:6059  addedValue */\n      dup6\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":6021:6046  allowance(owner, spender) */\n      tag_86\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/utils/Context.sol\":719:729  msg.sender */\n      dup4\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":6012:6019  spender */\n      dup4\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":6021:6030  allowance */\n      tag_61\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":6021:6046  allowance(owner, spender) */\n      jump\t// in\n    tag_86:\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":6021:6059  allowance(owner, spender) + addedValue */\n      tag_87\n      swap2\n      swap1\n      tag_88\n      jump\t// in\n    tag_87:\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":5996:6004  _approve */\n      tag_74\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":5996:6060  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      jump\t// in\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":2369:2471  function symbol() public view virtual override returns (string memory) {... */\n    tag_48:\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":2425:2438  string memory */\n      0x60\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":2457:2464  _symbol */\n      0x04\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":2450:2464  return _symbol */\n      dup1\n      sload\n      tag_64\n      swap1\n      tag_65\n      jump\t// in\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":6575:7002  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_52:\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":6668:6672  bool */\n      0x00\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":6668:6672  bool */\n      dup2\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":6749:6774  allowance(owner, spender) */\n      tag_98\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/utils/Context.sol\":719:729  msg.sender */\n      dup3\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":6766:6773  spender */\n      dup7\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":6749:6758  allowance */\n      tag_61\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":6749:6774  allowance(owner, spender) */\n      jump\t// in\n    tag_98:\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":6722:6774  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":6812:6827  subtractedValue */\n      dup4\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":6792:6808  currentAllowance */\n      dup2\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":6792:6827  currentAllowance >= subtractedValue */\n      lt\n      iszero\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":6784:6869  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_99\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3132:3134   */\n      0x20\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":6784:6869  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3114:3135   */\n      mstore\n        /* \"#utility.yul\":3171:3173   */\n      0x25\n        /* \"#utility.yul\":3151:3169   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3144:3174   */\n      mstore\n        /* \"#utility.yul\":3210:3244   */\n      0x45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77\n        /* \"#utility.yul\":3190:3208   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3183:3245   */\n      mstore\n      shl(0xd8, 0x207a65726f)\n        /* \"#utility.yul\":3261:3279   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3254:3289   */\n      mstore\n        /* \"#utility.yul\":3306:3325   */\n      0x84\n      add\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":6784:6869  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n    tag_100:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_99:\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":6903:6963  _approve(owner, spender, currentAllowance - subtractedValue) */\n      tag_80\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":6912:6917  owner */\n      dup3\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":6919:6926  spender */\n      dup7\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":6947:6962  subtractedValue */\n      dup7\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":6928:6944  currentAllowance */\n      dup5\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":6928:6962  currentAllowance - subtractedValue */\n      sub\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":6903:6911  _approve */\n      tag_74\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":6903:6963  _approve(owner, spender, currentAllowance - subtractedValue) */\n      jump\t// in\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":3740:3929  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_56:\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":3819:3823  bool */\n      0x00\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":3873:3901  _transfer(owner, to, amount) */\n      tag_73\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/utils/Context.sol\":719:729  msg.sender */\n      dup2\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":3890:3892  to */\n      dup6\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":3894:3900  amount */\n      dup6\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":3873:3882  _transfer */\n      tag_81\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":3873:3901  _transfer(owner, to, amount) */\n      jump\t// in\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":3987:4136  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_61:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":4102:4120  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":4076:4083  uint256 */\n      0x00\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":4102:4120  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":4102:4113  _allowances */\n      0x01\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":4102:4120  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":4102:4129  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":3987:4136  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n      jump\t// out\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":10457:10797  function _approve(address owner, address spender, uint256 amount) internal virtual {... */\n    tag_74:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":10558:10577  owner != address(0) */\n      dup4\n      and\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":10550:10618  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_109\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3538:3540   */\n      0x20\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":10550:10618  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3520:3541   */\n      mstore\n        /* \"#utility.yul\":3577:3579   */\n      0x24\n        /* \"#utility.yul\":3557:3575   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":3550:3580   */\n      mstore\n        /* \"#utility.yul\":3616:3650   */\n      0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464\n        /* \"#utility.yul\":3596:3614   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3589:3651   */\n      mstore\n      shl(0xe0, 0x72657373)\n        /* \"#utility.yul\":3667:3685   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3660:3694   */\n      mstore\n        /* \"#utility.yul\":3711:3730   */\n      0x84\n      add\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":10550:10618  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_100\n        /* \"#utility.yul\":3336:3736   */\n      jump\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":10550:10618  require(owner != address(0), \"ERC20: approve from the zero address\") */\n    tag_109:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":10636:10657  spender != address(0) */\n      dup3\n      and\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":10628:10696  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_112\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3943:3945   */\n      0x20\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":10628:10696  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3925:3946   */\n      mstore\n        /* \"#utility.yul\":3982:3984   */\n      0x22\n        /* \"#utility.yul\":3962:3980   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3955:3985   */\n      mstore\n        /* \"#utility.yul\":4021:4055   */\n      0x45524332303a20617070726f766520746f20746865207a65726f206164647265\n        /* \"#utility.yul\":4001:4019   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3994:4056   */\n      mstore\n      shl(0xf0, 0x7373)\n        /* \"#utility.yul\":4072:4090   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4065:4097   */\n      mstore\n        /* \"#utility.yul\":4114:4133   */\n      0x84\n      add\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":10628:10696  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_100\n        /* \"#utility.yul\":3741:4139   */\n      jump\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":10628:10696  require(spender != address(0), \"ERC20: approve to the zero address\") */\n    tag_112:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":10707:10725  _allowances[owner] */\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":10707:10718  _allowances */\n      0x01\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":10707:10725  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":10707:10734  _allowances[owner][spender] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":10707:10743  _allowances[owner][spender] = amount */\n      dup6\n      swap1\n      sstore\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":10758:10790  Approval(owner, spender, amount) */\n      swap1\n      mload\n        /* \"#utility.yul\":1258:1283   */\n      dup5\n      dup2\n      mstore\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":10758:10790  Approval(owner, spender, amount) */\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap2\n        /* \"#utility.yul\":1231:1249   */\n      add\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":10758:10790  Approval(owner, spender, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":10457:10797  function _approve(address owner, address spender, uint256 amount) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":11078:11489  function _spendAllowance(address owner, address spender, uint256 amount) internal virtual {... */\n    tag_79:\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":11178:11202  uint256 currentAllowance */\n      0x00\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":11205:11230  allowance(owner, spender) */\n      tag_117\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":11215:11220  owner */\n      dup5\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":11222:11229  spender */\n      dup5\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":11205:11214  allowance */\n      tag_61\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":11205:11230  allowance(owner, spender) */\n      jump\t// in\n    tag_117:\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":11178:11230  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n      not(0x00)\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":11244:11260  currentAllowance */\n      dup2\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":11244:11281  currentAllowance != type(uint256).max */\n      eq\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":11240:11483  if (currentAllowance != type(uint256).max) {... */\n      tag_122\n      jumpi\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":11325:11331  amount */\n      dup2\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":11305:11321  currentAllowance */\n      dup2\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":11305:11331  currentAllowance >= amount */\n      lt\n      iszero\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":11297:11365  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      tag_119\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4346:4348   */\n      0x20\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":11297:11365  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4328:4349   */\n      mstore\n        /* \"#utility.yul\":4385:4387   */\n      0x1d\n        /* \"#utility.yul\":4365:4383   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4358:4388   */\n      mstore\n        /* \"#utility.yul\":4424:4455   */\n      0x45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000\n        /* \"#utility.yul\":4404:4422   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4397:4456   */\n      mstore\n        /* \"#utility.yul\":4473:4491   */\n      0x64\n      add\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":11297:11365  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      tag_100\n        /* \"#utility.yul\":4144:4497   */\n      jump\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":11297:11365  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n    tag_119:\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":11407:11458  _approve(owner, spender, currentAllowance - amount) */\n      tag_122\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":11416:11421  owner */\n      dup5\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":11423:11430  spender */\n      dup5\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":11451:11457  amount */\n      dup5\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":11432:11448  currentAllowance */\n      dup5\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":11432:11457  currentAllowance - amount */\n      sub\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":11407:11415  _approve */\n      tag_74\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":11407:11458  _approve(owner, spender, currentAllowance - amount) */\n      jump\t// in\n    tag_122:\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":11168:11489  {... */\n      pop\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":11078:11489  function _spendAllowance(address owner, address spender, uint256 amount) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":7456:8244  function _transfer(address from, address to, uint256 amount) internal virtual {... */\n    tag_81:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":7552:7570  from != address(0) */\n      dup4\n      and\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":7544:7612  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_124\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4704:4706   */\n      0x20\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":7544:7612  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4686:4707   */\n      mstore\n        /* \"#utility.yul\":4743:4745   */\n      0x25\n        /* \"#utility.yul\":4723:4741   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4716:4746   */\n      mstore\n        /* \"#utility.yul\":4782:4816   */\n      0x45524332303a207472616e736665722066726f6d20746865207a65726f206164\n        /* \"#utility.yul\":4762:4780   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4755:4817   */\n      mstore\n      shl(0xd8, 0x6472657373)\n        /* \"#utility.yul\":4833:4851   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4826:4861   */\n      mstore\n        /* \"#utility.yul\":4878:4897   */\n      0x84\n      add\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":7544:7612  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_100\n        /* \"#utility.yul\":4502:4903   */\n      jump\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":7544:7612  require(from != address(0), \"ERC20: transfer from the zero address\") */\n    tag_124:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":7630:7646  to != address(0) */\n      dup3\n      and\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":7622:7686  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_127\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5110:5112   */\n      0x20\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":7622:7686  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5092:5113   */\n      mstore\n        /* \"#utility.yul\":5149:5151   */\n      0x23\n        /* \"#utility.yul\":5129:5147   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5122:5152   */\n      mstore\n        /* \"#utility.yul\":5188:5222   */\n      0x45524332303a207472616e7366657220746f20746865207a65726f2061646472\n        /* \"#utility.yul\":5168:5186   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5161:5223   */\n      mstore\n      shl(0xe8, 0x657373)\n        /* \"#utility.yul\":5239:5257   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5232:5265   */\n      mstore\n        /* \"#utility.yul\":5282:5301   */\n      0x84\n      add\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":7622:7686  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_100\n        /* \"#utility.yul\":4908:5307   */\n      jump\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":7622:7686  require(to != address(0), \"ERC20: transfer to the zero address\") */\n    tag_127:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":7768:7783  _balances[from] */\n      dup4\n      and\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":7746:7765  uint256 fromBalance */\n      0x00\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":7768:7783  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":7801:7822  fromBalance >= amount */\n      dup2\n      dup2\n      lt\n      iszero\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":7793:7865  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_132\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5514:5516   */\n      0x20\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":7793:7865  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5496:5517   */\n      mstore\n        /* \"#utility.yul\":5553:5555   */\n      0x26\n        /* \"#utility.yul\":5533:5551   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5526:5556   */\n      mstore\n        /* \"#utility.yul\":5592:5626   */\n      0x45524332303a207472616e7366657220616d6f756e7420657863656564732062\n        /* \"#utility.yul\":5572:5590   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5565:5627   */\n      mstore\n      shl(0xd0, 0x616c616e6365)\n        /* \"#utility.yul\":5643:5661   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5636:5672   */\n      mstore\n        /* \"#utility.yul\":5689:5708   */\n      0x84\n      add\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":7793:7865  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_100\n        /* \"#utility.yul\":5312:5714   */\n      jump\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":7793:7865  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n    tag_132:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":7899:7914  _balances[from] */\n      dup5\n      dup2\n      and\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":7899:7908  _balances */\n      0x00\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":7899:7914  _balances[from] */\n      dup2\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":7917:7937  fromBalance - amount */\n      dup8\n      dup8\n      sub\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":7899:7937  _balances[from] = fromBalance - amount */\n      swap1\n      sstore\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":8114:8127  _balances[to] */\n      swap4\n      dup8\n      and\n      dup1\n      dup4\n      mstore\n      swap2\n      dup5\n      swap1\n      keccak256\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":8114:8137  _balances[to] += amount */\n      dup1\n      sload\n      dup8\n      add\n      swap1\n      sstore\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":8163:8189  Transfer(from, to, amount) */\n      swap3\n      mload\n        /* \"#utility.yul\":1258:1283   */\n      dup6\n      dup2\n      mstore\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":8114:8127  _balances[to] */\n      swap1\n      swap3\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":8163:8189  Transfer(from, to, amount) */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap2\n        /* \"#utility.yul\":1231:1249   */\n      add\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":8163:8189  Transfer(from, to, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":8200:8237  _afterTokenTransfer(from, to, amount) */\n      tag_122\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":12073:12164  function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual {} */\n      jump\n        /* \"#utility.yul\":14:432   */\n    tag_18:\n        /* \"#utility.yul\":163:165   */\n      0x20\n        /* \"#utility.yul\":152:161   */\n      dup2\n        /* \"#utility.yul\":145:166   */\n      mstore\n        /* \"#utility.yul\":126:130   */\n      0x00\n        /* \"#utility.yul\":195:201   */\n      dup3\n        /* \"#utility.yul\":189:202   */\n      mload\n        /* \"#utility.yul\":238:244   */\n      dup1\n        /* \"#utility.yul\":233:235   */\n      0x20\n        /* \"#utility.yul\":222:231   */\n      dup5\n        /* \"#utility.yul\":218:236   */\n      add\n        /* \"#utility.yul\":211:245   */\n      mstore\n        /* \"#utility.yul\":297:303   */\n      dup1\n        /* \"#utility.yul\":292:294   */\n      0x20\n        /* \"#utility.yul\":284:290   */\n      dup6\n        /* \"#utility.yul\":280:295   */\n      add\n        /* \"#utility.yul\":275:277   */\n      0x40\n        /* \"#utility.yul\":264:273   */\n      dup6\n        /* \"#utility.yul\":260:278   */\n      add\n        /* \"#utility.yul\":254:304   */\n      mcopy\n        /* \"#utility.yul\":353:354   */\n      0x00\n        /* \"#utility.yul\":348:350   */\n      0x40\n        /* \"#utility.yul\":339:345   */\n      dup3\n        /* \"#utility.yul\":328:337   */\n      dup6\n        /* \"#utility.yul\":324:346   */\n      add\n        /* \"#utility.yul\":320:351   */\n      add\n        /* \"#utility.yul\":313:355   */\n      mstore\n        /* \"#utility.yul\":423:425   */\n      0x40\n        /* \"#utility.yul\":416:418   */\n      0x1f\n        /* \"#utility.yul\":412:419   */\n      not\n        /* \"#utility.yul\":407:409   */\n      0x1f\n        /* \"#utility.yul\":399:405   */\n      dup4\n        /* \"#utility.yul\":395:410   */\n      add\n        /* \"#utility.yul\":391:420   */\n      and\n        /* \"#utility.yul\":380:389   */\n      dup5\n        /* \"#utility.yul\":376:421   */\n      add\n        /* \"#utility.yul\":372:426   */\n      add\n        /* \"#utility.yul\":364:426   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":14:432   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":437:610   */\n    tag_140:\n        /* \"#utility.yul\":505:525   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":554:585   */\n      dup2\n      and\n        /* \"#utility.yul\":544:586   */\n      dup2\n      eq\n        /* \"#utility.yul\":534:604   */\n      tag_144\n      jumpi\n        /* \"#utility.yul\":600:601   */\n      0x00\n        /* \"#utility.yul\":597:598   */\n      dup1\n        /* \"#utility.yul\":590:602   */\n      revert\n        /* \"#utility.yul\":534:604   */\n    tag_144:\n        /* \"#utility.yul\":437:610   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":615:915   */\n    tag_21:\n        /* \"#utility.yul\":683:689   */\n      0x00\n        /* \"#utility.yul\":691:697   */\n      dup1\n        /* \"#utility.yul\":744:746   */\n      0x40\n        /* \"#utility.yul\":732:741   */\n      dup4\n        /* \"#utility.yul\":723:730   */\n      dup6\n        /* \"#utility.yul\":719:742   */\n      sub\n        /* \"#utility.yul\":715:747   */\n      slt\n        /* \"#utility.yul\":712:764   */\n      iszero\n      tag_146\n      jumpi\n        /* \"#utility.yul\":760:761   */\n      0x00\n        /* \"#utility.yul\":757:758   */\n      dup1\n        /* \"#utility.yul\":750:762   */\n      revert\n        /* \"#utility.yul\":712:764   */\n    tag_146:\n        /* \"#utility.yul\":783:812   */\n      tag_147\n        /* \"#utility.yul\":802:811   */\n      dup4\n        /* \"#utility.yul\":783:812   */\n      tag_140\n      jump\t// in\n    tag_147:\n        /* \"#utility.yul\":773:812   */\n      swap5\n        /* \"#utility.yul\":881:883   */\n      0x20\n        /* \"#utility.yul\":866:884   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":853:885   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":615:915   */\n      jump\t// out\n        /* \"#utility.yul\":1294:1668   */\n    tag_31:\n        /* \"#utility.yul\":1371:1377   */\n      0x00\n        /* \"#utility.yul\":1379:1385   */\n      dup1\n        /* \"#utility.yul\":1387:1393   */\n      0x00\n        /* \"#utility.yul\":1440:1442   */\n      0x60\n        /* \"#utility.yul\":1428:1437   */\n      dup5\n        /* \"#utility.yul\":1419:1426   */\n      dup7\n        /* \"#utility.yul\":1415:1438   */\n      sub\n        /* \"#utility.yul\":1411:1443   */\n      slt\n        /* \"#utility.yul\":1408:1460   */\n      iszero\n      tag_151\n      jumpi\n        /* \"#utility.yul\":1456:1457   */\n      0x00\n        /* \"#utility.yul\":1453:1454   */\n      dup1\n        /* \"#utility.yul\":1446:1458   */\n      revert\n        /* \"#utility.yul\":1408:1460   */\n    tag_151:\n        /* \"#utility.yul\":1479:1508   */\n      tag_152\n        /* \"#utility.yul\":1498:1507   */\n      dup5\n        /* \"#utility.yul\":1479:1508   */\n      tag_140\n      jump\t// in\n    tag_152:\n        /* \"#utility.yul\":1469:1508   */\n      swap3\n      pop\n        /* \"#utility.yul\":1527:1565   */\n      tag_153\n        /* \"#utility.yul\":1561:1563   */\n      0x20\n        /* \"#utility.yul\":1550:1559   */\n      dup6\n        /* \"#utility.yul\":1546:1564   */\n      add\n        /* \"#utility.yul\":1527:1565   */\n      tag_140\n      jump\t// in\n    tag_153:\n        /* \"#utility.yul\":1294:1668   */\n      swap3\n      swap6\n        /* \"#utility.yul\":1517:1565   */\n      swap3\n      swap5\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":1634:1636   */\n      0x40\n        /* \"#utility.yul\":1619:1637   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":1606:1638   */\n      calldataload\n      swap1\n        /* \"#utility.yul\":1294:1668   */\n      jump\t// out\n        /* \"#utility.yul\":1862:2048   */\n    tag_44:\n        /* \"#utility.yul\":1921:1927   */\n      0x00\n        /* \"#utility.yul\":1974:1976   */\n      0x20\n        /* \"#utility.yul\":1962:1971   */\n      dup3\n        /* \"#utility.yul\":1953:1960   */\n      dup5\n        /* \"#utility.yul\":1949:1972   */\n      sub\n        /* \"#utility.yul\":1945:1977   */\n      slt\n        /* \"#utility.yul\":1942:1994   */\n      iszero\n      tag_156\n      jumpi\n        /* \"#utility.yul\":1990:1991   */\n      0x00\n        /* \"#utility.yul\":1987:1988   */\n      dup1\n        /* \"#utility.yul\":1980:1992   */\n      revert\n        /* \"#utility.yul\":1942:1994   */\n    tag_156:\n        /* \"#utility.yul\":2013:2042   */\n      tag_157\n        /* \"#utility.yul\":2032:2041   */\n      dup3\n        /* \"#utility.yul\":2013:2042   */\n      tag_140\n      jump\t// in\n    tag_157:\n        /* \"#utility.yul\":2003:2042   */\n      swap4\n        /* \"#utility.yul\":1862:2048   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2053:2313   */\n    tag_60:\n        /* \"#utility.yul\":2121:2127   */\n      0x00\n        /* \"#utility.yul\":2129:2135   */\n      dup1\n        /* \"#utility.yul\":2182:2184   */\n      0x40\n        /* \"#utility.yul\":2170:2179   */\n      dup4\n        /* \"#utility.yul\":2161:2168   */\n      dup6\n        /* \"#utility.yul\":2157:2180   */\n      sub\n        /* \"#utility.yul\":2153:2185   */\n      slt\n        /* \"#utility.yul\":2150:2202   */\n      iszero\n      tag_159\n      jumpi\n        /* \"#utility.yul\":2198:2199   */\n      0x00\n        /* \"#utility.yul\":2195:2196   */\n      dup1\n        /* \"#utility.yul\":2188:2200   */\n      revert\n        /* \"#utility.yul\":2150:2202   */\n    tag_159:\n        /* \"#utility.yul\":2221:2250   */\n      tag_160\n        /* \"#utility.yul\":2240:2249   */\n      dup4\n        /* \"#utility.yul\":2221:2250   */\n      tag_140\n      jump\t// in\n    tag_160:\n        /* \"#utility.yul\":2211:2250   */\n      swap2\n      pop\n        /* \"#utility.yul\":2269:2307   */\n      tag_161\n        /* \"#utility.yul\":2303:2305   */\n      0x20\n        /* \"#utility.yul\":2292:2301   */\n      dup5\n        /* \"#utility.yul\":2288:2306   */\n      add\n        /* \"#utility.yul\":2269:2307   */\n      tag_140\n      jump\t// in\n    tag_161:\n        /* \"#utility.yul\":2259:2307   */\n      swap1\n      pop\n        /* \"#utility.yul\":2053:2313   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2318:2698   */\n    tag_65:\n        /* \"#utility.yul\":2397:2398   */\n      0x01\n        /* \"#utility.yul\":2393:2405   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":2440:2452   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":2461:2522   */\n      tag_163\n      jumpi\n        /* \"#utility.yul\":2515:2519   */\n      0x7f\n        /* \"#utility.yul\":2507:2513   */\n      dup3\n        /* \"#utility.yul\":2503:2520   */\n      and\n        /* \"#utility.yul\":2493:2520   */\n      swap2\n      pop\n        /* \"#utility.yul\":2461:2522   */\n    tag_163:\n        /* \"#utility.yul\":2568:2570   */\n      0x20\n        /* \"#utility.yul\":2560:2566   */\n      dup3\n        /* \"#utility.yul\":2557:2571   */\n      lt\n        /* \"#utility.yul\":2537:2555   */\n      dup2\n        /* \"#utility.yul\":2534:2572   */\n      sub\n        /* \"#utility.yul\":2531:2692   */\n      tag_164\n      jumpi\n        /* \"#utility.yul\":2614:2624   */\n      0x4e487b71\n        /* \"#utility.yul\":2609:2612   */\n      0xe0\n        /* \"#utility.yul\":2605:2625   */\n      shl\n        /* \"#utility.yul\":2602:2603   */\n      0x00\n        /* \"#utility.yul\":2595:2626   */\n      mstore\n        /* \"#utility.yul\":2649:2653   */\n      0x22\n        /* \"#utility.yul\":2646:2647   */\n      0x04\n        /* \"#utility.yul\":2639:2654   */\n      mstore\n        /* \"#utility.yul\":2677:2681   */\n      0x24\n        /* \"#utility.yul\":2674:2675   */\n      0x00\n        /* \"#utility.yul\":2667:2682   */\n      revert\n        /* \"#utility.yul\":2531:2692   */\n    tag_164:\n      pop\n        /* \"#utility.yul\":2318:2698   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2703:2925   */\n    tag_88:\n        /* \"#utility.yul\":2768:2777   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":2789:2799   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":2786:2919   */\n      iszero\n      tag_70\n      jumpi\n        /* \"#utility.yul\":2841:2851   */\n      0x4e487b71\n        /* \"#utility.yul\":2836:2839   */\n      0xe0\n        /* \"#utility.yul\":2832:2852   */\n      shl\n        /* \"#utility.yul\":2829:2830   */\n      0x00\n        /* \"#utility.yul\":2822:2853   */\n      mstore\n        /* \"#utility.yul\":2876:2880   */\n      0x11\n        /* \"#utility.yul\":2873:2874   */\n      0x04\n        /* \"#utility.yul\":2866:2881   */\n      mstore\n        /* \"#utility.yul\":2904:2908   */\n      0x24\n        /* \"#utility.yul\":2901:2902   */\n      0x00\n        /* \"#utility.yul\":2894:2909   */\n      revert\n\n    auxdata: 0xa2646970667358221220755b225c52dc8da0304deace4d1cece361490373ab57432859d925d302b700cb64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_904": {
									"entryPoint": null,
									"id": 904,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_string_fromMemory": {
									"entryPoint": 99,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory": {
									"entryPoint": 236,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 393,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 469,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 337,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 79,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:3942:8",
										"nodeType": "YulBlock",
										"src": "0:3942:8",
										"statements": [
											{
												"nativeSrc": "6:3:8",
												"nodeType": "YulBlock",
												"src": "6:3:8",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "46:95:8",
													"nodeType": "YulBlock",
													"src": "46:95:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "63:1:8",
																		"nodeType": "YulLiteral",
																		"src": "63:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "70:3:8",
																				"nodeType": "YulLiteral",
																				"src": "70:3:8",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "75:10:8",
																				"nodeType": "YulLiteral",
																				"src": "75:10:8",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "66:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "66:3:8"
																		},
																		"nativeSrc": "66:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "66:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "56:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "56:6:8"
																},
																"nativeSrc": "56:31:8",
																"nodeType": "YulFunctionCall",
																"src": "56:31:8"
															},
															"nativeSrc": "56:31:8",
															"nodeType": "YulExpressionStatement",
															"src": "56:31:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "103:1:8",
																		"nodeType": "YulLiteral",
																		"src": "103:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "106:4:8",
																		"nodeType": "YulLiteral",
																		"src": "106:4:8",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "96:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "96:6:8"
																},
																"nativeSrc": "96:15:8",
																"nodeType": "YulFunctionCall",
																"src": "96:15:8"
															},
															"nativeSrc": "96:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "96:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "127:1:8",
																		"nodeType": "YulLiteral",
																		"src": "127:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "130:4:8",
																		"nodeType": "YulLiteral",
																		"src": "130:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "120:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "120:6:8"
																},
																"nativeSrc": "120:15:8",
																"nodeType": "YulFunctionCall",
																"src": "120:15:8"
															},
															"nativeSrc": "120:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "120:15:8"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "14:127:8",
												"nodeType": "YulFunctionDefinition",
												"src": "14:127:8"
											},
											{
												"body": {
													"nativeSrc": "210:659:8",
													"nodeType": "YulBlock",
													"src": "210:659:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "259:16:8",
																"nodeType": "YulBlock",
																"src": "259:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "268:1:8",
																					"nodeType": "YulLiteral",
																					"src": "268:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "271:1:8",
																					"nodeType": "YulLiteral",
																					"src": "271:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "261:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "261:6:8"
																			},
																			"nativeSrc": "261:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "261:12:8"
																		},
																		"nativeSrc": "261:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "261:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "238:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "238:6:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "246:4:8",
																						"nodeType": "YulLiteral",
																						"src": "246:4:8",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "234:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "234:3:8"
																				},
																				"nativeSrc": "234:17:8",
																				"nodeType": "YulFunctionCall",
																				"src": "234:17:8"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "253:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "253:3:8"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "230:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "230:3:8"
																		},
																		"nativeSrc": "230:27:8",
																		"nodeType": "YulFunctionCall",
																		"src": "230:27:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "223:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "223:6:8"
																},
																"nativeSrc": "223:35:8",
																"nodeType": "YulFunctionCall",
																"src": "223:35:8"
															},
															"nativeSrc": "220:55:8",
															"nodeType": "YulIf",
															"src": "220:55:8"
														},
														{
															"nativeSrc": "284:27:8",
															"nodeType": "YulVariableDeclaration",
															"src": "284:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "304:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "304:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "298:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "298:5:8"
																},
																"nativeSrc": "298:13:8",
																"nodeType": "YulFunctionCall",
																"src": "298:13:8"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "288:6:8",
																	"nodeType": "YulTypedName",
																	"src": "288:6:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "354:22:8",
																"nodeType": "YulBlock",
																"src": "354:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "356:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "356:16:8"
																			},
																			"nativeSrc": "356:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "356:18:8"
																		},
																		"nativeSrc": "356:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "356:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "326:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "326:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "342:2:8",
																						"nodeType": "YulLiteral",
																						"src": "342:2:8",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "346:1:8",
																						"nodeType": "YulLiteral",
																						"src": "346:1:8",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "338:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "338:3:8"
																				},
																				"nativeSrc": "338:10:8",
																				"nodeType": "YulFunctionCall",
																				"src": "338:10:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "350:1:8",
																				"nodeType": "YulLiteral",
																				"src": "350:1:8",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "334:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "334:3:8"
																		},
																		"nativeSrc": "334:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "334:18:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "323:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "323:2:8"
																},
																"nativeSrc": "323:30:8",
																"nodeType": "YulFunctionCall",
																"src": "323:30:8"
															},
															"nativeSrc": "320:56:8",
															"nodeType": "YulIf",
															"src": "320:56:8"
														},
														{
															"nativeSrc": "385:23:8",
															"nodeType": "YulVariableDeclaration",
															"src": "385:23:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "405:2:8",
																		"nodeType": "YulLiteral",
																		"src": "405:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "399:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "399:5:8"
																},
																"nativeSrc": "399:9:8",
																"nodeType": "YulFunctionCall",
																"src": "399:9:8"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nativeSrc": "389:6:8",
																	"nodeType": "YulTypedName",
																	"src": "389:6:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "417:85:8",
															"nodeType": "YulVariableDeclaration",
															"src": "417:85:8",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "439:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "439:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "length",
																										"nativeSrc": "463:6:8",
																										"nodeType": "YulIdentifier",
																										"src": "463:6:8"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "471:4:8",
																										"nodeType": "YulLiteral",
																										"src": "471:4:8",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "459:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "459:3:8"
																								},
																								"nativeSrc": "459:17:8",
																								"nodeType": "YulFunctionCall",
																								"src": "459:17:8"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "482:2:8",
																										"nodeType": "YulLiteral",
																										"src": "482:2:8",
																										"type": "",
																										"value": "31"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nativeSrc": "478:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "478:3:8"
																								},
																								"nativeSrc": "478:7:8",
																								"nodeType": "YulFunctionCall",
																								"src": "478:7:8"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nativeSrc": "455:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "455:3:8"
																						},
																						"nativeSrc": "455:31:8",
																						"nodeType": "YulFunctionCall",
																						"src": "455:31:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "488:2:8",
																						"nodeType": "YulLiteral",
																						"src": "488:2:8",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "451:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "451:3:8"
																				},
																				"nativeSrc": "451:40:8",
																				"nodeType": "YulFunctionCall",
																				"src": "451:40:8"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "497:2:8",
																						"nodeType": "YulLiteral",
																						"src": "497:2:8",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "493:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "493:3:8"
																				},
																				"nativeSrc": "493:7:8",
																				"nodeType": "YulFunctionCall",
																				"src": "493:7:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "447:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "447:3:8"
																		},
																		"nativeSrc": "447:54:8",
																		"nodeType": "YulFunctionCall",
																		"src": "447:54:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "435:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "435:3:8"
																},
																"nativeSrc": "435:67:8",
																"nodeType": "YulFunctionCall",
																"src": "435:67:8"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "421:10:8",
																	"nodeType": "YulTypedName",
																	"src": "421:10:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "577:22:8",
																"nodeType": "YulBlock",
																"src": "577:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "579:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "579:16:8"
																			},
																			"nativeSrc": "579:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "579:18:8"
																		},
																		"nativeSrc": "579:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "579:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "520:10:8",
																				"nodeType": "YulIdentifier",
																				"src": "520:10:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "540:2:8",
																								"nodeType": "YulLiteral",
																								"src": "540:2:8",
																								"type": "",
																								"value": "64"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "544:1:8",
																								"nodeType": "YulLiteral",
																								"src": "544:1:8",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "536:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "536:3:8"
																						},
																						"nativeSrc": "536:10:8",
																						"nodeType": "YulFunctionCall",
																						"src": "536:10:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "548:1:8",
																						"nodeType": "YulLiteral",
																						"src": "548:1:8",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "532:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "532:3:8"
																				},
																				"nativeSrc": "532:18:8",
																				"nodeType": "YulFunctionCall",
																				"src": "532:18:8"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "517:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "517:2:8"
																		},
																		"nativeSrc": "517:34:8",
																		"nodeType": "YulFunctionCall",
																		"src": "517:34:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "556:10:8",
																				"nodeType": "YulIdentifier",
																				"src": "556:10:8"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "568:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "568:6:8"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "553:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "553:2:8"
																		},
																		"nativeSrc": "553:22:8",
																		"nodeType": "YulFunctionCall",
																		"src": "553:22:8"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "514:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "514:2:8"
																},
																"nativeSrc": "514:62:8",
																"nodeType": "YulFunctionCall",
																"src": "514:62:8"
															},
															"nativeSrc": "511:88:8",
															"nodeType": "YulIf",
															"src": "511:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "615:2:8",
																		"nodeType": "YulLiteral",
																		"src": "615:2:8",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "619:10:8",
																		"nodeType": "YulIdentifier",
																		"src": "619:10:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "608:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "608:6:8"
																},
																"nativeSrc": "608:22:8",
																"nodeType": "YulFunctionCall",
																"src": "608:22:8"
															},
															"nativeSrc": "608:22:8",
															"nodeType": "YulExpressionStatement",
															"src": "608:22:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "646:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "646:6:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "654:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "654:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "639:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "639:6:8"
																},
																"nativeSrc": "639:22:8",
																"nodeType": "YulFunctionCall",
																"src": "639:22:8"
															},
															"nativeSrc": "639:22:8",
															"nodeType": "YulExpressionStatement",
															"src": "639:22:8"
														},
														{
															"body": {
																"nativeSrc": "713:16:8",
																"nodeType": "YulBlock",
																"src": "713:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "722:1:8",
																					"nodeType": "YulLiteral",
																					"src": "722:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "725:1:8",
																					"nodeType": "YulLiteral",
																					"src": "725:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "715:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "715:6:8"
																			},
																			"nativeSrc": "715:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "715:12:8"
																		},
																		"nativeSrc": "715:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "715:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "684:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "684:6:8"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "692:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "692:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "680:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "680:3:8"
																				},
																				"nativeSrc": "680:19:8",
																				"nodeType": "YulFunctionCall",
																				"src": "680:19:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "701:4:8",
																				"nodeType": "YulLiteral",
																				"src": "701:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "676:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "676:3:8"
																		},
																		"nativeSrc": "676:30:8",
																		"nodeType": "YulFunctionCall",
																		"src": "676:30:8"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "708:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "708:3:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "673:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "673:2:8"
																},
																"nativeSrc": "673:39:8",
																"nodeType": "YulFunctionCall",
																"src": "673:39:8"
															},
															"nativeSrc": "670:59:8",
															"nodeType": "YulIf",
															"src": "670:59:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "748:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "748:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "756:4:8",
																				"nodeType": "YulLiteral",
																				"src": "756:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "744:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "744:3:8"
																		},
																		"nativeSrc": "744:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "744:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "767:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "767:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "775:4:8",
																				"nodeType": "YulLiteral",
																				"src": "775:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "763:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "763:3:8"
																		},
																		"nativeSrc": "763:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "763:17:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "782:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "782:6:8"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "738:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "738:5:8"
																},
																"nativeSrc": "738:51:8",
																"nodeType": "YulFunctionCall",
																"src": "738:51:8"
															},
															"nativeSrc": "738:51:8",
															"nodeType": "YulExpressionStatement",
															"src": "738:51:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nativeSrc": "813:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "813:6:8"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "821:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "821:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "809:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "809:3:8"
																				},
																				"nativeSrc": "809:19:8",
																				"nodeType": "YulFunctionCall",
																				"src": "809:19:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "830:4:8",
																				"nodeType": "YulLiteral",
																				"src": "830:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "805:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "805:3:8"
																		},
																		"nativeSrc": "805:30:8",
																		"nodeType": "YulFunctionCall",
																		"src": "805:30:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "837:1:8",
																		"nodeType": "YulLiteral",
																		"src": "837:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "798:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "798:6:8"
																},
																"nativeSrc": "798:41:8",
																"nodeType": "YulFunctionCall",
																"src": "798:41:8"
															},
															"nativeSrc": "798:41:8",
															"nodeType": "YulExpressionStatement",
															"src": "798:41:8"
														},
														{
															"nativeSrc": "848:15:8",
															"nodeType": "YulAssignment",
															"src": "848:15:8",
															"value": {
																"name": "memPtr",
																"nativeSrc": "857:6:8",
																"nodeType": "YulIdentifier",
																"src": "857:6:8"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "848:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "848:5:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_string_fromMemory",
												"nativeSrc": "146:723:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "184:6:8",
														"nodeType": "YulTypedName",
														"src": "184:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "192:3:8",
														"nodeType": "YulTypedName",
														"src": "192:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "200:5:8",
														"nodeType": "YulTypedName",
														"src": "200:5:8",
														"type": ""
													}
												],
												"src": "146:723:8"
											},
											{
												"body": {
													"nativeSrc": "992:439:8",
													"nodeType": "YulBlock",
													"src": "992:439:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "1038:16:8",
																"nodeType": "YulBlock",
																"src": "1038:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1047:1:8",
																					"nodeType": "YulLiteral",
																					"src": "1047:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1050:1:8",
																					"nodeType": "YulLiteral",
																					"src": "1050:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1040:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "1040:6:8"
																			},
																			"nativeSrc": "1040:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "1040:12:8"
																		},
																		"nativeSrc": "1040:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "1040:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1013:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "1013:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1022:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "1022:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1009:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1009:3:8"
																		},
																		"nativeSrc": "1009:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1009:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1034:2:8",
																		"nodeType": "YulLiteral",
																		"src": "1034:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1005:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "1005:3:8"
																},
																"nativeSrc": "1005:32:8",
																"nodeType": "YulFunctionCall",
																"src": "1005:32:8"
															},
															"nativeSrc": "1002:52:8",
															"nodeType": "YulIf",
															"src": "1002:52:8"
														},
														{
															"nativeSrc": "1063:30:8",
															"nodeType": "YulVariableDeclaration",
															"src": "1063:30:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1083:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "1083:9:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1077:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "1077:5:8"
																},
																"nativeSrc": "1077:16:8",
																"nodeType": "YulFunctionCall",
																"src": "1077:16:8"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "1067:6:8",
																	"nodeType": "YulTypedName",
																	"src": "1067:6:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1136:16:8",
																"nodeType": "YulBlock",
																"src": "1136:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1145:1:8",
																					"nodeType": "YulLiteral",
																					"src": "1145:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1148:1:8",
																					"nodeType": "YulLiteral",
																					"src": "1148:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1138:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "1138:6:8"
																			},
																			"nativeSrc": "1138:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "1138:12:8"
																		},
																		"nativeSrc": "1138:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "1138:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1108:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "1108:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "1124:2:8",
																						"nodeType": "YulLiteral",
																						"src": "1124:2:8",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1128:1:8",
																						"nodeType": "YulLiteral",
																						"src": "1128:1:8",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "1120:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "1120:3:8"
																				},
																				"nativeSrc": "1120:10:8",
																				"nodeType": "YulFunctionCall",
																				"src": "1120:10:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1132:1:8",
																				"nodeType": "YulLiteral",
																				"src": "1132:1:8",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1116:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1116:3:8"
																		},
																		"nativeSrc": "1116:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1116:18:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1105:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "1105:2:8"
																},
																"nativeSrc": "1105:30:8",
																"nodeType": "YulFunctionCall",
																"src": "1105:30:8"
															},
															"nativeSrc": "1102:50:8",
															"nodeType": "YulIf",
															"src": "1102:50:8"
														},
														{
															"nativeSrc": "1161:71:8",
															"nodeType": "YulAssignment",
															"src": "1161:71:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1204:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "1204:9:8"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "1215:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "1215:6:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1200:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1200:3:8"
																		},
																		"nativeSrc": "1200:22:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1200:22:8"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "1224:7:8",
																		"nodeType": "YulIdentifier",
																		"src": "1224:7:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nativeSrc": "1171:28:8",
																	"nodeType": "YulIdentifier",
																	"src": "1171:28:8"
																},
																"nativeSrc": "1171:61:8",
																"nodeType": "YulFunctionCall",
																"src": "1171:61:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1161:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1161:6:8"
																}
															]
														},
														{
															"nativeSrc": "1241:41:8",
															"nodeType": "YulVariableDeclaration",
															"src": "1241:41:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1267:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "1267:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1278:2:8",
																				"nodeType": "YulLiteral",
																				"src": "1278:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1263:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1263:3:8"
																		},
																		"nativeSrc": "1263:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1263:18:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1257:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "1257:5:8"
																},
																"nativeSrc": "1257:25:8",
																"nodeType": "YulFunctionCall",
																"src": "1257:25:8"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nativeSrc": "1245:8:8",
																	"nodeType": "YulTypedName",
																	"src": "1245:8:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1327:16:8",
																"nodeType": "YulBlock",
																"src": "1327:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1336:1:8",
																					"nodeType": "YulLiteral",
																					"src": "1336:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1339:1:8",
																					"nodeType": "YulLiteral",
																					"src": "1339:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1329:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "1329:6:8"
																			},
																			"nativeSrc": "1329:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "1329:12:8"
																		},
																		"nativeSrc": "1329:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "1329:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nativeSrc": "1297:8:8",
																		"nodeType": "YulIdentifier",
																		"src": "1297:8:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "1315:2:8",
																						"nodeType": "YulLiteral",
																						"src": "1315:2:8",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1319:1:8",
																						"nodeType": "YulLiteral",
																						"src": "1319:1:8",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "1311:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "1311:3:8"
																				},
																				"nativeSrc": "1311:10:8",
																				"nodeType": "YulFunctionCall",
																				"src": "1311:10:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1323:1:8",
																				"nodeType": "YulLiteral",
																				"src": "1323:1:8",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1307:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1307:3:8"
																		},
																		"nativeSrc": "1307:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1307:18:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1294:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "1294:2:8"
																},
																"nativeSrc": "1294:32:8",
																"nodeType": "YulFunctionCall",
																"src": "1294:32:8"
															},
															"nativeSrc": "1291:52:8",
															"nodeType": "YulIf",
															"src": "1291:52:8"
														},
														{
															"nativeSrc": "1352:73:8",
															"nodeType": "YulAssignment",
															"src": "1352:73:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1395:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "1395:9:8"
																			},
																			{
																				"name": "offset_1",
																				"nativeSrc": "1406:8:8",
																				"nodeType": "YulIdentifier",
																				"src": "1406:8:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1391:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1391:3:8"
																		},
																		"nativeSrc": "1391:24:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1391:24:8"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "1417:7:8",
																		"nodeType": "YulIdentifier",
																		"src": "1417:7:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nativeSrc": "1362:28:8",
																	"nodeType": "YulIdentifier",
																	"src": "1362:28:8"
																},
																"nativeSrc": "1362:63:8",
																"nodeType": "YulFunctionCall",
																"src": "1362:63:8"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1352:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1352:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory",
												"nativeSrc": "874:557:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "950:9:8",
														"nodeType": "YulTypedName",
														"src": "950:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "961:7:8",
														"nodeType": "YulTypedName",
														"src": "961:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "973:6:8",
														"nodeType": "YulTypedName",
														"src": "973:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "981:6:8",
														"nodeType": "YulTypedName",
														"src": "981:6:8",
														"type": ""
													}
												],
												"src": "874:557:8"
											},
											{
												"body": {
													"nativeSrc": "1491:325:8",
													"nodeType": "YulBlock",
													"src": "1491:325:8",
													"statements": [
														{
															"nativeSrc": "1501:22:8",
															"nodeType": "YulAssignment",
															"src": "1501:22:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1515:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1515:1:8",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "1518:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "1518:4:8"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "1511:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "1511:3:8"
																},
																"nativeSrc": "1511:12:8",
																"nodeType": "YulFunctionCall",
																"src": "1511:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1501:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1501:6:8"
																}
															]
														},
														{
															"nativeSrc": "1532:38:8",
															"nodeType": "YulVariableDeclaration",
															"src": "1532:38:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "1562:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "1562:4:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1568:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1568:1:8",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1558:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "1558:3:8"
																},
																"nativeSrc": "1558:12:8",
																"nodeType": "YulFunctionCall",
																"src": "1558:12:8"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "1536:18:8",
																	"nodeType": "YulTypedName",
																	"src": "1536:18:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1609:31:8",
																"nodeType": "YulBlock",
																"src": "1609:31:8",
																"statements": [
																	{
																		"nativeSrc": "1611:27:8",
																		"nodeType": "YulAssignment",
																		"src": "1611:27:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "1625:6:8",
																					"nodeType": "YulIdentifier",
																					"src": "1625:6:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1633:4:8",
																					"nodeType": "YulLiteral",
																					"src": "1633:4:8",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "1621:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "1621:3:8"
																			},
																			"nativeSrc": "1621:17:8",
																			"nodeType": "YulFunctionCall",
																			"src": "1621:17:8"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "1611:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "1611:6:8"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "1589:18:8",
																		"nodeType": "YulIdentifier",
																		"src": "1589:18:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1582:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1582:6:8"
																},
																"nativeSrc": "1582:26:8",
																"nodeType": "YulFunctionCall",
																"src": "1582:26:8"
															},
															"nativeSrc": "1579:61:8",
															"nodeType": "YulIf",
															"src": "1579:61:8"
														},
														{
															"body": {
																"nativeSrc": "1699:111:8",
																"nodeType": "YulBlock",
																"src": "1699:111:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1720:1:8",
																					"nodeType": "YulLiteral",
																					"src": "1720:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "1727:3:8",
																							"nodeType": "YulLiteral",
																							"src": "1727:3:8",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "1732:10:8",
																							"nodeType": "YulLiteral",
																							"src": "1732:10:8",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "1723:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "1723:3:8"
																					},
																					"nativeSrc": "1723:20:8",
																					"nodeType": "YulFunctionCall",
																					"src": "1723:20:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "1713:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "1713:6:8"
																			},
																			"nativeSrc": "1713:31:8",
																			"nodeType": "YulFunctionCall",
																			"src": "1713:31:8"
																		},
																		"nativeSrc": "1713:31:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "1713:31:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1764:1:8",
																					"nodeType": "YulLiteral",
																					"src": "1764:1:8",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1767:4:8",
																					"nodeType": "YulLiteral",
																					"src": "1767:4:8",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "1757:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "1757:6:8"
																			},
																			"nativeSrc": "1757:15:8",
																			"nodeType": "YulFunctionCall",
																			"src": "1757:15:8"
																		},
																		"nativeSrc": "1757:15:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "1757:15:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1792:1:8",
																					"nodeType": "YulLiteral",
																					"src": "1792:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1795:4:8",
																					"nodeType": "YulLiteral",
																					"src": "1795:4:8",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1785:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "1785:6:8"
																			},
																			"nativeSrc": "1785:15:8",
																			"nodeType": "YulFunctionCall",
																			"src": "1785:15:8"
																		},
																		"nativeSrc": "1785:15:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "1785:15:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "1655:18:8",
																		"nodeType": "YulIdentifier",
																		"src": "1655:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "1678:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "1678:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1686:2:8",
																				"nodeType": "YulLiteral",
																				"src": "1686:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "1675:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "1675:2:8"
																		},
																		"nativeSrc": "1675:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1675:14:8"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "1652:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "1652:2:8"
																},
																"nativeSrc": "1652:38:8",
																"nodeType": "YulFunctionCall",
																"src": "1652:38:8"
															},
															"nativeSrc": "1649:161:8",
															"nodeType": "YulIf",
															"src": "1649:161:8"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "1436:380:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "1471:4:8",
														"nodeType": "YulTypedName",
														"src": "1471:4:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1480:6:8",
														"nodeType": "YulTypedName",
														"src": "1480:6:8",
														"type": ""
													}
												],
												"src": "1436:380:8"
											},
											{
												"body": {
													"nativeSrc": "1877:65:8",
													"nodeType": "YulBlock",
													"src": "1877:65:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1894:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1894:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "1897:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "1897:3:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1887:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1887:6:8"
																},
																"nativeSrc": "1887:14:8",
																"nodeType": "YulFunctionCall",
																"src": "1887:14:8"
															},
															"nativeSrc": "1887:14:8",
															"nodeType": "YulExpressionStatement",
															"src": "1887:14:8"
														},
														{
															"nativeSrc": "1910:26:8",
															"nodeType": "YulAssignment",
															"src": "1910:26:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1928:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1928:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1931:4:8",
																		"nodeType": "YulLiteral",
																		"src": "1931:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "1918:9:8",
																	"nodeType": "YulIdentifier",
																	"src": "1918:9:8"
																},
																"nativeSrc": "1918:18:8",
																"nodeType": "YulFunctionCall",
																"src": "1918:18:8"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "1910:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "1910:4:8"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nativeSrc": "1821:121:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "1860:3:8",
														"nodeType": "YulTypedName",
														"src": "1860:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "1868:4:8",
														"nodeType": "YulTypedName",
														"src": "1868:4:8",
														"type": ""
													}
												],
												"src": "1821:121:8"
											},
											{
												"body": {
													"nativeSrc": "2028:437:8",
													"nodeType": "YulBlock",
													"src": "2028:437:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "2061:398:8",
																"nodeType": "YulBlock",
																"src": "2061:398:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2082:1:8",
																					"nodeType": "YulLiteral",
																					"src": "2082:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"name": "array",
																					"nativeSrc": "2085:5:8",
																					"nodeType": "YulIdentifier",
																					"src": "2085:5:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2075:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "2075:6:8"
																			},
																			"nativeSrc": "2075:16:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2075:16:8"
																		},
																		"nativeSrc": "2075:16:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "2075:16:8"
																	},
																	{
																		"nativeSrc": "2104:30:8",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2104:30:8",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2126:1:8",
																					"nodeType": "YulLiteral",
																					"src": "2126:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2129:4:8",
																					"nodeType": "YulLiteral",
																					"src": "2129:4:8",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nativeSrc": "2116:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "2116:9:8"
																			},
																			"nativeSrc": "2116:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2116:18:8"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nativeSrc": "2108:4:8",
																				"nodeType": "YulTypedName",
																				"src": "2108:4:8",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "2147:57:8",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2147:57:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "2170:4:8",
																					"nodeType": "YulIdentifier",
																					"src": "2170:4:8"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "2180:1:8",
																							"nodeType": "YulLiteral",
																							"src": "2180:1:8",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nativeSrc": "2187:10:8",
																									"nodeType": "YulIdentifier",
																									"src": "2187:10:8"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "2199:2:8",
																									"nodeType": "YulLiteral",
																									"src": "2199:2:8",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "2183:3:8",
																								"nodeType": "YulIdentifier",
																								"src": "2183:3:8"
																							},
																							"nativeSrc": "2183:19:8",
																							"nodeType": "YulFunctionCall",
																							"src": "2183:19:8"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "2176:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "2176:3:8"
																					},
																					"nativeSrc": "2176:27:8",
																					"nodeType": "YulFunctionCall",
																					"src": "2176:27:8"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2166:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "2166:3:8"
																			},
																			"nativeSrc": "2166:38:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2166:38:8"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "2151:11:8",
																				"nodeType": "YulTypedName",
																				"src": "2151:11:8",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "2241:23:8",
																			"nodeType": "YulBlock",
																			"src": "2241:23:8",
																			"statements": [
																				{
																					"nativeSrc": "2243:19:8",
																					"nodeType": "YulAssignment",
																					"src": "2243:19:8",
																					"value": {
																						"name": "data",
																						"nativeSrc": "2258:4:8",
																						"nodeType": "YulIdentifier",
																						"src": "2258:4:8"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "2243:11:8",
																							"nodeType": "YulIdentifier",
																							"src": "2243:11:8"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "2223:10:8",
																					"nodeType": "YulIdentifier",
																					"src": "2223:10:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2235:4:8",
																					"nodeType": "YulLiteral",
																					"src": "2235:4:8",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "2220:2:8",
																				"nodeType": "YulIdentifier",
																				"src": "2220:2:8"
																			},
																			"nativeSrc": "2220:20:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2220:20:8"
																		},
																		"nativeSrc": "2217:47:8",
																		"nodeType": "YulIf",
																		"src": "2217:47:8"
																	},
																	{
																		"nativeSrc": "2277:41:8",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2277:41:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "2291:4:8",
																					"nodeType": "YulIdentifier",
																					"src": "2291:4:8"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "2301:1:8",
																							"nodeType": "YulLiteral",
																							"src": "2301:1:8",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "2308:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "2308:3:8"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "2313:2:8",
																									"nodeType": "YulLiteral",
																									"src": "2313:2:8",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "2304:3:8",
																								"nodeType": "YulIdentifier",
																								"src": "2304:3:8"
																							},
																							"nativeSrc": "2304:12:8",
																							"nodeType": "YulFunctionCall",
																							"src": "2304:12:8"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "2297:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "2297:3:8"
																					},
																					"nativeSrc": "2297:20:8",
																					"nodeType": "YulFunctionCall",
																					"src": "2297:20:8"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2287:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "2287:3:8"
																			},
																			"nativeSrc": "2287:31:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2287:31:8"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nativeSrc": "2281:2:8",
																				"nodeType": "YulTypedName",
																				"src": "2281:2:8",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "2331:24:8",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2331:24:8",
																		"value": {
																			"name": "deleteStart",
																			"nativeSrc": "2344:11:8",
																			"nodeType": "YulIdentifier",
																			"src": "2344:11:8"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nativeSrc": "2335:5:8",
																				"nodeType": "YulTypedName",
																				"src": "2335:5:8",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "2429:20:8",
																			"nodeType": "YulBlock",
																			"src": "2429:20:8",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "2438:5:8",
																								"nodeType": "YulIdentifier",
																								"src": "2438:5:8"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "2445:1:8",
																								"nodeType": "YulLiteral",
																								"src": "2445:1:8",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nativeSrc": "2431:6:8",
																							"nodeType": "YulIdentifier",
																							"src": "2431:6:8"
																						},
																						"nativeSrc": "2431:16:8",
																						"nodeType": "YulFunctionCall",
																						"src": "2431:16:8"
																					},
																					"nativeSrc": "2431:16:8",
																					"nodeType": "YulExpressionStatement",
																					"src": "2431:16:8"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "2379:5:8",
																					"nodeType": "YulIdentifier",
																					"src": "2379:5:8"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "2386:2:8",
																					"nodeType": "YulIdentifier",
																					"src": "2386:2:8"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "2376:2:8",
																				"nodeType": "YulIdentifier",
																				"src": "2376:2:8"
																			},
																			"nativeSrc": "2376:13:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2376:13:8"
																		},
																		"nativeSrc": "2368:81:8",
																		"nodeType": "YulForLoop",
																		"post": {
																			"nativeSrc": "2390:26:8",
																			"nodeType": "YulBlock",
																			"src": "2390:26:8",
																			"statements": [
																				{
																					"nativeSrc": "2392:22:8",
																					"nodeType": "YulAssignment",
																					"src": "2392:22:8",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "2405:5:8",
																								"nodeType": "YulIdentifier",
																								"src": "2405:5:8"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "2412:1:8",
																								"nodeType": "YulLiteral",
																								"src": "2412:1:8",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "2401:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "2401:3:8"
																						},
																						"nativeSrc": "2401:13:8",
																						"nodeType": "YulFunctionCall",
																						"src": "2401:13:8"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nativeSrc": "2392:5:8",
																							"nodeType": "YulIdentifier",
																							"src": "2392:5:8"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nativeSrc": "2372:3:8",
																			"nodeType": "YulBlock",
																			"src": "2372:3:8",
																			"statements": []
																		},
																		"src": "2368:81:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "2044:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "2044:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2049:2:8",
																		"nodeType": "YulLiteral",
																		"src": "2049:2:8",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2041:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "2041:2:8"
																},
																"nativeSrc": "2041:11:8",
																"nodeType": "YulFunctionCall",
																"src": "2041:11:8"
															},
															"nativeSrc": "2038:421:8",
															"nodeType": "YulIf",
															"src": "2038:421:8"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nativeSrc": "1947:518:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "2000:5:8",
														"nodeType": "YulTypedName",
														"src": "2000:5:8",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "2007:3:8",
														"nodeType": "YulTypedName",
														"src": "2007:3:8",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "2012:10:8",
														"nodeType": "YulTypedName",
														"src": "2012:10:8",
														"type": ""
													}
												],
												"src": "1947:518:8"
											},
											{
												"body": {
													"nativeSrc": "2555:81:8",
													"nodeType": "YulBlock",
													"src": "2555:81:8",
													"statements": [
														{
															"nativeSrc": "2565:65:8",
															"nodeType": "YulAssignment",
															"src": "2565:65:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "2580:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "2580:4:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "2598:1:8",
																										"nodeType": "YulLiteral",
																										"src": "2598:1:8",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nativeSrc": "2601:3:8",
																										"nodeType": "YulIdentifier",
																										"src": "2601:3:8"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "2594:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "2594:3:8"
																								},
																								"nativeSrc": "2594:11:8",
																								"nodeType": "YulFunctionCall",
																								"src": "2594:11:8"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "2611:1:8",
																										"nodeType": "YulLiteral",
																										"src": "2611:1:8",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nativeSrc": "2607:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "2607:3:8"
																								},
																								"nativeSrc": "2607:6:8",
																								"nodeType": "YulFunctionCall",
																								"src": "2607:6:8"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nativeSrc": "2590:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "2590:3:8"
																						},
																						"nativeSrc": "2590:24:8",
																						"nodeType": "YulFunctionCall",
																						"src": "2590:24:8"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "2586:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "2586:3:8"
																				},
																				"nativeSrc": "2586:29:8",
																				"nodeType": "YulFunctionCall",
																				"src": "2586:29:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2576:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "2576:3:8"
																		},
																		"nativeSrc": "2576:40:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2576:40:8"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "2622:1:8",
																				"nodeType": "YulLiteral",
																				"src": "2622:1:8",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "2625:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "2625:3:8"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "2618:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "2618:3:8"
																		},
																		"nativeSrc": "2618:11:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2618:11:8"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "2573:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "2573:2:8"
																},
																"nativeSrc": "2573:57:8",
																"nodeType": "YulFunctionCall",
																"src": "2573:57:8"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "2565:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "2565:4:8"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "2470:166:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "2532:4:8",
														"nodeType": "YulTypedName",
														"src": "2532:4:8",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "2538:3:8",
														"nodeType": "YulTypedName",
														"src": "2538:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "2546:4:8",
														"nodeType": "YulTypedName",
														"src": "2546:4:8",
														"type": ""
													}
												],
												"src": "2470:166:8"
											},
											{
												"body": {
													"nativeSrc": "2737:1203:8",
													"nodeType": "YulBlock",
													"src": "2737:1203:8",
													"statements": [
														{
															"nativeSrc": "2747:24:8",
															"nodeType": "YulVariableDeclaration",
															"src": "2747:24:8",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "2767:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "2767:3:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2761:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "2761:5:8"
																},
																"nativeSrc": "2761:10:8",
																"nodeType": "YulFunctionCall",
																"src": "2761:10:8"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "2751:6:8",
																	"nodeType": "YulTypedName",
																	"src": "2751:6:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2814:22:8",
																"nodeType": "YulBlock",
																"src": "2814:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "2816:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "2816:16:8"
																			},
																			"nativeSrc": "2816:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2816:18:8"
																		},
																		"nativeSrc": "2816:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "2816:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "2786:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "2786:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "2802:2:8",
																						"nodeType": "YulLiteral",
																						"src": "2802:2:8",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2806:1:8",
																						"nodeType": "YulLiteral",
																						"src": "2806:1:8",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "2798:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "2798:3:8"
																				},
																				"nativeSrc": "2798:10:8",
																				"nodeType": "YulFunctionCall",
																				"src": "2798:10:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2810:1:8",
																				"nodeType": "YulLiteral",
																				"src": "2810:1:8",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2794:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "2794:3:8"
																		},
																		"nativeSrc": "2794:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2794:18:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2783:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "2783:2:8"
																},
																"nativeSrc": "2783:30:8",
																"nodeType": "YulFunctionCall",
																"src": "2783:30:8"
															},
															"nativeSrc": "2780:56:8",
															"nodeType": "YulIf",
															"src": "2780:56:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "2889:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "2889:4:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "2927:4:8",
																						"nodeType": "YulIdentifier",
																						"src": "2927:4:8"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "2921:5:8",
																					"nodeType": "YulIdentifier",
																					"src": "2921:5:8"
																				},
																				"nativeSrc": "2921:11:8",
																				"nodeType": "YulFunctionCall",
																				"src": "2921:11:8"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nativeSrc": "2895:25:8",
																			"nodeType": "YulIdentifier",
																			"src": "2895:25:8"
																		},
																		"nativeSrc": "2895:38:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2895:38:8"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "2935:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "2935:6:8"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nativeSrc": "2845:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "2845:43:8"
																},
																"nativeSrc": "2845:97:8",
																"nodeType": "YulFunctionCall",
																"src": "2845:97:8"
															},
															"nativeSrc": "2845:97:8",
															"nodeType": "YulExpressionStatement",
															"src": "2845:97:8"
														},
														{
															"nativeSrc": "2951:18:8",
															"nodeType": "YulVariableDeclaration",
															"src": "2951:18:8",
															"value": {
																"kind": "number",
																"nativeSrc": "2968:1:8",
																"nodeType": "YulLiteral",
																"src": "2968:1:8",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "2955:9:8",
																	"nodeType": "YulTypedName",
																	"src": "2955:9:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2978:17:8",
															"nodeType": "YulAssignment",
															"src": "2978:17:8",
															"value": {
																"kind": "number",
																"nativeSrc": "2991:4:8",
																"nodeType": "YulLiteral",
																"src": "2991:4:8",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "2978:9:8",
																	"nodeType": "YulIdentifier",
																	"src": "2978:9:8"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "3041:642:8",
																		"nodeType": "YulBlock",
																		"src": "3041:642:8",
																		"statements": [
																			{
																				"nativeSrc": "3055:35:8",
																				"nodeType": "YulVariableDeclaration",
																				"src": "3055:35:8",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "3074:6:8",
																							"nodeType": "YulIdentifier",
																							"src": "3074:6:8"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "3086:2:8",
																									"nodeType": "YulLiteral",
																									"src": "3086:2:8",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "3082:3:8",
																								"nodeType": "YulIdentifier",
																								"src": "3082:3:8"
																							},
																							"nativeSrc": "3082:7:8",
																							"nodeType": "YulFunctionCall",
																							"src": "3082:7:8"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "3070:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "3070:3:8"
																					},
																					"nativeSrc": "3070:20:8",
																					"nodeType": "YulFunctionCall",
																					"src": "3070:20:8"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "3059:7:8",
																						"nodeType": "YulTypedName",
																						"src": "3059:7:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "3103:49:8",
																				"nodeType": "YulVariableDeclaration",
																				"src": "3103:49:8",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "3147:4:8",
																							"nodeType": "YulIdentifier",
																							"src": "3147:4:8"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nativeSrc": "3117:29:8",
																						"nodeType": "YulIdentifier",
																						"src": "3117:29:8"
																					},
																					"nativeSrc": "3117:35:8",
																					"nodeType": "YulFunctionCall",
																					"src": "3117:35:8"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "3107:6:8",
																						"nodeType": "YulTypedName",
																						"src": "3107:6:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "3165:10:8",
																				"nodeType": "YulVariableDeclaration",
																				"src": "3165:10:8",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "3174:1:8",
																					"nodeType": "YulLiteral",
																					"src": "3174:1:8",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "3169:1:8",
																						"nodeType": "YulTypedName",
																						"src": "3169:1:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "3245:165:8",
																					"nodeType": "YulBlock",
																					"src": "3245:165:8",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "3270:6:8",
																										"nodeType": "YulIdentifier",
																										"src": "3270:6:8"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "3288:3:8",
																														"nodeType": "YulIdentifier",
																														"src": "3288:3:8"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "3293:9:8",
																														"nodeType": "YulIdentifier",
																														"src": "3293:9:8"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "3284:3:8",
																													"nodeType": "YulIdentifier",
																													"src": "3284:3:8"
																												},
																												"nativeSrc": "3284:19:8",
																												"nodeType": "YulFunctionCall",
																												"src": "3284:19:8"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "3278:5:8",
																											"nodeType": "YulIdentifier",
																											"src": "3278:5:8"
																										},
																										"nativeSrc": "3278:26:8",
																										"nodeType": "YulFunctionCall",
																										"src": "3278:26:8"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "3263:6:8",
																									"nodeType": "YulIdentifier",
																									"src": "3263:6:8"
																								},
																								"nativeSrc": "3263:42:8",
																								"nodeType": "YulFunctionCall",
																								"src": "3263:42:8"
																							},
																							"nativeSrc": "3263:42:8",
																							"nodeType": "YulExpressionStatement",
																							"src": "3263:42:8"
																						},
																						{
																							"nativeSrc": "3322:24:8",
																							"nodeType": "YulAssignment",
																							"src": "3322:24:8",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "3336:6:8",
																										"nodeType": "YulIdentifier",
																										"src": "3336:6:8"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "3344:1:8",
																										"nodeType": "YulLiteral",
																										"src": "3344:1:8",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "3332:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "3332:3:8"
																								},
																								"nativeSrc": "3332:14:8",
																								"nodeType": "YulFunctionCall",
																								"src": "3332:14:8"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "3322:6:8",
																									"nodeType": "YulIdentifier",
																									"src": "3322:6:8"
																								}
																							]
																						},
																						{
																							"nativeSrc": "3363:33:8",
																							"nodeType": "YulAssignment",
																							"src": "3363:33:8",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "3380:9:8",
																										"nodeType": "YulIdentifier",
																										"src": "3380:9:8"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "3391:4:8",
																										"nodeType": "YulLiteral",
																										"src": "3391:4:8",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "3376:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "3376:3:8"
																								},
																								"nativeSrc": "3376:20:8",
																								"nodeType": "YulFunctionCall",
																								"src": "3376:20:8"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "3363:9:8",
																									"nodeType": "YulIdentifier",
																									"src": "3363:9:8"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "3199:1:8",
																							"nodeType": "YulIdentifier",
																							"src": "3199:1:8"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "3202:7:8",
																							"nodeType": "YulIdentifier",
																							"src": "3202:7:8"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "3196:2:8",
																						"nodeType": "YulIdentifier",
																						"src": "3196:2:8"
																					},
																					"nativeSrc": "3196:14:8",
																					"nodeType": "YulFunctionCall",
																					"src": "3196:14:8"
																				},
																				"nativeSrc": "3188:222:8",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "3211:21:8",
																					"nodeType": "YulBlock",
																					"src": "3211:21:8",
																					"statements": [
																						{
																							"nativeSrc": "3213:17:8",
																							"nodeType": "YulAssignment",
																							"src": "3213:17:8",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "3222:1:8",
																										"nodeType": "YulIdentifier",
																										"src": "3222:1:8"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "3225:4:8",
																										"nodeType": "YulLiteral",
																										"src": "3225:4:8",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "3218:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "3218:3:8"
																								},
																								"nativeSrc": "3218:12:8",
																								"nodeType": "YulFunctionCall",
																								"src": "3218:12:8"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "3213:1:8",
																									"nodeType": "YulIdentifier",
																									"src": "3213:1:8"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "3192:3:8",
																					"nodeType": "YulBlock",
																					"src": "3192:3:8",
																					"statements": []
																				},
																				"src": "3188:222:8"
																			},
																			{
																				"body": {
																					"nativeSrc": "3458:166:8",
																					"nodeType": "YulBlock",
																					"src": "3458:166:8",
																					"statements": [
																						{
																							"nativeSrc": "3476:43:8",
																							"nodeType": "YulVariableDeclaration",
																							"src": "3476:43:8",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "3503:3:8",
																												"nodeType": "YulIdentifier",
																												"src": "3503:3:8"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "3508:9:8",
																												"nodeType": "YulIdentifier",
																												"src": "3508:9:8"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "3499:3:8",
																											"nodeType": "YulIdentifier",
																											"src": "3499:3:8"
																										},
																										"nativeSrc": "3499:19:8",
																										"nodeType": "YulFunctionCall",
																										"src": "3499:19:8"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "3493:5:8",
																									"nodeType": "YulIdentifier",
																									"src": "3493:5:8"
																								},
																								"nativeSrc": "3493:26:8",
																								"nodeType": "YulFunctionCall",
																								"src": "3493:26:8"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "3480:9:8",
																									"nodeType": "YulTypedName",
																									"src": "3480:9:8",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "3543:6:8",
																										"nodeType": "YulIdentifier",
																										"src": "3543:6:8"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "3555:9:8",
																												"nodeType": "YulIdentifier",
																												"src": "3555:9:8"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nativeSrc": "3582:1:8",
																																				"nodeType": "YulLiteral",
																																				"src": "3582:1:8",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nativeSrc": "3585:6:8",
																																				"nodeType": "YulIdentifier",
																																				"src": "3585:6:8"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nativeSrc": "3578:3:8",
																																			"nodeType": "YulIdentifier",
																																			"src": "3578:3:8"
																																		},
																																		"nativeSrc": "3578:14:8",
																																		"nodeType": "YulFunctionCall",
																																		"src": "3578:14:8"
																																	},
																																	{
																																		"kind": "number",
																																		"nativeSrc": "3594:3:8",
																																		"nodeType": "YulLiteral",
																																		"src": "3594:3:8",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nativeSrc": "3574:3:8",
																																	"nodeType": "YulIdentifier",
																																	"src": "3574:3:8"
																																},
																																"nativeSrc": "3574:24:8",
																																"nodeType": "YulFunctionCall",
																																"src": "3574:24:8"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nativeSrc": "3604:1:8",
																																		"nodeType": "YulLiteral",
																																		"src": "3604:1:8",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nativeSrc": "3600:3:8",
																																	"nodeType": "YulIdentifier",
																																	"src": "3600:3:8"
																																},
																																"nativeSrc": "3600:6:8",
																																"nodeType": "YulFunctionCall",
																																"src": "3600:6:8"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nativeSrc": "3570:3:8",
																															"nodeType": "YulIdentifier",
																															"src": "3570:3:8"
																														},
																														"nativeSrc": "3570:37:8",
																														"nodeType": "YulFunctionCall",
																														"src": "3570:37:8"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nativeSrc": "3566:3:8",
																													"nodeType": "YulIdentifier",
																													"src": "3566:3:8"
																												},
																												"nativeSrc": "3566:42:8",
																												"nodeType": "YulFunctionCall",
																												"src": "3566:42:8"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nativeSrc": "3551:3:8",
																											"nodeType": "YulIdentifier",
																											"src": "3551:3:8"
																										},
																										"nativeSrc": "3551:58:8",
																										"nodeType": "YulFunctionCall",
																										"src": "3551:58:8"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "3536:6:8",
																									"nodeType": "YulIdentifier",
																									"src": "3536:6:8"
																								},
																								"nativeSrc": "3536:74:8",
																								"nodeType": "YulFunctionCall",
																								"src": "3536:74:8"
																							},
																							"nativeSrc": "3536:74:8",
																							"nodeType": "YulExpressionStatement",
																							"src": "3536:74:8"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "3429:7:8",
																							"nodeType": "YulIdentifier",
																							"src": "3429:7:8"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "3438:6:8",
																							"nodeType": "YulIdentifier",
																							"src": "3438:6:8"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "3426:2:8",
																						"nodeType": "YulIdentifier",
																						"src": "3426:2:8"
																					},
																					"nativeSrc": "3426:19:8",
																					"nodeType": "YulFunctionCall",
																					"src": "3426:19:8"
																				},
																				"nativeSrc": "3423:201:8",
																				"nodeType": "YulIf",
																				"src": "3423:201:8"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "3644:4:8",
																							"nodeType": "YulIdentifier",
																							"src": "3644:4:8"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "3658:1:8",
																											"nodeType": "YulLiteral",
																											"src": "3658:1:8",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nativeSrc": "3661:6:8",
																											"nodeType": "YulIdentifier",
																											"src": "3661:6:8"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nativeSrc": "3654:3:8",
																										"nodeType": "YulIdentifier",
																										"src": "3654:3:8"
																									},
																									"nativeSrc": "3654:14:8",
																									"nodeType": "YulFunctionCall",
																									"src": "3654:14:8"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "3670:1:8",
																									"nodeType": "YulLiteral",
																									"src": "3670:1:8",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "3650:3:8",
																								"nodeType": "YulIdentifier",
																								"src": "3650:3:8"
																							},
																							"nativeSrc": "3650:22:8",
																							"nodeType": "YulFunctionCall",
																							"src": "3650:22:8"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "3637:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "3637:6:8"
																					},
																					"nativeSrc": "3637:36:8",
																					"nodeType": "YulFunctionCall",
																					"src": "3637:36:8"
																				},
																				"nativeSrc": "3637:36:8",
																				"nodeType": "YulExpressionStatement",
																				"src": "3637:36:8"
																			}
																		]
																	},
																	"nativeSrc": "3034:649:8",
																	"nodeType": "YulCase",
																	"src": "3034:649:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3039:1:8",
																		"nodeType": "YulLiteral",
																		"src": "3039:1:8",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "3700:234:8",
																		"nodeType": "YulBlock",
																		"src": "3700:234:8",
																		"statements": [
																			{
																				"nativeSrc": "3714:14:8",
																				"nodeType": "YulVariableDeclaration",
																				"src": "3714:14:8",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "3727:1:8",
																					"nodeType": "YulLiteral",
																					"src": "3727:1:8",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "3718:5:8",
																						"nodeType": "YulTypedName",
																						"src": "3718:5:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "3763:67:8",
																					"nodeType": "YulBlock",
																					"src": "3763:67:8",
																					"statements": [
																						{
																							"nativeSrc": "3781:35:8",
																							"nodeType": "YulAssignment",
																							"src": "3781:35:8",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "3800:3:8",
																												"nodeType": "YulIdentifier",
																												"src": "3800:3:8"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "3805:9:8",
																												"nodeType": "YulIdentifier",
																												"src": "3805:9:8"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "3796:3:8",
																											"nodeType": "YulIdentifier",
																											"src": "3796:3:8"
																										},
																										"nativeSrc": "3796:19:8",
																										"nodeType": "YulFunctionCall",
																										"src": "3796:19:8"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "3790:5:8",
																									"nodeType": "YulIdentifier",
																									"src": "3790:5:8"
																								},
																								"nativeSrc": "3790:26:8",
																								"nodeType": "YulFunctionCall",
																								"src": "3790:26:8"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "3781:5:8",
																									"nodeType": "YulIdentifier",
																									"src": "3781:5:8"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "3744:6:8",
																					"nodeType": "YulIdentifier",
																					"src": "3744:6:8"
																				},
																				"nativeSrc": "3741:89:8",
																				"nodeType": "YulIf",
																				"src": "3741:89:8"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "3850:4:8",
																							"nodeType": "YulIdentifier",
																							"src": "3850:4:8"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "3909:5:8",
																									"nodeType": "YulIdentifier",
																									"src": "3909:5:8"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "3916:6:8",
																									"nodeType": "YulIdentifier",
																									"src": "3916:6:8"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "3856:52:8",
																								"nodeType": "YulIdentifier",
																								"src": "3856:52:8"
																							},
																							"nativeSrc": "3856:67:8",
																							"nodeType": "YulFunctionCall",
																							"src": "3856:67:8"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "3843:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "3843:6:8"
																					},
																					"nativeSrc": "3843:81:8",
																					"nodeType": "YulFunctionCall",
																					"src": "3843:81:8"
																				},
																				"nativeSrc": "3843:81:8",
																				"nodeType": "YulExpressionStatement",
																				"src": "3843:81:8"
																			}
																		]
																	},
																	"nativeSrc": "3692:242:8",
																	"nodeType": "YulCase",
																	"src": "3692:242:8",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "3014:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "3014:6:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3022:2:8",
																		"nodeType": "YulLiteral",
																		"src": "3022:2:8",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3011:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "3011:2:8"
																},
																"nativeSrc": "3011:14:8",
																"nodeType": "YulFunctionCall",
																"src": "3011:14:8"
															},
															"nativeSrc": "3004:930:8",
															"nodeType": "YulSwitch",
															"src": "3004:930:8"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "2641:1299:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "2722:4:8",
														"nodeType": "YulTypedName",
														"src": "2722:4:8",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "2728:3:8",
														"nodeType": "YulTypedName",
														"src": "2728:3:8",
														"type": ""
													}
												],
												"src": "2641:1299:8"
											}
										]
									},
									"contents": "{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let length := mload(offset)\n        if gt(length, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(length, 0x1f), not(31)), 63), not(31)))\n        if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, length)\n        if gt(add(add(offset, length), 0x20), end) { revert(0, 0) }\n        mcopy(add(memPtr, 0x20), add(offset, 0x20), length)\n        mstore(add(add(memPtr, length), 0x20), 0)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := mload(headStart)\n        if gt(offset, sub(shl(64, 1), 1)) { revert(0, 0) }\n        value0 := abi_decode_string_fromMemory(add(headStart, offset), dataEnd)\n        let offset_1 := mload(add(headStart, 32))\n        if gt(offset_1, sub(shl(64, 1), 1)) { revert(0, 0) }\n        value1 := abi_decode_string_fromMemory(add(headStart, offset_1), dataEnd)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            mstore(0, array)\n            let data := keccak256(0, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _1 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _1) { start := add(start, 1) }\n            { sstore(start, 0) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        srcOffset := 0x20\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 0x20)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n}",
									"id": 8,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50604051610ab6380380610ab683398101604081905261002e916100ec565b600361003a83826101d5565b50600461004782826101d5565b50505061028f565b634e487b7160e01b5f52604160045260245ffd5b5f82601f830112610072575f80fd5b81516001600160401b0381111561008b5761008b61004f565b604051601f8201601f19908116603f011681016001600160401b03811182821017156100b9576100b961004f565b6040528181528382016020018510156100d0575f80fd5b8160208501602083015e5f918101602001919091529392505050565b5f80604083850312156100fd575f80fd5b82516001600160401b03811115610112575f80fd5b61011e85828601610063565b602085015190935090506001600160401b0381111561013b575f80fd5b61014785828601610063565b9150509250929050565b600181811c9082168061016557607f821691505b60208210810361018357634e487b7160e01b5f52602260045260245ffd5b50919050565b601f8211156101d057805f5260205f20601f840160051c810160208510156101ae5750805b601f840160051c820191505b818110156101cd575f81556001016101ba565b50505b505050565b81516001600160401b038111156101ee576101ee61004f565b610202816101fc8454610151565b84610189565b6020601f821160018114610234575f831561021d5750848201515b5f19600385901b1c1916600184901b1784556101cd565b5f84815260208120601f198516915b828110156102635787850151825560209485019460019092019101610243565b508482101561028057868401515f19600387901b60f8161c191681555b50505050600190811b01905550565b61081a8061029c5f395ff3fe608060405234801561000f575f80fd5b50600436106100a6575f3560e01c8063395093511161006e578063395093511461011f57806370a082311461013257806395d89b411461015a578063a457c2d714610162578063a9059cbb14610175578063dd62ed3e14610188575f80fd5b806306fdde03146100aa578063095ea7b3146100c857806318160ddd146100eb57806323b872dd146100fd578063313ce56714610110575b5f80fd5b6100b261019b565b6040516100bf919061068a565b60405180910390f35b6100db6100d63660046106da565b61022b565b60405190151581526020016100bf565b6002545b6040519081526020016100bf565b6100db61010b366004610702565b610244565b604051601281526020016100bf565b6100db61012d3660046106da565b610267565b6100ef61014036600461073c565b6001600160a01b03165f9081526020819052604090205490565b6100b2610288565b6100db6101703660046106da565b610297565b6100db6101833660046106da565b610316565b6100ef61019636600461075c565b610323565b6060600380546101aa9061078d565b80601f01602080910402602001604051908101604052809291908181526020018280546101d69061078d565b80156102215780601f106101f857610100808354040283529160200191610221565b820191905f5260205f20905b81548152906001019060200180831161020457829003601f168201915b5050505050905090565b5f3361023881858561034d565b60019150505b92915050565b5f33610251858285610470565b61025c8585856104e8565b506001949350505050565b5f336102388185856102798383610323565b61028391906107c5565b61034d565b6060600480546101aa9061078d565b5f33816102a48286610323565b9050838110156103095760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b61025c828686840361034d565b5f336102388185856104e8565b6001600160a01b039182165f90815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166103af5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610300565b6001600160a01b0382166104105760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610300565b6001600160a01b038381165f8181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b5f61047b8484610323565b90505f1981146104e257818110156104d55760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610300565b6104e2848484840361034d565b50505050565b6001600160a01b03831661054c5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610300565b6001600160a01b0382166105ae5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610300565b6001600160a01b0383165f90815260208190526040902054818110156106255760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610300565b6001600160a01b038481165f81815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a36104e2565b602081525f82518060208401528060208501604085015e5f604082850101526040601f19601f83011684010191505092915050565b80356001600160a01b03811681146106d5575f80fd5b919050565b5f80604083850312156106eb575f80fd5b6106f4836106bf565b946020939093013593505050565b5f805f60608486031215610714575f80fd5b61071d846106bf565b925061072b602085016106bf565b929592945050506040919091013590565b5f6020828403121561074c575f80fd5b610755826106bf565b9392505050565b5f806040838503121561076d575f80fd5b610776836106bf565b9150610784602084016106bf565b90509250929050565b600181811c908216806107a157607f821691505b6020821081036107bf57634e487b7160e01b5f52602260045260245ffd5b50919050565b8082018082111561023e57634e487b7160e01b5f52601160045260245ffdfea2646970667358221220755b225c52dc8da0304deace4d1cece361490373ab57432859d925d302b700cb64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xAB6 CODESIZE SUB DUP1 PUSH2 0xAB6 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2E SWAP2 PUSH2 0xEC JUMP JUMPDEST PUSH1 0x3 PUSH2 0x3A DUP4 DUP3 PUSH2 0x1D5 JUMP JUMPDEST POP PUSH1 0x4 PUSH2 0x47 DUP3 DUP3 PUSH2 0x1D5 JUMP JUMPDEST POP POP POP PUSH2 0x28F JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x72 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x8B JUMPI PUSH2 0x8B PUSH2 0x4F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0xB9 JUMPI PUSH2 0xB9 PUSH2 0x4F JUMP JUMPDEST PUSH1 0x40 MSTORE DUP2 DUP2 MSTORE DUP4 DUP3 ADD PUSH1 0x20 ADD DUP6 LT ISZERO PUSH2 0xD0 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD MCOPY PUSH0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xFD JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x112 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x11E DUP6 DUP3 DUP7 ADD PUSH2 0x63 JUMP JUMPDEST PUSH1 0x20 DUP6 ADD MLOAD SWAP1 SWAP4 POP SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x13B JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x147 DUP6 DUP3 DUP7 ADD PUSH2 0x63 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x165 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x183 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x1D0 JUMPI DUP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x1AE JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1CD JUMPI PUSH0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1BA JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x1EE JUMPI PUSH2 0x1EE PUSH2 0x4F JUMP JUMPDEST PUSH2 0x202 DUP2 PUSH2 0x1FC DUP5 SLOAD PUSH2 0x151 JUMP JUMPDEST DUP5 PUSH2 0x189 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 DUP2 EQ PUSH2 0x234 JUMPI PUSH0 DUP4 ISZERO PUSH2 0x21D JUMPI POP DUP5 DUP3 ADD MLOAD JUMPDEST PUSH0 NOT PUSH1 0x3 DUP6 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP5 SWAP1 SHL OR DUP5 SSTORE PUSH2 0x1CD JUMP JUMPDEST PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP6 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x263 JUMPI DUP8 DUP6 ADD MLOAD DUP3 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x243 JUMP JUMPDEST POP DUP5 DUP3 LT ISZERO PUSH2 0x280 JUMPI DUP7 DUP5 ADD MLOAD PUSH0 NOT PUSH1 0x3 DUP8 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x81A DUP1 PUSH2 0x29C PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA6 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x6E JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x11F JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x132 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x15A JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x162 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x175 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x188 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAA JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xC8 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xEB JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0xFD JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x110 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xB2 PUSH2 0x19B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBF SWAP2 SWAP1 PUSH2 0x68A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDB PUSH2 0xD6 CALLDATASIZE PUSH1 0x4 PUSH2 0x6DA JUMP JUMPDEST PUSH2 0x22B JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBF JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBF JUMP JUMPDEST PUSH2 0xDB PUSH2 0x10B CALLDATASIZE PUSH1 0x4 PUSH2 0x702 JUMP JUMPDEST PUSH2 0x244 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBF JUMP JUMPDEST PUSH2 0xDB PUSH2 0x12D CALLDATASIZE PUSH1 0x4 PUSH2 0x6DA JUMP JUMPDEST PUSH2 0x267 JUMP JUMPDEST PUSH2 0xEF PUSH2 0x140 CALLDATASIZE PUSH1 0x4 PUSH2 0x73C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xB2 PUSH2 0x288 JUMP JUMPDEST PUSH2 0xDB PUSH2 0x170 CALLDATASIZE PUSH1 0x4 PUSH2 0x6DA JUMP JUMPDEST PUSH2 0x297 JUMP JUMPDEST PUSH2 0xDB PUSH2 0x183 CALLDATASIZE PUSH1 0x4 PUSH2 0x6DA JUMP JUMPDEST PUSH2 0x316 JUMP JUMPDEST PUSH2 0xEF PUSH2 0x196 CALLDATASIZE PUSH1 0x4 PUSH2 0x75C JUMP JUMPDEST PUSH2 0x323 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x1AA SWAP1 PUSH2 0x78D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1D6 SWAP1 PUSH2 0x78D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x221 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1F8 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x221 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x204 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x238 DUP2 DUP6 DUP6 PUSH2 0x34D JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x251 DUP6 DUP3 DUP6 PUSH2 0x470 JUMP JUMPDEST PUSH2 0x25C DUP6 DUP6 DUP6 PUSH2 0x4E8 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x238 DUP2 DUP6 DUP6 PUSH2 0x279 DUP4 DUP4 PUSH2 0x323 JUMP JUMPDEST PUSH2 0x283 SWAP2 SWAP1 PUSH2 0x7C5 JUMP JUMPDEST PUSH2 0x34D JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x1AA SWAP1 PUSH2 0x78D JUMP JUMPDEST PUSH0 CALLER DUP2 PUSH2 0x2A4 DUP3 DUP7 PUSH2 0x323 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x309 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x25C DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x34D JUMP JUMPDEST PUSH0 CALLER PUSH2 0x238 DUP2 DUP6 DUP6 PUSH2 0x4E8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x3AF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x300 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x410 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x300 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x47B DUP5 DUP5 PUSH2 0x323 JUMP JUMPDEST SWAP1 POP PUSH0 NOT DUP2 EQ PUSH2 0x4E2 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x4D5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x300 JUMP JUMPDEST PUSH2 0x4E2 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x34D JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x54C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x300 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5AE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x300 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x625 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x300 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP8 DUP8 SUB SWAP1 SSTORE SWAP4 DUP8 AND DUP1 DUP4 MSTORE SWAP2 DUP5 SWAP1 KECCAK256 DUP1 SLOAD DUP8 ADD SWAP1 SSTORE SWAP3 MLOAD DUP6 DUP2 MSTORE SWAP1 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x4E2 JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE DUP1 PUSH1 0x20 DUP6 ADD PUSH1 0x40 DUP6 ADD MCOPY PUSH0 PUSH1 0x40 DUP3 DUP6 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP5 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x6D5 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x6EB JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x6F4 DUP4 PUSH2 0x6BF JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x714 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x71D DUP5 PUSH2 0x6BF JUMP JUMPDEST SWAP3 POP PUSH2 0x72B PUSH1 0x20 DUP6 ADD PUSH2 0x6BF JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x74C JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x755 DUP3 PUSH2 0x6BF JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x76D JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x776 DUP4 PUSH2 0x6BF JUMP JUMPDEST SWAP2 POP PUSH2 0x784 PUSH1 0x20 DUP5 ADD PUSH2 0x6BF JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x7A1 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x7BF JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x23E JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH22 0x5B225C52DC8DA0304DEACE4D1CECE361490373AB5743 0x28 MSIZE 0xD9 0x25 0xD3 MUL 0xB7 STOP 0xCB PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "1532:11312:4:-:0;;;1980:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2046:5;:13;2054:5;2046;:13;:::i;:::-;-1:-1:-1;2069:7:4;:17;2079:7;2069;:17;:::i;:::-;;1980:113;;1532:11312;;14:127:8;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:723;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;298:13;;-1:-1:-1;;;;;323:30:8;;320:56;;;356:18;;:::i;:::-;405:2;399:9;497:2;459:17;;-1:-1:-1;;455:31:8;;;488:2;451:40;447:54;435:67;;-1:-1:-1;;;;;517:34:8;;553:22;;;514:62;511:88;;;579:18;;:::i;:::-;615:2;608:22;639;;;680:19;;;701:4;676:30;673:39;-1:-1:-1;670:59:8;;;725:1;722;715:12;670:59;782:6;775:4;767:6;763:17;756:4;748:6;744:17;738:51;837:1;809:19;;;830:4;805:30;798:41;;;;813:6;146:723;-1:-1:-1;;;146:723:8:o;874:557::-;973:6;981;1034:2;1022:9;1013:7;1009:23;1005:32;1002:52;;;1050:1;1047;1040:12;1002:52;1077:16;;-1:-1:-1;;;;;1105:30:8;;1102:50;;;1148:1;1145;1138:12;1102:50;1171:61;1224:7;1215:6;1204:9;1200:22;1171:61;:::i;:::-;1278:2;1263:18;;1257:25;1161:71;;-1:-1:-1;1257:25:8;-1:-1:-1;;;;;;1294:32:8;;1291:52;;;1339:1;1336;1329:12;1291:52;1362:63;1417:7;1406:8;1395:9;1391:24;1362:63;:::i;:::-;1352:73;;;874:557;;;;;:::o;1436:380::-;1515:1;1511:12;;;;1558;;;1579:61;;1633:4;1625:6;1621:17;1611:27;;1579:61;1686:2;1678:6;1675:14;1655:18;1652:38;1649:161;;1732:10;1727:3;1723:20;1720:1;1713:31;1767:4;1764:1;1757:15;1795:4;1792:1;1785:15;1649:161;;1436:380;;;:::o;1947:518::-;2049:2;2044:3;2041:11;2038:421;;;2085:5;2082:1;2075:16;2129:4;2126:1;2116:18;2199:2;2187:10;2183:19;2180:1;2176:27;2170:4;2166:38;2235:4;2223:10;2220:20;2217:47;;;-1:-1:-1;2258:4:8;2217:47;2313:2;2308:3;2304:12;2301:1;2297:20;2291:4;2287:31;2277:41;;2368:81;2386:2;2379:5;2376:13;2368:81;;;2445:1;2431:16;;2412:1;2401:13;2368:81;;;2372:3;;2038:421;1947:518;;;:::o;2641:1299::-;2761:10;;-1:-1:-1;;;;;2783:30:8;;2780:56;;;2816:18;;:::i;:::-;2845:97;2935:6;2895:38;2927:4;2921:11;2895:38;:::i;:::-;2889:4;2845:97;:::i;:::-;2991:4;3022:2;3011:14;;3039:1;3034:649;;;;3727:1;3744:6;3741:89;;;-1:-1:-1;3796:19:8;;;3790:26;3741:89;-1:-1:-1;;2598:1:8;2594:11;;;2590:24;2586:29;2576:40;2622:1;2618:11;;;2573:57;3843:81;;3004:930;;3034:649;1894:1;1887:14;;;1931:4;1918:18;;-1:-1:-1;;3070:20:8;;;3188:222;3202:7;3199:1;3196:14;3188:222;;;3284:19;;;3278:26;3263:42;;3391:4;3376:20;;;;3344:1;3332:14;;;;3218:12;3188:222;;;3192:3;3438:6;3429:7;3426:19;3423:201;;;3499:19;;;3493:26;-1:-1:-1;;3582:1:8;3578:14;;;3594:3;3574:24;3570:37;3566:42;3551:58;3536:74;;3423:201;-1:-1:-1;;;;3670:1:8;3654:14;;;3650:22;3637:36;;-1:-1:-1;2641:1299:8:o;:::-;1532:11312:4;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_afterTokenTransfer_1445": {
									"entryPoint": null,
									"id": 1445,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_1380": {
									"entryPoint": 845,
									"id": 1380,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_beforeTokenTransfer_1434": {
									"entryPoint": null,
									"id": 1434,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_msgSender_1561": {
									"entryPoint": null,
									"id": 1561,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_1423": {
									"entryPoint": 1136,
									"id": 1423,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_1206": {
									"entryPoint": 1256,
									"id": 1206,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_1001": {
									"entryPoint": 803,
									"id": 1001,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_1026": {
									"entryPoint": 555,
									"id": 1026,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_958": {
									"entryPoint": null,
									"id": 958,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_934": {
									"entryPoint": null,
									"id": 934,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@decreaseAllowance_1129": {
									"entryPoint": 663,
									"id": 1129,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@increaseAllowance_1088": {
									"entryPoint": 615,
									"id": 1088,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@name_914": {
									"entryPoint": 411,
									"id": 914,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@symbol_924": {
									"entryPoint": 648,
									"id": 924,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_944": {
									"entryPoint": null,
									"id": 944,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_1059": {
									"entryPoint": 580,
									"id": 1059,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_983": {
									"entryPoint": 790,
									"id": 983,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 1727,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1852,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 1884,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 1794,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 1754,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1674,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 1989,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 1933,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:5716:8",
										"nodeType": "YulBlock",
										"src": "0:5716:8",
										"statements": [
											{
												"nativeSrc": "6:3:8",
												"nodeType": "YulBlock",
												"src": "6:3:8",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "135:297:8",
													"nodeType": "YulBlock",
													"src": "135:297:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "152:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "152:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "163:2:8",
																		"nodeType": "YulLiteral",
																		"src": "163:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "145:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "145:6:8"
																},
																"nativeSrc": "145:21:8",
																"nodeType": "YulFunctionCall",
																"src": "145:21:8"
															},
															"nativeSrc": "145:21:8",
															"nodeType": "YulExpressionStatement",
															"src": "145:21:8"
														},
														{
															"nativeSrc": "175:27:8",
															"nodeType": "YulVariableDeclaration",
															"src": "175:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "195:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "195:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "189:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "189:5:8"
																},
																"nativeSrc": "189:13:8",
																"nodeType": "YulFunctionCall",
																"src": "189:13:8"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "179:6:8",
																	"nodeType": "YulTypedName",
																	"src": "179:6:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "222:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "222:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "233:2:8",
																				"nodeType": "YulLiteral",
																				"src": "233:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "218:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "218:3:8"
																		},
																		"nativeSrc": "218:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "218:18:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "238:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "238:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "211:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "211:6:8"
																},
																"nativeSrc": "211:34:8",
																"nodeType": "YulFunctionCall",
																"src": "211:34:8"
															},
															"nativeSrc": "211:34:8",
															"nodeType": "YulExpressionStatement",
															"src": "211:34:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "264:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "264:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "275:2:8",
																				"nodeType": "YulLiteral",
																				"src": "275:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "260:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "260:3:8"
																		},
																		"nativeSrc": "260:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "260:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "284:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "284:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "292:2:8",
																				"nodeType": "YulLiteral",
																				"src": "292:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "280:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "280:3:8"
																		},
																		"nativeSrc": "280:15:8",
																		"nodeType": "YulFunctionCall",
																		"src": "280:15:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "297:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "297:6:8"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "254:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "254:5:8"
																},
																"nativeSrc": "254:50:8",
																"nodeType": "YulFunctionCall",
																"src": "254:50:8"
															},
															"nativeSrc": "254:50:8",
															"nodeType": "YulExpressionStatement",
															"src": "254:50:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "328:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "328:9:8"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "339:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "339:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "324:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "324:3:8"
																				},
																				"nativeSrc": "324:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "324:22:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "348:2:8",
																				"nodeType": "YulLiteral",
																				"src": "348:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "320:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "320:3:8"
																		},
																		"nativeSrc": "320:31:8",
																		"nodeType": "YulFunctionCall",
																		"src": "320:31:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "353:1:8",
																		"nodeType": "YulLiteral",
																		"src": "353:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "313:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "313:6:8"
																},
																"nativeSrc": "313:42:8",
																"nodeType": "YulFunctionCall",
																"src": "313:42:8"
															},
															"nativeSrc": "313:42:8",
															"nodeType": "YulExpressionStatement",
															"src": "313:42:8"
														},
														{
															"nativeSrc": "364:62:8",
															"nodeType": "YulAssignment",
															"src": "364:62:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "380:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "380:9:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nativeSrc": "399:6:8",
																								"nodeType": "YulIdentifier",
																								"src": "399:6:8"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "407:2:8",
																								"nodeType": "YulLiteral",
																								"src": "407:2:8",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "395:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "395:3:8"
																						},
																						"nativeSrc": "395:15:8",
																						"nodeType": "YulFunctionCall",
																						"src": "395:15:8"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "416:2:8",
																								"nodeType": "YulLiteral",
																								"src": "416:2:8",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nativeSrc": "412:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "412:3:8"
																						},
																						"nativeSrc": "412:7:8",
																						"nodeType": "YulFunctionCall",
																						"src": "412:7:8"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "391:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "391:3:8"
																				},
																				"nativeSrc": "391:29:8",
																				"nodeType": "YulFunctionCall",
																				"src": "391:29:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "376:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "376:3:8"
																		},
																		"nativeSrc": "376:45:8",
																		"nodeType": "YulFunctionCall",
																		"src": "376:45:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "423:2:8",
																		"nodeType": "YulLiteral",
																		"src": "423:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "372:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "372:3:8"
																},
																"nativeSrc": "372:54:8",
																"nodeType": "YulFunctionCall",
																"src": "372:54:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "364:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "364:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14:418:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "104:9:8",
														"nodeType": "YulTypedName",
														"src": "104:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "115:6:8",
														"nodeType": "YulTypedName",
														"src": "115:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "126:4:8",
														"nodeType": "YulTypedName",
														"src": "126:4:8",
														"type": ""
													}
												],
												"src": "14:418:8"
											},
											{
												"body": {
													"nativeSrc": "486:124:8",
													"nodeType": "YulBlock",
													"src": "486:124:8",
													"statements": [
														{
															"nativeSrc": "496:29:8",
															"nodeType": "YulAssignment",
															"src": "496:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "518:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "518:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "505:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "505:12:8"
																},
																"nativeSrc": "505:20:8",
																"nodeType": "YulFunctionCall",
																"src": "505:20:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "496:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "496:5:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "588:16:8",
																"nodeType": "YulBlock",
																"src": "588:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "597:1:8",
																					"nodeType": "YulLiteral",
																					"src": "597:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "600:1:8",
																					"nodeType": "YulLiteral",
																					"src": "600:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "590:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "590:6:8"
																			},
																			"nativeSrc": "590:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "590:12:8"
																		},
																		"nativeSrc": "590:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "590:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "547:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "547:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "558:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "558:5:8"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "573:3:8",
																										"nodeType": "YulLiteral",
																										"src": "573:3:8",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "578:1:8",
																										"nodeType": "YulLiteral",
																										"src": "578:1:8",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "569:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "569:3:8"
																								},
																								"nativeSrc": "569:11:8",
																								"nodeType": "YulFunctionCall",
																								"src": "569:11:8"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "582:1:8",
																								"nodeType": "YulLiteral",
																								"src": "582:1:8",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "565:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "565:3:8"
																						},
																						"nativeSrc": "565:19:8",
																						"nodeType": "YulFunctionCall",
																						"src": "565:19:8"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "554:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "554:3:8"
																				},
																				"nativeSrc": "554:31:8",
																				"nodeType": "YulFunctionCall",
																				"src": "554:31:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "544:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "544:2:8"
																		},
																		"nativeSrc": "544:42:8",
																		"nodeType": "YulFunctionCall",
																		"src": "544:42:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "537:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "537:6:8"
																},
																"nativeSrc": "537:50:8",
																"nodeType": "YulFunctionCall",
																"src": "537:50:8"
															},
															"nativeSrc": "534:70:8",
															"nodeType": "YulIf",
															"src": "534:70:8"
														}
													]
												},
												"name": "abi_decode_address",
												"nativeSrc": "437:173:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "465:6:8",
														"nodeType": "YulTypedName",
														"src": "465:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "476:5:8",
														"nodeType": "YulTypedName",
														"src": "476:5:8",
														"type": ""
													}
												],
												"src": "437:173:8"
											},
											{
												"body": {
													"nativeSrc": "702:213:8",
													"nodeType": "YulBlock",
													"src": "702:213:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "748:16:8",
																"nodeType": "YulBlock",
																"src": "748:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "757:1:8",
																					"nodeType": "YulLiteral",
																					"src": "757:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "760:1:8",
																					"nodeType": "YulLiteral",
																					"src": "760:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "750:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "750:6:8"
																			},
																			"nativeSrc": "750:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "750:12:8"
																		},
																		"nativeSrc": "750:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "750:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "723:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "723:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "732:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "732:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "719:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "719:3:8"
																		},
																		"nativeSrc": "719:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "719:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "744:2:8",
																		"nodeType": "YulLiteral",
																		"src": "744:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "715:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "715:3:8"
																},
																"nativeSrc": "715:32:8",
																"nodeType": "YulFunctionCall",
																"src": "715:32:8"
															},
															"nativeSrc": "712:52:8",
															"nodeType": "YulIf",
															"src": "712:52:8"
														},
														{
															"nativeSrc": "773:39:8",
															"nodeType": "YulAssignment",
															"src": "773:39:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "802:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "802:9:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "783:18:8",
																	"nodeType": "YulIdentifier",
																	"src": "783:18:8"
																},
																"nativeSrc": "783:29:8",
																"nodeType": "YulFunctionCall",
																"src": "783:29:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "773:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "773:6:8"
																}
															]
														},
														{
															"nativeSrc": "821:14:8",
															"nodeType": "YulVariableDeclaration",
															"src": "821:14:8",
															"value": {
																"kind": "number",
																"nativeSrc": "834:1:8",
																"nodeType": "YulLiteral",
																"src": "834:1:8",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "825:5:8",
																	"nodeType": "YulTypedName",
																	"src": "825:5:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "844:41:8",
															"nodeType": "YulAssignment",
															"src": "844:41:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "870:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "870:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "881:2:8",
																				"nodeType": "YulLiteral",
																				"src": "881:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "866:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "866:3:8"
																		},
																		"nativeSrc": "866:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "866:18:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "853:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "853:12:8"
																},
																"nativeSrc": "853:32:8",
																"nodeType": "YulFunctionCall",
																"src": "853:32:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "844:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "844:5:8"
																}
															]
														},
														{
															"nativeSrc": "894:15:8",
															"nodeType": "YulAssignment",
															"src": "894:15:8",
															"value": {
																"name": "value",
																"nativeSrc": "904:5:8",
																"nodeType": "YulIdentifier",
																"src": "904:5:8"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "894:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "894:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "615:300:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "660:9:8",
														"nodeType": "YulTypedName",
														"src": "660:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "671:7:8",
														"nodeType": "YulTypedName",
														"src": "671:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "683:6:8",
														"nodeType": "YulTypedName",
														"src": "683:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "691:6:8",
														"nodeType": "YulTypedName",
														"src": "691:6:8",
														"type": ""
													}
												],
												"src": "615:300:8"
											},
											{
												"body": {
													"nativeSrc": "1015:92:8",
													"nodeType": "YulBlock",
													"src": "1015:92:8",
													"statements": [
														{
															"nativeSrc": "1025:26:8",
															"nodeType": "YulAssignment",
															"src": "1025:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1037:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "1037:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1048:2:8",
																		"nodeType": "YulLiteral",
																		"src": "1048:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1033:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "1033:3:8"
																},
																"nativeSrc": "1033:18:8",
																"nodeType": "YulFunctionCall",
																"src": "1033:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1025:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "1025:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1067:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "1067:9:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "1092:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "1092:6:8"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "1085:6:8",
																					"nodeType": "YulIdentifier",
																					"src": "1085:6:8"
																				},
																				"nativeSrc": "1085:14:8",
																				"nodeType": "YulFunctionCall",
																				"src": "1085:14:8"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1078:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "1078:6:8"
																		},
																		"nativeSrc": "1078:22:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1078:22:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1060:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1060:6:8"
																},
																"nativeSrc": "1060:41:8",
																"nodeType": "YulFunctionCall",
																"src": "1060:41:8"
															},
															"nativeSrc": "1060:41:8",
															"nodeType": "YulExpressionStatement",
															"src": "1060:41:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "920:187:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "984:9:8",
														"nodeType": "YulTypedName",
														"src": "984:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "995:6:8",
														"nodeType": "YulTypedName",
														"src": "995:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1006:4:8",
														"nodeType": "YulTypedName",
														"src": "1006:4:8",
														"type": ""
													}
												],
												"src": "920:187:8"
											},
											{
												"body": {
													"nativeSrc": "1213:76:8",
													"nodeType": "YulBlock",
													"src": "1213:76:8",
													"statements": [
														{
															"nativeSrc": "1223:26:8",
															"nodeType": "YulAssignment",
															"src": "1223:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1235:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "1235:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1246:2:8",
																		"nodeType": "YulLiteral",
																		"src": "1246:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1231:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "1231:3:8"
																},
																"nativeSrc": "1231:18:8",
																"nodeType": "YulFunctionCall",
																"src": "1231:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1223:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "1223:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1265:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "1265:9:8"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "1276:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "1276:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1258:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1258:6:8"
																},
																"nativeSrc": "1258:25:8",
																"nodeType": "YulFunctionCall",
																"src": "1258:25:8"
															},
															"nativeSrc": "1258:25:8",
															"nodeType": "YulExpressionStatement",
															"src": "1258:25:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "1112:177:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1182:9:8",
														"nodeType": "YulTypedName",
														"src": "1182:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1193:6:8",
														"nodeType": "YulTypedName",
														"src": "1193:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1204:4:8",
														"nodeType": "YulTypedName",
														"src": "1204:4:8",
														"type": ""
													}
												],
												"src": "1112:177:8"
											},
											{
												"body": {
													"nativeSrc": "1398:270:8",
													"nodeType": "YulBlock",
													"src": "1398:270:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "1444:16:8",
																"nodeType": "YulBlock",
																"src": "1444:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1453:1:8",
																					"nodeType": "YulLiteral",
																					"src": "1453:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1456:1:8",
																					"nodeType": "YulLiteral",
																					"src": "1456:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1446:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "1446:6:8"
																			},
																			"nativeSrc": "1446:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "1446:12:8"
																		},
																		"nativeSrc": "1446:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "1446:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1419:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "1419:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1428:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "1428:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1415:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1415:3:8"
																		},
																		"nativeSrc": "1415:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1415:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1440:2:8",
																		"nodeType": "YulLiteral",
																		"src": "1440:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1411:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "1411:3:8"
																},
																"nativeSrc": "1411:32:8",
																"nodeType": "YulFunctionCall",
																"src": "1411:32:8"
															},
															"nativeSrc": "1408:52:8",
															"nodeType": "YulIf",
															"src": "1408:52:8"
														},
														{
															"nativeSrc": "1469:39:8",
															"nodeType": "YulAssignment",
															"src": "1469:39:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1498:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "1498:9:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1479:18:8",
																	"nodeType": "YulIdentifier",
																	"src": "1479:18:8"
																},
																"nativeSrc": "1479:29:8",
																"nodeType": "YulFunctionCall",
																"src": "1479:29:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1469:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1469:6:8"
																}
															]
														},
														{
															"nativeSrc": "1517:48:8",
															"nodeType": "YulAssignment",
															"src": "1517:48:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1550:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "1550:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1561:2:8",
																				"nodeType": "YulLiteral",
																				"src": "1561:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1546:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1546:3:8"
																		},
																		"nativeSrc": "1546:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1546:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1527:18:8",
																	"nodeType": "YulIdentifier",
																	"src": "1527:18:8"
																},
																"nativeSrc": "1527:38:8",
																"nodeType": "YulFunctionCall",
																"src": "1527:38:8"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1517:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1517:6:8"
																}
															]
														},
														{
															"nativeSrc": "1574:14:8",
															"nodeType": "YulVariableDeclaration",
															"src": "1574:14:8",
															"value": {
																"kind": "number",
																"nativeSrc": "1587:1:8",
																"nodeType": "YulLiteral",
																"src": "1587:1:8",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "1578:5:8",
																	"nodeType": "YulTypedName",
																	"src": "1578:5:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1597:41:8",
															"nodeType": "YulAssignment",
															"src": "1597:41:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1623:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "1623:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1634:2:8",
																				"nodeType": "YulLiteral",
																				"src": "1634:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1619:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1619:3:8"
																		},
																		"nativeSrc": "1619:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1619:18:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1606:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "1606:12:8"
																},
																"nativeSrc": "1606:32:8",
																"nodeType": "YulFunctionCall",
																"src": "1606:32:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1597:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "1597:5:8"
																}
															]
														},
														{
															"nativeSrc": "1647:15:8",
															"nodeType": "YulAssignment",
															"src": "1647:15:8",
															"value": {
																"name": "value",
																"nativeSrc": "1657:5:8",
																"nodeType": "YulIdentifier",
																"src": "1657:5:8"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "1647:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1647:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "1294:374:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1348:9:8",
														"nodeType": "YulTypedName",
														"src": "1348:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1359:7:8",
														"nodeType": "YulTypedName",
														"src": "1359:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1371:6:8",
														"nodeType": "YulTypedName",
														"src": "1371:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1379:6:8",
														"nodeType": "YulTypedName",
														"src": "1379:6:8",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1387:6:8",
														"nodeType": "YulTypedName",
														"src": "1387:6:8",
														"type": ""
													}
												],
												"src": "1294:374:8"
											},
											{
												"body": {
													"nativeSrc": "1770:87:8",
													"nodeType": "YulBlock",
													"src": "1770:87:8",
													"statements": [
														{
															"nativeSrc": "1780:26:8",
															"nodeType": "YulAssignment",
															"src": "1780:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1792:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "1792:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1803:2:8",
																		"nodeType": "YulLiteral",
																		"src": "1803:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1788:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "1788:3:8"
																},
																"nativeSrc": "1788:18:8",
																"nodeType": "YulFunctionCall",
																"src": "1788:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1780:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "1780:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1822:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "1822:9:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "1837:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "1837:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1845:4:8",
																				"nodeType": "YulLiteral",
																				"src": "1845:4:8",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1833:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1833:3:8"
																		},
																		"nativeSrc": "1833:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1833:17:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1815:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1815:6:8"
																},
																"nativeSrc": "1815:36:8",
																"nodeType": "YulFunctionCall",
																"src": "1815:36:8"
															},
															"nativeSrc": "1815:36:8",
															"nodeType": "YulExpressionStatement",
															"src": "1815:36:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "1673:184:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1739:9:8",
														"nodeType": "YulTypedName",
														"src": "1739:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1750:6:8",
														"nodeType": "YulTypedName",
														"src": "1750:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1761:4:8",
														"nodeType": "YulTypedName",
														"src": "1761:4:8",
														"type": ""
													}
												],
												"src": "1673:184:8"
											},
											{
												"body": {
													"nativeSrc": "1932:116:8",
													"nodeType": "YulBlock",
													"src": "1932:116:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "1978:16:8",
																"nodeType": "YulBlock",
																"src": "1978:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1987:1:8",
																					"nodeType": "YulLiteral",
																					"src": "1987:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1990:1:8",
																					"nodeType": "YulLiteral",
																					"src": "1990:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1980:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "1980:6:8"
																			},
																			"nativeSrc": "1980:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "1980:12:8"
																		},
																		"nativeSrc": "1980:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "1980:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1953:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "1953:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1962:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "1962:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1949:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1949:3:8"
																		},
																		"nativeSrc": "1949:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1949:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1974:2:8",
																		"nodeType": "YulLiteral",
																		"src": "1974:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1945:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "1945:3:8"
																},
																"nativeSrc": "1945:32:8",
																"nodeType": "YulFunctionCall",
																"src": "1945:32:8"
															},
															"nativeSrc": "1942:52:8",
															"nodeType": "YulIf",
															"src": "1942:52:8"
														},
														{
															"nativeSrc": "2003:39:8",
															"nodeType": "YulAssignment",
															"src": "2003:39:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2032:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "2032:9:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2013:18:8",
																	"nodeType": "YulIdentifier",
																	"src": "2013:18:8"
																},
																"nativeSrc": "2013:29:8",
																"nodeType": "YulFunctionCall",
																"src": "2013:29:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2003:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2003:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "1862:186:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1898:9:8",
														"nodeType": "YulTypedName",
														"src": "1898:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1909:7:8",
														"nodeType": "YulTypedName",
														"src": "1909:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1921:6:8",
														"nodeType": "YulTypedName",
														"src": "1921:6:8",
														"type": ""
													}
												],
												"src": "1862:186:8"
											},
											{
												"body": {
													"nativeSrc": "2140:173:8",
													"nodeType": "YulBlock",
													"src": "2140:173:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "2186:16:8",
																"nodeType": "YulBlock",
																"src": "2186:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2195:1:8",
																					"nodeType": "YulLiteral",
																					"src": "2195:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2198:1:8",
																					"nodeType": "YulLiteral",
																					"src": "2198:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2188:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "2188:6:8"
																			},
																			"nativeSrc": "2188:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2188:12:8"
																		},
																		"nativeSrc": "2188:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "2188:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2161:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "2161:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2170:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "2170:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2157:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "2157:3:8"
																		},
																		"nativeSrc": "2157:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2157:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2182:2:8",
																		"nodeType": "YulLiteral",
																		"src": "2182:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2153:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "2153:3:8"
																},
																"nativeSrc": "2153:32:8",
																"nodeType": "YulFunctionCall",
																"src": "2153:32:8"
															},
															"nativeSrc": "2150:52:8",
															"nodeType": "YulIf",
															"src": "2150:52:8"
														},
														{
															"nativeSrc": "2211:39:8",
															"nodeType": "YulAssignment",
															"src": "2211:39:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2240:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "2240:9:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2221:18:8",
																	"nodeType": "YulIdentifier",
																	"src": "2221:18:8"
																},
																"nativeSrc": "2221:29:8",
																"nodeType": "YulFunctionCall",
																"src": "2221:29:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2211:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2211:6:8"
																}
															]
														},
														{
															"nativeSrc": "2259:48:8",
															"nodeType": "YulAssignment",
															"src": "2259:48:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2292:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "2292:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2303:2:8",
																				"nodeType": "YulLiteral",
																				"src": "2303:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2288:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "2288:3:8"
																		},
																		"nativeSrc": "2288:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2288:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2269:18:8",
																	"nodeType": "YulIdentifier",
																	"src": "2269:18:8"
																},
																"nativeSrc": "2269:38:8",
																"nodeType": "YulFunctionCall",
																"src": "2269:38:8"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "2259:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2259:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "2053:260:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2098:9:8",
														"nodeType": "YulTypedName",
														"src": "2098:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2109:7:8",
														"nodeType": "YulTypedName",
														"src": "2109:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2121:6:8",
														"nodeType": "YulTypedName",
														"src": "2121:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2129:6:8",
														"nodeType": "YulTypedName",
														"src": "2129:6:8",
														"type": ""
													}
												],
												"src": "2053:260:8"
											},
											{
												"body": {
													"nativeSrc": "2373:325:8",
													"nodeType": "YulBlock",
													"src": "2373:325:8",
													"statements": [
														{
															"nativeSrc": "2383:22:8",
															"nodeType": "YulAssignment",
															"src": "2383:22:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2397:1:8",
																		"nodeType": "YulLiteral",
																		"src": "2397:1:8",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "2400:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "2400:4:8"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "2393:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "2393:3:8"
																},
																"nativeSrc": "2393:12:8",
																"nodeType": "YulFunctionCall",
																"src": "2393:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "2383:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2383:6:8"
																}
															]
														},
														{
															"nativeSrc": "2414:38:8",
															"nodeType": "YulVariableDeclaration",
															"src": "2414:38:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "2444:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "2444:4:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2450:1:8",
																		"nodeType": "YulLiteral",
																		"src": "2450:1:8",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2440:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "2440:3:8"
																},
																"nativeSrc": "2440:12:8",
																"nodeType": "YulFunctionCall",
																"src": "2440:12:8"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "2418:18:8",
																	"nodeType": "YulTypedName",
																	"src": "2418:18:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2491:31:8",
																"nodeType": "YulBlock",
																"src": "2491:31:8",
																"statements": [
																	{
																		"nativeSrc": "2493:27:8",
																		"nodeType": "YulAssignment",
																		"src": "2493:27:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "2507:6:8",
																					"nodeType": "YulIdentifier",
																					"src": "2507:6:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2515:4:8",
																					"nodeType": "YulLiteral",
																					"src": "2515:4:8",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "2503:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "2503:3:8"
																			},
																			"nativeSrc": "2503:17:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2503:17:8"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "2493:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "2493:6:8"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "2471:18:8",
																		"nodeType": "YulIdentifier",
																		"src": "2471:18:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2464:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2464:6:8"
																},
																"nativeSrc": "2464:26:8",
																"nodeType": "YulFunctionCall",
																"src": "2464:26:8"
															},
															"nativeSrc": "2461:61:8",
															"nodeType": "YulIf",
															"src": "2461:61:8"
														},
														{
															"body": {
																"nativeSrc": "2581:111:8",
																"nodeType": "YulBlock",
																"src": "2581:111:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2602:1:8",
																					"nodeType": "YulLiteral",
																					"src": "2602:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "2609:3:8",
																							"nodeType": "YulLiteral",
																							"src": "2609:3:8",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "2614:10:8",
																							"nodeType": "YulLiteral",
																							"src": "2614:10:8",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "2605:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "2605:3:8"
																					},
																					"nativeSrc": "2605:20:8",
																					"nodeType": "YulFunctionCall",
																					"src": "2605:20:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2595:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "2595:6:8"
																			},
																			"nativeSrc": "2595:31:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2595:31:8"
																		},
																		"nativeSrc": "2595:31:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "2595:31:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2646:1:8",
																					"nodeType": "YulLiteral",
																					"src": "2646:1:8",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2649:4:8",
																					"nodeType": "YulLiteral",
																					"src": "2649:4:8",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2639:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "2639:6:8"
																			},
																			"nativeSrc": "2639:15:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2639:15:8"
																		},
																		"nativeSrc": "2639:15:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "2639:15:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2674:1:8",
																					"nodeType": "YulLiteral",
																					"src": "2674:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2677:4:8",
																					"nodeType": "YulLiteral",
																					"src": "2677:4:8",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2667:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "2667:6:8"
																			},
																			"nativeSrc": "2667:15:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2667:15:8"
																		},
																		"nativeSrc": "2667:15:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "2667:15:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "2537:18:8",
																		"nodeType": "YulIdentifier",
																		"src": "2537:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2560:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "2560:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2568:2:8",
																				"nodeType": "YulLiteral",
																				"src": "2568:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "2557:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "2557:2:8"
																		},
																		"nativeSrc": "2557:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2557:14:8"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "2534:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "2534:2:8"
																},
																"nativeSrc": "2534:38:8",
																"nodeType": "YulFunctionCall",
																"src": "2534:38:8"
															},
															"nativeSrc": "2531:161:8",
															"nodeType": "YulIf",
															"src": "2531:161:8"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "2318:380:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "2353:4:8",
														"nodeType": "YulTypedName",
														"src": "2353:4:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "2362:6:8",
														"nodeType": "YulTypedName",
														"src": "2362:6:8",
														"type": ""
													}
												],
												"src": "2318:380:8"
											},
											{
												"body": {
													"nativeSrc": "2751:174:8",
													"nodeType": "YulBlock",
													"src": "2751:174:8",
													"statements": [
														{
															"nativeSrc": "2761:16:8",
															"nodeType": "YulAssignment",
															"src": "2761:16:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "2772:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "2772:1:8"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "2775:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "2775:1:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2768:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "2768:3:8"
																},
																"nativeSrc": "2768:9:8",
																"nodeType": "YulFunctionCall",
																"src": "2768:9:8"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "2761:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "2761:3:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2808:111:8",
																"nodeType": "YulBlock",
																"src": "2808:111:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2829:1:8",
																					"nodeType": "YulLiteral",
																					"src": "2829:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "2836:3:8",
																							"nodeType": "YulLiteral",
																							"src": "2836:3:8",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "2841:10:8",
																							"nodeType": "YulLiteral",
																							"src": "2841:10:8",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "2832:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "2832:3:8"
																					},
																					"nativeSrc": "2832:20:8",
																					"nodeType": "YulFunctionCall",
																					"src": "2832:20:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2822:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "2822:6:8"
																			},
																			"nativeSrc": "2822:31:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2822:31:8"
																		},
																		"nativeSrc": "2822:31:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "2822:31:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2873:1:8",
																					"nodeType": "YulLiteral",
																					"src": "2873:1:8",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2876:4:8",
																					"nodeType": "YulLiteral",
																					"src": "2876:4:8",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2866:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "2866:6:8"
																			},
																			"nativeSrc": "2866:15:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2866:15:8"
																		},
																		"nativeSrc": "2866:15:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "2866:15:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2901:1:8",
																					"nodeType": "YulLiteral",
																					"src": "2901:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2904:4:8",
																					"nodeType": "YulLiteral",
																					"src": "2904:4:8",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2894:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "2894:6:8"
																			},
																			"nativeSrc": "2894:15:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2894:15:8"
																		},
																		"nativeSrc": "2894:15:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "2894:15:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "2792:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "2792:1:8"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "2795:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "2795:3:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2789:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "2789:2:8"
																},
																"nativeSrc": "2789:10:8",
																"nodeType": "YulFunctionCall",
																"src": "2789:10:8"
															},
															"nativeSrc": "2786:133:8",
															"nodeType": "YulIf",
															"src": "2786:133:8"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "2703:222:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "2734:1:8",
														"nodeType": "YulTypedName",
														"src": "2734:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "2737:1:8",
														"nodeType": "YulTypedName",
														"src": "2737:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "2743:3:8",
														"nodeType": "YulTypedName",
														"src": "2743:3:8",
														"type": ""
													}
												],
												"src": "2703:222:8"
											},
											{
												"body": {
													"nativeSrc": "3104:227:8",
													"nodeType": "YulBlock",
													"src": "3104:227:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3121:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "3121:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3132:2:8",
																		"nodeType": "YulLiteral",
																		"src": "3132:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3114:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3114:6:8"
																},
																"nativeSrc": "3114:21:8",
																"nodeType": "YulFunctionCall",
																"src": "3114:21:8"
															},
															"nativeSrc": "3114:21:8",
															"nodeType": "YulExpressionStatement",
															"src": "3114:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3155:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "3155:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3166:2:8",
																				"nodeType": "YulLiteral",
																				"src": "3166:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3151:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3151:3:8"
																		},
																		"nativeSrc": "3151:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3151:18:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3171:2:8",
																		"nodeType": "YulLiteral",
																		"src": "3171:2:8",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3144:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3144:6:8"
																},
																"nativeSrc": "3144:30:8",
																"nodeType": "YulFunctionCall",
																"src": "3144:30:8"
															},
															"nativeSrc": "3144:30:8",
															"nodeType": "YulExpressionStatement",
															"src": "3144:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3194:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "3194:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3205:2:8",
																				"nodeType": "YulLiteral",
																				"src": "3205:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3190:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3190:3:8"
																		},
																		"nativeSrc": "3190:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3190:18:8"
																	},
																	{
																		"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77",
																		"kind": "string",
																		"nativeSrc": "3210:34:8",
																		"nodeType": "YulLiteral",
																		"src": "3210:34:8",
																		"type": "",
																		"value": "ERC20: decreased allowance below"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3183:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3183:6:8"
																},
																"nativeSrc": "3183:62:8",
																"nodeType": "YulFunctionCall",
																"src": "3183:62:8"
															},
															"nativeSrc": "3183:62:8",
															"nodeType": "YulExpressionStatement",
															"src": "3183:62:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3265:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "3265:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3276:2:8",
																				"nodeType": "YulLiteral",
																				"src": "3276:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3261:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3261:3:8"
																		},
																		"nativeSrc": "3261:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3261:18:8"
																	},
																	{
																		"hexValue": "207a65726f",
																		"kind": "string",
																		"nativeSrc": "3281:7:8",
																		"nodeType": "YulLiteral",
																		"src": "3281:7:8",
																		"type": "",
																		"value": " zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3254:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3254:6:8"
																},
																"nativeSrc": "3254:35:8",
																"nodeType": "YulFunctionCall",
																"src": "3254:35:8"
															},
															"nativeSrc": "3254:35:8",
															"nodeType": "YulExpressionStatement",
															"src": "3254:35:8"
														},
														{
															"nativeSrc": "3298:27:8",
															"nodeType": "YulAssignment",
															"src": "3298:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3310:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "3310:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3321:3:8",
																		"nodeType": "YulLiteral",
																		"src": "3321:3:8",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3306:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3306:3:8"
																},
																"nativeSrc": "3306:19:8",
																"nodeType": "YulFunctionCall",
																"src": "3306:19:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3298:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "3298:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "2930:401:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3081:9:8",
														"nodeType": "YulTypedName",
														"src": "3081:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3095:4:8",
														"nodeType": "YulTypedName",
														"src": "3095:4:8",
														"type": ""
													}
												],
												"src": "2930:401:8"
											},
											{
												"body": {
													"nativeSrc": "3510:226:8",
													"nodeType": "YulBlock",
													"src": "3510:226:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3527:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "3527:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3538:2:8",
																		"nodeType": "YulLiteral",
																		"src": "3538:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3520:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3520:6:8"
																},
																"nativeSrc": "3520:21:8",
																"nodeType": "YulFunctionCall",
																"src": "3520:21:8"
															},
															"nativeSrc": "3520:21:8",
															"nodeType": "YulExpressionStatement",
															"src": "3520:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3561:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "3561:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3572:2:8",
																				"nodeType": "YulLiteral",
																				"src": "3572:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3557:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3557:3:8"
																		},
																		"nativeSrc": "3557:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3557:18:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3577:2:8",
																		"nodeType": "YulLiteral",
																		"src": "3577:2:8",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3550:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3550:6:8"
																},
																"nativeSrc": "3550:30:8",
																"nodeType": "YulFunctionCall",
																"src": "3550:30:8"
															},
															"nativeSrc": "3550:30:8",
															"nodeType": "YulExpressionStatement",
															"src": "3550:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3600:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "3600:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3611:2:8",
																				"nodeType": "YulLiteral",
																				"src": "3611:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3596:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3596:3:8"
																		},
																		"nativeSrc": "3596:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3596:18:8"
																	},
																	{
																		"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f20616464",
																		"kind": "string",
																		"nativeSrc": "3616:34:8",
																		"nodeType": "YulLiteral",
																		"src": "3616:34:8",
																		"type": "",
																		"value": "ERC20: approve from the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3589:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3589:6:8"
																},
																"nativeSrc": "3589:62:8",
																"nodeType": "YulFunctionCall",
																"src": "3589:62:8"
															},
															"nativeSrc": "3589:62:8",
															"nodeType": "YulExpressionStatement",
															"src": "3589:62:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3671:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "3671:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3682:2:8",
																				"nodeType": "YulLiteral",
																				"src": "3682:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3667:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3667:3:8"
																		},
																		"nativeSrc": "3667:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3667:18:8"
																	},
																	{
																		"hexValue": "72657373",
																		"kind": "string",
																		"nativeSrc": "3687:6:8",
																		"nodeType": "YulLiteral",
																		"src": "3687:6:8",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3660:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3660:6:8"
																},
																"nativeSrc": "3660:34:8",
																"nodeType": "YulFunctionCall",
																"src": "3660:34:8"
															},
															"nativeSrc": "3660:34:8",
															"nodeType": "YulExpressionStatement",
															"src": "3660:34:8"
														},
														{
															"nativeSrc": "3703:27:8",
															"nodeType": "YulAssignment",
															"src": "3703:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3715:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "3715:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3726:3:8",
																		"nodeType": "YulLiteral",
																		"src": "3726:3:8",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3711:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3711:3:8"
																},
																"nativeSrc": "3711:19:8",
																"nodeType": "YulFunctionCall",
																"src": "3711:19:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3703:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "3703:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "3336:400:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3487:9:8",
														"nodeType": "YulTypedName",
														"src": "3487:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3501:4:8",
														"nodeType": "YulTypedName",
														"src": "3501:4:8",
														"type": ""
													}
												],
												"src": "3336:400:8"
											},
											{
												"body": {
													"nativeSrc": "3915:224:8",
													"nodeType": "YulBlock",
													"src": "3915:224:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3932:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "3932:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3943:2:8",
																		"nodeType": "YulLiteral",
																		"src": "3943:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3925:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3925:6:8"
																},
																"nativeSrc": "3925:21:8",
																"nodeType": "YulFunctionCall",
																"src": "3925:21:8"
															},
															"nativeSrc": "3925:21:8",
															"nodeType": "YulExpressionStatement",
															"src": "3925:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3966:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "3966:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3977:2:8",
																				"nodeType": "YulLiteral",
																				"src": "3977:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3962:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3962:3:8"
																		},
																		"nativeSrc": "3962:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3962:18:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3982:2:8",
																		"nodeType": "YulLiteral",
																		"src": "3982:2:8",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3955:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3955:6:8"
																},
																"nativeSrc": "3955:30:8",
																"nodeType": "YulFunctionCall",
																"src": "3955:30:8"
															},
															"nativeSrc": "3955:30:8",
															"nodeType": "YulExpressionStatement",
															"src": "3955:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4005:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "4005:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4016:2:8",
																				"nodeType": "YulLiteral",
																				"src": "4016:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4001:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "4001:3:8"
																		},
																		"nativeSrc": "4001:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4001:18:8"
																	},
																	{
																		"hexValue": "45524332303a20617070726f766520746f20746865207a65726f206164647265",
																		"kind": "string",
																		"nativeSrc": "4021:34:8",
																		"nodeType": "YulLiteral",
																		"src": "4021:34:8",
																		"type": "",
																		"value": "ERC20: approve to the zero addre"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3994:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3994:6:8"
																},
																"nativeSrc": "3994:62:8",
																"nodeType": "YulFunctionCall",
																"src": "3994:62:8"
															},
															"nativeSrc": "3994:62:8",
															"nodeType": "YulExpressionStatement",
															"src": "3994:62:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4076:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "4076:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4087:2:8",
																				"nodeType": "YulLiteral",
																				"src": "4087:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4072:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "4072:3:8"
																		},
																		"nativeSrc": "4072:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4072:18:8"
																	},
																	{
																		"hexValue": "7373",
																		"kind": "string",
																		"nativeSrc": "4092:4:8",
																		"nodeType": "YulLiteral",
																		"src": "4092:4:8",
																		"type": "",
																		"value": "ss"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4065:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "4065:6:8"
																},
																"nativeSrc": "4065:32:8",
																"nodeType": "YulFunctionCall",
																"src": "4065:32:8"
															},
															"nativeSrc": "4065:32:8",
															"nodeType": "YulExpressionStatement",
															"src": "4065:32:8"
														},
														{
															"nativeSrc": "4106:27:8",
															"nodeType": "YulAssignment",
															"src": "4106:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4118:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "4118:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4129:3:8",
																		"nodeType": "YulLiteral",
																		"src": "4129:3:8",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4114:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "4114:3:8"
																},
																"nativeSrc": "4114:19:8",
																"nodeType": "YulFunctionCall",
																"src": "4114:19:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4106:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "4106:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "3741:398:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3892:9:8",
														"nodeType": "YulTypedName",
														"src": "3892:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3906:4:8",
														"nodeType": "YulTypedName",
														"src": "3906:4:8",
														"type": ""
													}
												],
												"src": "3741:398:8"
											},
											{
												"body": {
													"nativeSrc": "4318:179:8",
													"nodeType": "YulBlock",
													"src": "4318:179:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4335:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "4335:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4346:2:8",
																		"nodeType": "YulLiteral",
																		"src": "4346:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4328:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "4328:6:8"
																},
																"nativeSrc": "4328:21:8",
																"nodeType": "YulFunctionCall",
																"src": "4328:21:8"
															},
															"nativeSrc": "4328:21:8",
															"nodeType": "YulExpressionStatement",
															"src": "4328:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4369:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "4369:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4380:2:8",
																				"nodeType": "YulLiteral",
																				"src": "4380:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4365:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "4365:3:8"
																		},
																		"nativeSrc": "4365:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4365:18:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4385:2:8",
																		"nodeType": "YulLiteral",
																		"src": "4385:2:8",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4358:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "4358:6:8"
																},
																"nativeSrc": "4358:30:8",
																"nodeType": "YulFunctionCall",
																"src": "4358:30:8"
															},
															"nativeSrc": "4358:30:8",
															"nodeType": "YulExpressionStatement",
															"src": "4358:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4408:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "4408:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4419:2:8",
																				"nodeType": "YulLiteral",
																				"src": "4419:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4404:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "4404:3:8"
																		},
																		"nativeSrc": "4404:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4404:18:8"
																	},
																	{
																		"hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
																		"kind": "string",
																		"nativeSrc": "4424:31:8",
																		"nodeType": "YulLiteral",
																		"src": "4424:31:8",
																		"type": "",
																		"value": "ERC20: insufficient allowance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4397:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "4397:6:8"
																},
																"nativeSrc": "4397:59:8",
																"nodeType": "YulFunctionCall",
																"src": "4397:59:8"
															},
															"nativeSrc": "4397:59:8",
															"nodeType": "YulExpressionStatement",
															"src": "4397:59:8"
														},
														{
															"nativeSrc": "4465:26:8",
															"nodeType": "YulAssignment",
															"src": "4465:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4477:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "4477:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4488:2:8",
																		"nodeType": "YulLiteral",
																		"src": "4488:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4473:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "4473:3:8"
																},
																"nativeSrc": "4473:18:8",
																"nodeType": "YulFunctionCall",
																"src": "4473:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4465:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "4465:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4144:353:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4295:9:8",
														"nodeType": "YulTypedName",
														"src": "4295:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4309:4:8",
														"nodeType": "YulTypedName",
														"src": "4309:4:8",
														"type": ""
													}
												],
												"src": "4144:353:8"
											},
											{
												"body": {
													"nativeSrc": "4676:227:8",
													"nodeType": "YulBlock",
													"src": "4676:227:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4693:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "4693:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4704:2:8",
																		"nodeType": "YulLiteral",
																		"src": "4704:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4686:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "4686:6:8"
																},
																"nativeSrc": "4686:21:8",
																"nodeType": "YulFunctionCall",
																"src": "4686:21:8"
															},
															"nativeSrc": "4686:21:8",
															"nodeType": "YulExpressionStatement",
															"src": "4686:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4727:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "4727:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4738:2:8",
																				"nodeType": "YulLiteral",
																				"src": "4738:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4723:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "4723:3:8"
																		},
																		"nativeSrc": "4723:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4723:18:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4743:2:8",
																		"nodeType": "YulLiteral",
																		"src": "4743:2:8",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4716:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "4716:6:8"
																},
																"nativeSrc": "4716:30:8",
																"nodeType": "YulFunctionCall",
																"src": "4716:30:8"
															},
															"nativeSrc": "4716:30:8",
															"nodeType": "YulExpressionStatement",
															"src": "4716:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4766:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "4766:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4777:2:8",
																				"nodeType": "YulLiteral",
																				"src": "4777:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4762:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "4762:3:8"
																		},
																		"nativeSrc": "4762:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4762:18:8"
																	},
																	{
																		"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f206164",
																		"kind": "string",
																		"nativeSrc": "4782:34:8",
																		"nodeType": "YulLiteral",
																		"src": "4782:34:8",
																		"type": "",
																		"value": "ERC20: transfer from the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4755:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "4755:6:8"
																},
																"nativeSrc": "4755:62:8",
																"nodeType": "YulFunctionCall",
																"src": "4755:62:8"
															},
															"nativeSrc": "4755:62:8",
															"nodeType": "YulExpressionStatement",
															"src": "4755:62:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4837:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "4837:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4848:2:8",
																				"nodeType": "YulLiteral",
																				"src": "4848:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4833:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "4833:3:8"
																		},
																		"nativeSrc": "4833:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4833:18:8"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nativeSrc": "4853:7:8",
																		"nodeType": "YulLiteral",
																		"src": "4853:7:8",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4826:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "4826:6:8"
																},
																"nativeSrc": "4826:35:8",
																"nodeType": "YulFunctionCall",
																"src": "4826:35:8"
															},
															"nativeSrc": "4826:35:8",
															"nodeType": "YulExpressionStatement",
															"src": "4826:35:8"
														},
														{
															"nativeSrc": "4870:27:8",
															"nodeType": "YulAssignment",
															"src": "4870:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4882:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "4882:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4893:3:8",
																		"nodeType": "YulLiteral",
																		"src": "4893:3:8",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4878:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "4878:3:8"
																},
																"nativeSrc": "4878:19:8",
																"nodeType": "YulFunctionCall",
																"src": "4878:19:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4870:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "4870:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4502:401:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4653:9:8",
														"nodeType": "YulTypedName",
														"src": "4653:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4667:4:8",
														"nodeType": "YulTypedName",
														"src": "4667:4:8",
														"type": ""
													}
												],
												"src": "4502:401:8"
											},
											{
												"body": {
													"nativeSrc": "5082:225:8",
													"nodeType": "YulBlock",
													"src": "5082:225:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5099:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "5099:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5110:2:8",
																		"nodeType": "YulLiteral",
																		"src": "5110:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5092:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5092:6:8"
																},
																"nativeSrc": "5092:21:8",
																"nodeType": "YulFunctionCall",
																"src": "5092:21:8"
															},
															"nativeSrc": "5092:21:8",
															"nodeType": "YulExpressionStatement",
															"src": "5092:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5133:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "5133:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5144:2:8",
																				"nodeType": "YulLiteral",
																				"src": "5144:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5129:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "5129:3:8"
																		},
																		"nativeSrc": "5129:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5129:18:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5149:2:8",
																		"nodeType": "YulLiteral",
																		"src": "5149:2:8",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5122:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5122:6:8"
																},
																"nativeSrc": "5122:30:8",
																"nodeType": "YulFunctionCall",
																"src": "5122:30:8"
															},
															"nativeSrc": "5122:30:8",
															"nodeType": "YulExpressionStatement",
															"src": "5122:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5172:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "5172:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5183:2:8",
																				"nodeType": "YulLiteral",
																				"src": "5183:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5168:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "5168:3:8"
																		},
																		"nativeSrc": "5168:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5168:18:8"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472",
																		"kind": "string",
																		"nativeSrc": "5188:34:8",
																		"nodeType": "YulLiteral",
																		"src": "5188:34:8",
																		"type": "",
																		"value": "ERC20: transfer to the zero addr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5161:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5161:6:8"
																},
																"nativeSrc": "5161:62:8",
																"nodeType": "YulFunctionCall",
																"src": "5161:62:8"
															},
															"nativeSrc": "5161:62:8",
															"nodeType": "YulExpressionStatement",
															"src": "5161:62:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5243:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "5243:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5254:2:8",
																				"nodeType": "YulLiteral",
																				"src": "5254:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5239:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "5239:3:8"
																		},
																		"nativeSrc": "5239:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5239:18:8"
																	},
																	{
																		"hexValue": "657373",
																		"kind": "string",
																		"nativeSrc": "5259:5:8",
																		"nodeType": "YulLiteral",
																		"src": "5259:5:8",
																		"type": "",
																		"value": "ess"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5232:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5232:6:8"
																},
																"nativeSrc": "5232:33:8",
																"nodeType": "YulFunctionCall",
																"src": "5232:33:8"
															},
															"nativeSrc": "5232:33:8",
															"nodeType": "YulExpressionStatement",
															"src": "5232:33:8"
														},
														{
															"nativeSrc": "5274:27:8",
															"nodeType": "YulAssignment",
															"src": "5274:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5286:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "5286:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5297:3:8",
																		"nodeType": "YulLiteral",
																		"src": "5297:3:8",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5282:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "5282:3:8"
																},
																"nativeSrc": "5282:19:8",
																"nodeType": "YulFunctionCall",
																"src": "5282:19:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5274:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "5274:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4908:399:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5059:9:8",
														"nodeType": "YulTypedName",
														"src": "5059:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5073:4:8",
														"nodeType": "YulTypedName",
														"src": "5073:4:8",
														"type": ""
													}
												],
												"src": "4908:399:8"
											},
											{
												"body": {
													"nativeSrc": "5486:228:8",
													"nodeType": "YulBlock",
													"src": "5486:228:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5503:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "5503:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5514:2:8",
																		"nodeType": "YulLiteral",
																		"src": "5514:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5496:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5496:6:8"
																},
																"nativeSrc": "5496:21:8",
																"nodeType": "YulFunctionCall",
																"src": "5496:21:8"
															},
															"nativeSrc": "5496:21:8",
															"nodeType": "YulExpressionStatement",
															"src": "5496:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5537:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "5537:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5548:2:8",
																				"nodeType": "YulLiteral",
																				"src": "5548:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5533:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "5533:3:8"
																		},
																		"nativeSrc": "5533:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5533:18:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5553:2:8",
																		"nodeType": "YulLiteral",
																		"src": "5553:2:8",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5526:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5526:6:8"
																},
																"nativeSrc": "5526:30:8",
																"nodeType": "YulFunctionCall",
																"src": "5526:30:8"
															},
															"nativeSrc": "5526:30:8",
															"nodeType": "YulExpressionStatement",
															"src": "5526:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5576:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "5576:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5587:2:8",
																				"nodeType": "YulLiteral",
																				"src": "5587:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5572:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "5572:3:8"
																		},
																		"nativeSrc": "5572:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5572:18:8"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062",
																		"kind": "string",
																		"nativeSrc": "5592:34:8",
																		"nodeType": "YulLiteral",
																		"src": "5592:34:8",
																		"type": "",
																		"value": "ERC20: transfer amount exceeds b"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5565:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5565:6:8"
																},
																"nativeSrc": "5565:62:8",
																"nodeType": "YulFunctionCall",
																"src": "5565:62:8"
															},
															"nativeSrc": "5565:62:8",
															"nodeType": "YulExpressionStatement",
															"src": "5565:62:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5647:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "5647:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5658:2:8",
																				"nodeType": "YulLiteral",
																				"src": "5658:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5643:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "5643:3:8"
																		},
																		"nativeSrc": "5643:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5643:18:8"
																	},
																	{
																		"hexValue": "616c616e6365",
																		"kind": "string",
																		"nativeSrc": "5663:8:8",
																		"nodeType": "YulLiteral",
																		"src": "5663:8:8",
																		"type": "",
																		"value": "alance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5636:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5636:6:8"
																},
																"nativeSrc": "5636:36:8",
																"nodeType": "YulFunctionCall",
																"src": "5636:36:8"
															},
															"nativeSrc": "5636:36:8",
															"nodeType": "YulExpressionStatement",
															"src": "5636:36:8"
														},
														{
															"nativeSrc": "5681:27:8",
															"nodeType": "YulAssignment",
															"src": "5681:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5693:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "5693:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5704:3:8",
																		"nodeType": "YulLiteral",
																		"src": "5704:3:8",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5689:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "5689:3:8"
																},
																"nativeSrc": "5689:19:8",
																"nodeType": "YulFunctionCall",
																"src": "5689:19:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5681:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "5681:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5312:402:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5463:9:8",
														"nodeType": "YulTypedName",
														"src": "5463:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5477:4:8",
														"nodeType": "YulTypedName",
														"src": "5477:4:8",
														"type": ""
													}
												],
												"src": "5312:402:8"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        mcopy(add(headStart, 64), add(value0, 32), length)\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := 0\n        value := calldataload(add(headStart, 32))\n        value1 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        let value := 0\n        value := calldataload(add(headStart, 64))\n        value2 := value\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: decreased allowance below\")\n        mstore(add(headStart, 96), \" zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"ERC20: insufficient allowance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds b\")\n        mstore(add(headStart, 96), \"alance\")\n        tail := add(headStart, 128)\n    }\n}",
									"id": 8,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50600436106100a6575f3560e01c8063395093511161006e578063395093511461011f57806370a082311461013257806395d89b411461015a578063a457c2d714610162578063a9059cbb14610175578063dd62ed3e14610188575f80fd5b806306fdde03146100aa578063095ea7b3146100c857806318160ddd146100eb57806323b872dd146100fd578063313ce56714610110575b5f80fd5b6100b261019b565b6040516100bf919061068a565b60405180910390f35b6100db6100d63660046106da565b61022b565b60405190151581526020016100bf565b6002545b6040519081526020016100bf565b6100db61010b366004610702565b610244565b604051601281526020016100bf565b6100db61012d3660046106da565b610267565b6100ef61014036600461073c565b6001600160a01b03165f9081526020819052604090205490565b6100b2610288565b6100db6101703660046106da565b610297565b6100db6101833660046106da565b610316565b6100ef61019636600461075c565b610323565b6060600380546101aa9061078d565b80601f01602080910402602001604051908101604052809291908181526020018280546101d69061078d565b80156102215780601f106101f857610100808354040283529160200191610221565b820191905f5260205f20905b81548152906001019060200180831161020457829003601f168201915b5050505050905090565b5f3361023881858561034d565b60019150505b92915050565b5f33610251858285610470565b61025c8585856104e8565b506001949350505050565b5f336102388185856102798383610323565b61028391906107c5565b61034d565b6060600480546101aa9061078d565b5f33816102a48286610323565b9050838110156103095760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b61025c828686840361034d565b5f336102388185856104e8565b6001600160a01b039182165f90815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166103af5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610300565b6001600160a01b0382166104105760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610300565b6001600160a01b038381165f8181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b5f61047b8484610323565b90505f1981146104e257818110156104d55760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610300565b6104e2848484840361034d565b50505050565b6001600160a01b03831661054c5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610300565b6001600160a01b0382166105ae5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610300565b6001600160a01b0383165f90815260208190526040902054818110156106255760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610300565b6001600160a01b038481165f81815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a36104e2565b602081525f82518060208401528060208501604085015e5f604082850101526040601f19601f83011684010191505092915050565b80356001600160a01b03811681146106d5575f80fd5b919050565b5f80604083850312156106eb575f80fd5b6106f4836106bf565b946020939093013593505050565b5f805f60608486031215610714575f80fd5b61071d846106bf565b925061072b602085016106bf565b929592945050506040919091013590565b5f6020828403121561074c575f80fd5b610755826106bf565b9392505050565b5f806040838503121561076d575f80fd5b610776836106bf565b9150610784602084016106bf565b90509250929050565b600181811c908216806107a157607f821691505b6020821081036107bf57634e487b7160e01b5f52602260045260245ffd5b50919050565b8082018082111561023e57634e487b7160e01b5f52601160045260245ffdfea2646970667358221220755b225c52dc8da0304deace4d1cece361490373ab57432859d925d302b700cb64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA6 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x6E JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x11F JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x132 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x15A JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x162 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x175 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x188 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAA JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xC8 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xEB JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0xFD JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x110 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xB2 PUSH2 0x19B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBF SWAP2 SWAP1 PUSH2 0x68A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDB PUSH2 0xD6 CALLDATASIZE PUSH1 0x4 PUSH2 0x6DA JUMP JUMPDEST PUSH2 0x22B JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBF JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBF JUMP JUMPDEST PUSH2 0xDB PUSH2 0x10B CALLDATASIZE PUSH1 0x4 PUSH2 0x702 JUMP JUMPDEST PUSH2 0x244 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBF JUMP JUMPDEST PUSH2 0xDB PUSH2 0x12D CALLDATASIZE PUSH1 0x4 PUSH2 0x6DA JUMP JUMPDEST PUSH2 0x267 JUMP JUMPDEST PUSH2 0xEF PUSH2 0x140 CALLDATASIZE PUSH1 0x4 PUSH2 0x73C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xB2 PUSH2 0x288 JUMP JUMPDEST PUSH2 0xDB PUSH2 0x170 CALLDATASIZE PUSH1 0x4 PUSH2 0x6DA JUMP JUMPDEST PUSH2 0x297 JUMP JUMPDEST PUSH2 0xDB PUSH2 0x183 CALLDATASIZE PUSH1 0x4 PUSH2 0x6DA JUMP JUMPDEST PUSH2 0x316 JUMP JUMPDEST PUSH2 0xEF PUSH2 0x196 CALLDATASIZE PUSH1 0x4 PUSH2 0x75C JUMP JUMPDEST PUSH2 0x323 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x1AA SWAP1 PUSH2 0x78D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1D6 SWAP1 PUSH2 0x78D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x221 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1F8 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x221 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x204 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x238 DUP2 DUP6 DUP6 PUSH2 0x34D JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x251 DUP6 DUP3 DUP6 PUSH2 0x470 JUMP JUMPDEST PUSH2 0x25C DUP6 DUP6 DUP6 PUSH2 0x4E8 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x238 DUP2 DUP6 DUP6 PUSH2 0x279 DUP4 DUP4 PUSH2 0x323 JUMP JUMPDEST PUSH2 0x283 SWAP2 SWAP1 PUSH2 0x7C5 JUMP JUMPDEST PUSH2 0x34D JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x1AA SWAP1 PUSH2 0x78D JUMP JUMPDEST PUSH0 CALLER DUP2 PUSH2 0x2A4 DUP3 DUP7 PUSH2 0x323 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x309 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x25C DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x34D JUMP JUMPDEST PUSH0 CALLER PUSH2 0x238 DUP2 DUP6 DUP6 PUSH2 0x4E8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x3AF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x300 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x410 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x300 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x47B DUP5 DUP5 PUSH2 0x323 JUMP JUMPDEST SWAP1 POP PUSH0 NOT DUP2 EQ PUSH2 0x4E2 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x4D5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x300 JUMP JUMPDEST PUSH2 0x4E2 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x34D JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x54C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x300 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5AE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x300 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x625 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x300 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP8 DUP8 SUB SWAP1 SSTORE SWAP4 DUP8 AND DUP1 DUP4 MSTORE SWAP2 DUP5 SWAP1 KECCAK256 DUP1 SLOAD DUP8 ADD SWAP1 SSTORE SWAP3 MLOAD DUP6 DUP2 MSTORE SWAP1 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x4E2 JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE DUP1 PUSH1 0x20 DUP6 ADD PUSH1 0x40 DUP6 ADD MCOPY PUSH0 PUSH1 0x40 DUP3 DUP6 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP5 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x6D5 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x6EB JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x6F4 DUP4 PUSH2 0x6BF JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x714 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x71D DUP5 PUSH2 0x6BF JUMP JUMPDEST SWAP3 POP PUSH2 0x72B PUSH1 0x20 DUP6 ADD PUSH2 0x6BF JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x74C JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x755 DUP3 PUSH2 0x6BF JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x76D JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x776 DUP4 PUSH2 0x6BF JUMP JUMPDEST SWAP2 POP PUSH2 0x784 PUSH1 0x20 DUP5 ADD PUSH2 0x6BF JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x7A1 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x7BF JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x23E JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH22 0x5B225C52DC8DA0304DEACE4D1CECE361490373AB5743 0x28 MSIZE 0xD9 0x25 0xD3 MUL 0xB7 STOP 0xCB PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "1532:11312:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2158:98;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4444:197;;;;;;:::i;:::-;;:::i;:::-;;;1085:14:8;;1078:22;1060:41;;1048:2;1033:18;4444:197:4;920:187:8;3255:106:4;3342:12;;3255:106;;;1258:25:8;;;1246:2;1231:18;3255:106:4;1112:177:8;5203:256:4;;;;;;:::i;:::-;;:::i;3104:91::-;;;3186:2;1815:36:8;;1803:2;1788:18;3104:91:4;1673:184:8;5854:234:4;;;;;;:::i;:::-;;:::i;3419:125::-;;;;;;:::i;:::-;-1:-1:-1;;;;;3519:18:4;3493:7;3519:18;;;;;;;;;;;;3419:125;2369:102;;;:::i;6575:427::-;;;;;;:::i;:::-;;:::i;3740:189::-;;;;;;:::i;:::-;;:::i;3987:149::-;;;;;;:::i;:::-;;:::i;2158:98::-;2212:13;2244:5;2237:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2158:98;:::o;4444:197::-;4527:4;719:10:7;4581:32:4;719:10:7;4597:7:4;4606:6;4581:8;:32::i;:::-;4630:4;4623:11;;;4444:197;;;;;:::o;5203:256::-;5300:4;719:10:7;5356:38:4;5372:4;719:10:7;5387:6:4;5356:15;:38::i;:::-;5404:27;5414:4;5420:2;5424:6;5404:9;:27::i;:::-;-1:-1:-1;5448:4:4;;5203:256;-1:-1:-1;;;;5203:256:4:o;5854:234::-;5942:4;719:10:7;5996:64:4;719:10:7;6012:7:4;6049:10;6021:25;719:10:7;6012:7:4;6021:9;:25::i;:::-;:38;;;;:::i;:::-;5996:8;:64::i;2369:102::-;2425:13;2457:7;2450:14;;;;;:::i;6575:427::-;6668:4;719:10:7;6668:4:4;6749:25;719:10:7;6766:7:4;6749:9;:25::i;:::-;6722:52;;6812:15;6792:16;:35;;6784:85;;;;-1:-1:-1;;;6784:85:4;;3132:2:8;6784:85:4;;;3114:21:8;3171:2;3151:18;;;3144:30;3210:34;3190:18;;;3183:62;-1:-1:-1;;;3261:18:8;;;3254:35;3306:19;;6784:85:4;;;;;;;;;6903:60;6912:5;6919:7;6947:15;6928:16;:34;6903:8;:60::i;3740:189::-;3819:4;719:10:7;3873:28:4;719:10:7;3890:2:4;3894:6;3873:9;:28::i;3987:149::-;-1:-1:-1;;;;;4102:18:4;;;4076:7;4102:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3987:149::o;10457:340::-;-1:-1:-1;;;;;10558:19:4;;10550:68;;;;-1:-1:-1;;;10550:68:4;;3538:2:8;10550:68:4;;;3520:21:8;3577:2;3557:18;;;3550:30;3616:34;3596:18;;;3589:62;-1:-1:-1;;;3667:18:8;;;3660:34;3711:19;;10550:68:4;3336:400:8;10550:68:4;-1:-1:-1;;;;;10636:21:4;;10628:68;;;;-1:-1:-1;;;10628:68:4;;3943:2:8;10628:68:4;;;3925:21:8;3982:2;3962:18;;;3955:30;4021:34;4001:18;;;3994:62;-1:-1:-1;;;4072:18:8;;;4065:32;4114:19;;10628:68:4;3741:398:8;10628:68:4;-1:-1:-1;;;;;10707:18:4;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10758:32;;1258:25:8;;;10758:32:4;;1231:18:8;10758:32:4;;;;;;;10457:340;;;:::o;11078:411::-;11178:24;11205:25;11215:5;11222:7;11205:9;:25::i;:::-;11178:52;;-1:-1:-1;;11244:16:4;:37;11240:243;;11325:6;11305:16;:26;;11297:68;;;;-1:-1:-1;;;11297:68:4;;4346:2:8;11297:68:4;;;4328:21:8;4385:2;4365:18;;;4358:30;4424:31;4404:18;;;4397:59;4473:18;;11297:68:4;4144:353:8;11297:68:4;11407:51;11416:5;11423:7;11451:6;11432:16;:25;11407:8;:51::i;:::-;11168:321;11078:411;;;:::o;7456:788::-;-1:-1:-1;;;;;7552:18:4;;7544:68;;;;-1:-1:-1;;;7544:68:4;;4704:2:8;7544:68:4;;;4686:21:8;4743:2;4723:18;;;4716:30;4782:34;4762:18;;;4755:62;-1:-1:-1;;;4833:18:8;;;4826:35;4878:19;;7544:68:4;4502:401:8;7544:68:4;-1:-1:-1;;;;;7630:16:4;;7622:64;;;;-1:-1:-1;;;7622:64:4;;5110:2:8;7622:64:4;;;5092:21:8;5149:2;5129:18;;;5122:30;5188:34;5168:18;;;5161:62;-1:-1:-1;;;5239:18:8;;;5232:33;5282:19;;7622:64:4;4908:399:8;7622:64:4;-1:-1:-1;;;;;7768:15:4;;7746:19;7768:15;;;;;;;;;;;7801:21;;;;7793:72;;;;-1:-1:-1;;;7793:72:4;;5514:2:8;7793:72:4;;;5496:21:8;5553:2;5533:18;;;5526:30;5592:34;5572:18;;;5565:62;-1:-1:-1;;;5643:18:8;;;5636:36;5689:19;;7793:72:4;5312:402:8;7793:72:4;-1:-1:-1;;;;;7899:15:4;;;:9;:15;;;;;;;;;;;7917:20;;;7899:38;;8114:13;;;;;;;;;;:23;;;;;;8163:26;;1258:25:8;;;8114:13:4;;8163:26;;1231:18:8;8163:26:4;;;;;;;8200:37;12073:91;14:418:8;163:2;152:9;145:21;126:4;195:6;189:13;238:6;233:2;222:9;218:18;211:34;297:6;292:2;284:6;280:15;275:2;264:9;260:18;254:50;353:1;348:2;339:6;328:9;324:22;320:31;313:42;423:2;416;412:7;407:2;399:6;395:15;391:29;380:9;376:45;372:54;364:62;;;14:418;;;;:::o;437:173::-;505:20;;-1:-1:-1;;;;;554:31:8;;544:42;;534:70;;600:1;597;590:12;534:70;437:173;;;:::o;615:300::-;683:6;691;744:2;732:9;723:7;719:23;715:32;712:52;;;760:1;757;750:12;712:52;783:29;802:9;783:29;:::i;:::-;773:39;881:2;866:18;;;;853:32;;-1:-1:-1;;;615:300:8:o;1294:374::-;1371:6;1379;1387;1440:2;1428:9;1419:7;1415:23;1411:32;1408:52;;;1456:1;1453;1446:12;1408:52;1479:29;1498:9;1479:29;:::i;:::-;1469:39;;1527:38;1561:2;1550:9;1546:18;1527:38;:::i;:::-;1294:374;;1517:48;;-1:-1:-1;;;1634:2:8;1619:18;;;;1606:32;;1294:374::o;1862:186::-;1921:6;1974:2;1962:9;1953:7;1949:23;1945:32;1942:52;;;1990:1;1987;1980:12;1942:52;2013:29;2032:9;2013:29;:::i;:::-;2003:39;1862:186;-1:-1:-1;;;1862:186:8:o;2053:260::-;2121:6;2129;2182:2;2170:9;2161:7;2157:23;2153:32;2150:52;;;2198:1;2195;2188:12;2150:52;2221:29;2240:9;2221:29;:::i;:::-;2211:39;;2269:38;2303:2;2292:9;2288:18;2269:38;:::i;:::-;2259:48;;2053:260;;;;;:::o;2318:380::-;2397:1;2393:12;;;;2440;;;2461:61;;2515:4;2507:6;2503:17;2493:27;;2461:61;2568:2;2560:6;2557:14;2537:18;2534:38;2531:161;;2614:10;2609:3;2605:20;2602:1;2595:31;2649:4;2646:1;2639:15;2677:4;2674:1;2667:15;2531:161;;2318:380;;;:::o;2703:222::-;2768:9;;;2789:10;;;2786:133;;;2841:10;2836:3;2832:20;2829:1;2822:31;2876:4;2873:1;2866:15;2904:4;2901:1;2894:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "414800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "24624",
								"balanceOf(address)": "2559",
								"decimals()": "265",
								"decreaseAllowance(address,uint256)": "27011",
								"increaseAllowance(address,uint256)": "infinite",
								"name()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2325",
								"transfer(address,uint256)": "51133",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_afterTokenTransfer(address,address,uint256)": "infinite",
								"_approve(address,address,uint256)": "infinite",
								"_beforeTokenTransfer(address,address,uint256)": "infinite",
								"_burn(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_spendAllowance(address,address,uint256)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1532,
									"end": 12844,
									"name": "PUSH",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "CALLVALUE",
									"source": 4
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "PUSHSIZE",
									"source": 4
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "CODESIZE",
									"source": 4
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "PUSHSIZE",
									"source": 4
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 1980,
									"end": 2093,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "tag",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2046,
									"end": 2051,
									"name": "PUSH",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 2046,
									"end": 2059,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "6"
								},
								{
									"begin": 2054,
									"end": 2059,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 2046,
									"end": 2051,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 2046,
									"end": 2059,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "7"
								},
								{
									"begin": 2046,
									"end": 2059,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 2046,
									"end": 2059,
									"name": "tag",
									"source": 4,
									"value": "6"
								},
								{
									"begin": 2046,
									"end": 2059,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2069,
									"end": 2076,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 2069,
									"end": 2086,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "8"
								},
								{
									"begin": 2079,
									"end": 2086,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 2069,
									"end": 2076,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 2069,
									"end": 2086,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "7"
								},
								{
									"begin": 2069,
									"end": 2086,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 2069,
									"end": 2086,
									"name": "tag",
									"source": 4,
									"value": "8"
								},
								{
									"begin": 2069,
									"end": 2086,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2069,
									"end": 2086,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "16"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 14,
									"end": 141,
									"name": "tag",
									"source": 8,
									"value": "10"
								},
								{
									"begin": 14,
									"end": 141,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 75,
									"end": 85,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B71"
								},
								{
									"begin": 70,
									"end": 73,
									"name": "PUSH",
									"source": 8,
									"value": "E0"
								},
								{
									"begin": 66,
									"end": 86,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": 63,
									"end": 64,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 87,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 106,
									"end": 110,
									"name": "PUSH",
									"source": 8,
									"value": "41"
								},
								{
									"begin": 103,
									"end": 104,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 96,
									"end": 111,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 130,
									"end": 134,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 127,
									"end": 128,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 120,
									"end": 135,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 146,
									"end": 869,
									"name": "tag",
									"source": 8,
									"value": "11"
								},
								{
									"begin": 146,
									"end": 869,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 200,
									"end": 205,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 253,
									"end": 256,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 246,
									"end": 250,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 238,
									"end": 244,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 234,
									"end": 251,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 230,
									"end": 257,
									"name": "SLT",
									"source": 8
								},
								{
									"begin": 220,
									"end": 275,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "19"
								},
								{
									"begin": 220,
									"end": 275,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 271,
									"end": 272,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 268,
									"end": 269,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 261,
									"end": 273,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 220,
									"end": 275,
									"name": "tag",
									"source": 8,
									"value": "19"
								},
								{
									"begin": 220,
									"end": 275,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 298,
									"end": 311,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 298,
									"end": 311,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 323,
									"end": 353,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 323,
									"end": 353,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 320,
									"end": 376,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 320,
									"end": 376,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "21"
								},
								{
									"begin": 320,
									"end": 376,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 356,
									"end": 374,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "21"
								},
								{
									"begin": 356,
									"end": 374,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "10"
								},
								{
									"begin": 356,
									"end": 374,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 356,
									"end": 374,
									"name": "tag",
									"source": 8,
									"value": "21"
								},
								{
									"begin": 356,
									"end": 374,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 405,
									"end": 407,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 399,
									"end": 408,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 497,
									"end": 499,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 459,
									"end": 476,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 459,
									"end": 476,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 455,
									"end": 486,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 455,
									"end": 486,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 455,
									"end": 486,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 488,
									"end": 490,
									"name": "PUSH",
									"source": 8,
									"value": "3F"
								},
								{
									"begin": 451,
									"end": 491,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 447,
									"end": 501,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 435,
									"end": 502,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 435,
									"end": 502,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 517,
									"end": 551,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 517,
									"end": 551,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 553,
									"end": 575,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 553,
									"end": 575,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 553,
									"end": 575,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 514,
									"end": 576,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 511,
									"end": 599,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 511,
									"end": 599,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "23"
								},
								{
									"begin": 511,
									"end": 599,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 579,
									"end": 597,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "23"
								},
								{
									"begin": 579,
									"end": 597,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "10"
								},
								{
									"begin": 579,
									"end": 597,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 579,
									"end": 597,
									"name": "tag",
									"source": 8,
									"value": "23"
								},
								{
									"begin": 579,
									"end": 597,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 615,
									"end": 617,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 608,
									"end": 630,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 639,
									"end": 661,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 639,
									"end": 661,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 639,
									"end": 661,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 680,
									"end": 699,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 680,
									"end": 699,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 680,
									"end": 699,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 701,
									"end": 705,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 676,
									"end": 706,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 673,
									"end": 712,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "LT",
									"source": -1
								},
								{
									"begin": 670,
									"end": 729,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 670,
									"end": 729,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 670,
									"end": 729,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 725,
									"end": 726,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 722,
									"end": 723,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 715,
									"end": 727,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 670,
									"end": 729,
									"name": "tag",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 670,
									"end": 729,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 782,
									"end": 788,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 775,
									"end": 779,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 767,
									"end": 773,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 763,
									"end": 780,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 756,
									"end": 760,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 748,
									"end": 754,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 744,
									"end": 761,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 738,
									"end": 789,
									"name": "MCOPY",
									"source": 8
								},
								{
									"begin": 837,
									"end": 838,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 809,
									"end": 828,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 809,
									"end": 828,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 809,
									"end": 828,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 830,
									"end": 834,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 805,
									"end": 835,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 798,
									"end": 839,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 798,
									"end": 839,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 798,
									"end": 839,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 798,
									"end": 839,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 813,
									"end": 819,
									"name": "SWAP4",
									"source": 8
								},
								{
									"begin": 146,
									"end": 869,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 146,
									"end": 869,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 874,
									"end": 1431,
									"name": "tag",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 874,
									"end": 1431,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 973,
									"end": 979,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 981,
									"end": 987,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1034,
									"end": 1036,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 1022,
									"end": 1031,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 1013,
									"end": 1020,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 1009,
									"end": 1032,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 1005,
									"end": 1037,
									"name": "SLT",
									"source": 8
								},
								{
									"begin": 1002,
									"end": 1054,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 1002,
									"end": 1054,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "26"
								},
								{
									"begin": 1002,
									"end": 1054,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1050,
									"end": 1051,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1047,
									"end": 1048,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1040,
									"end": 1052,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 1002,
									"end": 1054,
									"name": "tag",
									"source": 8,
									"value": "26"
								},
								{
									"begin": 1002,
									"end": 1054,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1077,
									"end": 1093,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1077,
									"end": 1093,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1105,
									"end": 1135,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1105,
									"end": 1135,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 1102,
									"end": 1152,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 1102,
									"end": 1152,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "27"
								},
								{
									"begin": 1102,
									"end": 1152,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1148,
									"end": 1149,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1145,
									"end": 1146,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1138,
									"end": 1150,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 1102,
									"end": 1152,
									"name": "tag",
									"source": 8,
									"value": "27"
								},
								{
									"begin": 1102,
									"end": 1152,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1171,
									"end": 1232,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "28"
								},
								{
									"begin": 1224,
									"end": 1231,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 1215,
									"end": 1221,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1204,
									"end": 1213,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 1200,
									"end": 1222,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1171,
									"end": 1232,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "11"
								},
								{
									"begin": 1171,
									"end": 1232,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1171,
									"end": 1232,
									"name": "tag",
									"source": 8,
									"value": "28"
								},
								{
									"begin": 1171,
									"end": 1232,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1278,
									"end": 1280,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1263,
									"end": 1281,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 1263,
									"end": 1281,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1257,
									"end": 1282,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 1161,
									"end": 1232,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1161,
									"end": 1232,
									"name": "SWAP4",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1257,
									"end": 1282,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1294,
									"end": 1326,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1294,
									"end": 1326,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 1291,
									"end": 1343,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 1291,
									"end": 1343,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "29"
								},
								{
									"begin": 1291,
									"end": 1343,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1339,
									"end": 1340,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1336,
									"end": 1337,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1329,
									"end": 1341,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 1291,
									"end": 1343,
									"name": "tag",
									"source": 8,
									"value": "29"
								},
								{
									"begin": 1291,
									"end": 1343,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1362,
									"end": 1425,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "30"
								},
								{
									"begin": 1417,
									"end": 1424,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 1406,
									"end": 1414,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1395,
									"end": 1404,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 1391,
									"end": 1415,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1362,
									"end": 1425,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "11"
								},
								{
									"begin": 1362,
									"end": 1425,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1362,
									"end": 1425,
									"name": "tag",
									"source": 8,
									"value": "30"
								},
								{
									"begin": 1362,
									"end": 1425,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1352,
									"end": 1425,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1352,
									"end": 1425,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1352,
									"end": 1425,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 874,
									"end": 1431,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 874,
									"end": 1431,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 874,
									"end": 1431,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 874,
									"end": 1431,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 874,
									"end": 1431,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 874,
									"end": 1431,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1436,
									"end": 1816,
									"name": "tag",
									"source": 8,
									"value": "12"
								},
								{
									"begin": 1436,
									"end": 1816,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1515,
									"end": 1516,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 1511,
									"end": 1523,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1511,
									"end": 1523,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1511,
									"end": 1523,
									"name": "SHR",
									"source": 8
								},
								{
									"begin": 1511,
									"end": 1523,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1558,
									"end": 1570,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1558,
									"end": 1570,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1558,
									"end": 1570,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1579,
									"end": 1640,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "32"
								},
								{
									"begin": 1579,
									"end": 1640,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1633,
									"end": 1637,
									"name": "PUSH",
									"source": 8,
									"value": "7F"
								},
								{
									"begin": 1625,
									"end": 1631,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1621,
									"end": 1638,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1611,
									"end": 1638,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1611,
									"end": 1638,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1579,
									"end": 1640,
									"name": "tag",
									"source": 8,
									"value": "32"
								},
								{
									"begin": 1579,
									"end": 1640,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1686,
									"end": 1688,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1678,
									"end": 1684,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1675,
									"end": 1689,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 1655,
									"end": 1673,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1652,
									"end": 1690,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 1649,
									"end": 1810,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "33"
								},
								{
									"begin": 1649,
									"end": 1810,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1732,
									"end": 1742,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B71"
								},
								{
									"begin": 1727,
									"end": 1730,
									"name": "PUSH",
									"source": 8,
									"value": "E0"
								},
								{
									"begin": 1723,
									"end": 1743,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": 1720,
									"end": 1721,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1713,
									"end": 1744,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1767,
									"end": 1771,
									"name": "PUSH",
									"source": 8,
									"value": "22"
								},
								{
									"begin": 1764,
									"end": 1765,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 1757,
									"end": 1772,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1795,
									"end": 1799,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 1792,
									"end": 1793,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1785,
									"end": 1800,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 1649,
									"end": 1810,
									"name": "tag",
									"source": 8,
									"value": "33"
								},
								{
									"begin": 1649,
									"end": 1810,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1649,
									"end": 1810,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1436,
									"end": 1816,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1436,
									"end": 1816,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1436,
									"end": 1816,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1436,
									"end": 1816,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1947,
									"end": 2465,
									"name": "tag",
									"source": 8,
									"value": "14"
								},
								{
									"begin": 1947,
									"end": 2465,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2049,
									"end": 2051,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 2044,
									"end": 2047,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2041,
									"end": 2052,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 2038,
									"end": 2459,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 2038,
									"end": 2459,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "36"
								},
								{
									"begin": 2038,
									"end": 2459,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 2085,
									"end": 2090,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 2082,
									"end": 2083,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2075,
									"end": 2091,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 2129,
									"end": 2133,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 2126,
									"end": 2127,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2116,
									"end": 2134,
									"name": "KECCAK256",
									"source": 8
								},
								{
									"begin": 2199,
									"end": 2201,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 2187,
									"end": 2197,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 2183,
									"end": 2202,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 2180,
									"end": 2181,
									"name": "PUSH",
									"source": 8,
									"value": "5"
								},
								{
									"begin": 2176,
									"end": 2203,
									"name": "SHR",
									"source": 8
								},
								{
									"begin": 2170,
									"end": 2174,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2166,
									"end": 2204,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 2235,
									"end": 2239,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 2223,
									"end": 2233,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 2220,
									"end": 2240,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 2217,
									"end": 2264,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 2217,
									"end": 2264,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "37"
								},
								{
									"begin": 2217,
									"end": 2264,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2258,
									"end": 2262,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 2217,
									"end": 2264,
									"name": "tag",
									"source": 8,
									"value": "37"
								},
								{
									"begin": 2217,
									"end": 2264,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2313,
									"end": 2315,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 2308,
									"end": 2311,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 2304,
									"end": 2316,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 2301,
									"end": 2302,
									"name": "PUSH",
									"source": 8,
									"value": "5"
								},
								{
									"begin": 2297,
									"end": 2317,
									"name": "SHR",
									"source": 8
								},
								{
									"begin": 2291,
									"end": 2295,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2287,
									"end": 2318,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 2277,
									"end": 2318,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 2277,
									"end": 2318,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2368,
									"end": 2449,
									"name": "tag",
									"source": 8,
									"value": "38"
								},
								{
									"begin": 2368,
									"end": 2449,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2386,
									"end": 2388,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2379,
									"end": 2384,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2376,
									"end": 2389,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 2368,
									"end": 2449,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 2368,
									"end": 2449,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 2368,
									"end": 2449,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 2445,
									"end": 2446,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2431,
									"end": 2447,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2431,
									"end": 2447,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 2412,
									"end": 2413,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 2401,
									"end": 2414,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 2368,
									"end": 2449,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "38"
								},
								{
									"begin": 2368,
									"end": 2449,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2368,
									"end": 2449,
									"name": "tag",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 2368,
									"end": 2449,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2372,
									"end": 2375,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2372,
									"end": 2375,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2038,
									"end": 2459,
									"name": "tag",
									"source": 8,
									"value": "36"
								},
								{
									"begin": 2038,
									"end": 2459,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1947,
									"end": 2465,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1947,
									"end": 2465,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1947,
									"end": 2465,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1947,
									"end": 2465,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2641,
									"end": 3940,
									"name": "tag",
									"source": 8,
									"value": "7"
								},
								{
									"begin": 2641,
									"end": 3940,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2761,
									"end": 2771,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2761,
									"end": 2771,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2783,
									"end": 2813,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2783,
									"end": 2813,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 2780,
									"end": 2836,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 2780,
									"end": 2836,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "44"
								},
								{
									"begin": 2780,
									"end": 2836,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 2816,
									"end": 2834,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "44"
								},
								{
									"begin": 2816,
									"end": 2834,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "10"
								},
								{
									"begin": 2816,
									"end": 2834,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2816,
									"end": 2834,
									"name": "tag",
									"source": 8,
									"value": "44"
								},
								{
									"begin": 2816,
									"end": 2834,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2845,
									"end": 2942,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "45"
								},
								{
									"begin": 2935,
									"end": 2941,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2895,
									"end": 2933,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "46"
								},
								{
									"begin": 2927,
									"end": 2931,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 2921,
									"end": 2932,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": 2895,
									"end": 2933,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "12"
								},
								{
									"begin": 2895,
									"end": 2933,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2895,
									"end": 2933,
									"name": "tag",
									"source": 8,
									"value": "46"
								},
								{
									"begin": 2895,
									"end": 2933,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2889,
									"end": 2893,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 2845,
									"end": 2942,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "14"
								},
								{
									"begin": 2845,
									"end": 2942,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2845,
									"end": 2942,
									"name": "tag",
									"source": 8,
									"value": "45"
								},
								{
									"begin": 2845,
									"end": 2942,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2991,
									"end": 2995,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 3022,
									"end": 3024,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 3011,
									"end": 3025,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 3011,
									"end": 3025,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 3039,
									"end": 3040,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 3034,
									"end": 3683,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3034,
									"end": 3683,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 3034,
									"end": 3683,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "48"
								},
								{
									"begin": 3034,
									"end": 3683,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 3727,
									"end": 3728,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3744,
									"end": 3750,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 3741,
									"end": 3830,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 3741,
									"end": 3830,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "49"
								},
								{
									"begin": 3741,
									"end": 3830,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3796,
									"end": 3815,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 3796,
									"end": 3815,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 3796,
									"end": 3815,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 3790,
									"end": 3816,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 3741,
									"end": 3830,
									"name": "tag",
									"source": 8,
									"value": "49"
								},
								{
									"begin": 3741,
									"end": 3830,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2598,
									"end": 2599,
									"name": "PUSH",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 2594,
									"end": 2605,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 2594,
									"end": 2605,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2594,
									"end": 2605,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": 2590,
									"end": 2614,
									"name": "SHR",
									"source": 8
								},
								{
									"begin": 2586,
									"end": 2615,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 2576,
									"end": 2616,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 2622,
									"end": 2623,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 2618,
									"end": 2629,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 2618,
									"end": 2629,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2618,
									"end": 2629,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": 2573,
									"end": 2630,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 3843,
									"end": 3924,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 3843,
									"end": 3924,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 3004,
									"end": 3934,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 3004,
									"end": 3934,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3034,
									"end": 3683,
									"name": "tag",
									"source": 8,
									"value": "48"
								},
								{
									"begin": 3034,
									"end": 3683,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1894,
									"end": 1895,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1887,
									"end": 1901,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 1887,
									"end": 1901,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1887,
									"end": 1901,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1931,
									"end": 1935,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1918,
									"end": 1936,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1918,
									"end": 1936,
									"name": "KECCAK256",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3070,
									"end": 3090,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 3070,
									"end": 3090,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 3070,
									"end": 3090,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 3188,
									"end": 3410,
									"name": "tag",
									"source": 8,
									"value": "52"
								},
								{
									"begin": 3188,
									"end": 3410,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3202,
									"end": 3209,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 3199,
									"end": 3200,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3196,
									"end": 3210,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 3188,
									"end": 3410,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 3188,
									"end": 3410,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "54"
								},
								{
									"begin": 3188,
									"end": 3410,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 3284,
									"end": 3303,
									"name": "DUP8",
									"source": 8
								},
								{
									"begin": 3284,
									"end": 3303,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 3284,
									"end": 3303,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 3278,
									"end": 3304,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 3263,
									"end": 3305,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 3263,
									"end": 3305,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 3391,
									"end": 3395,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 3376,
									"end": 3396,
									"name": "SWAP5",
									"source": 8
								},
								{
									"begin": 3376,
									"end": 3396,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 3376,
									"end": 3396,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 3376,
									"end": 3396,
									"name": "SWAP5",
									"source": 8
								},
								{
									"begin": 3344,
									"end": 3345,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 3332,
									"end": 3346,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3332,
									"end": 3346,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 3332,
									"end": 3346,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 3332,
									"end": 3346,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 3218,
									"end": 3230,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 3188,
									"end": 3410,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "52"
								},
								{
									"begin": 3188,
									"end": 3410,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3188,
									"end": 3410,
									"name": "tag",
									"source": 8,
									"value": "54"
								},
								{
									"begin": 3188,
									"end": 3410,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3192,
									"end": 3195,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3438,
									"end": 3444,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 3429,
									"end": 3436,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 3426,
									"end": 3445,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 3423,
									"end": 3624,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 3423,
									"end": 3624,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "55"
								},
								{
									"begin": 3423,
									"end": 3624,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 3499,
									"end": 3518,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 3499,
									"end": 3518,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 3499,
									"end": 3518,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 3493,
									"end": 3519,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3582,
									"end": 3583,
									"name": "PUSH",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 3578,
									"end": 3592,
									"name": "DUP8",
									"source": 8
								},
								{
									"begin": 3578,
									"end": 3592,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3578,
									"end": 3592,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": 3594,
									"end": 3597,
									"name": "PUSH",
									"source": 8,
									"value": "F8"
								},
								{
									"begin": 3574,
									"end": 3598,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 3570,
									"end": 3607,
									"name": "SHR",
									"source": 8
								},
								{
									"begin": 3566,
									"end": 3608,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 3551,
									"end": 3609,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 3536,
									"end": 3610,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3536,
									"end": 3610,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 3423,
									"end": 3624,
									"name": "tag",
									"source": 8,
									"value": "55"
								},
								{
									"begin": 3423,
									"end": 3624,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3670,
									"end": 3671,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 3654,
									"end": 3668,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3654,
									"end": 3668,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3654,
									"end": 3668,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": 3650,
									"end": 3672,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 3637,
									"end": 3673,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3637,
									"end": 3673,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2641,
									"end": 3940,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2641,
									"end": 3940,
									"name": "tag",
									"source": 8,
									"value": "16"
								},
								{
									"begin": 2641,
									"end": 3940,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220755b225c52dc8da0304deace4d1cece361490373ab57432859d925d302b700cb64736f6c634300081a0033",
									".code": [
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "tag",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "SHR",
											"source": 4
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 4,
											"value": "39509351"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 4,
											"value": "39509351"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 4,
											"value": "70A08231"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 4,
											"value": "95D89B41"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 4,
											"value": "A457C2D7"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 4,
											"value": "A9059CBB"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 4,
											"value": "DD62ED3E"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "tag",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 4,
											"value": "6FDDE03"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 4,
											"value": "95EA7B3"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 4,
											"value": "18160DDD"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 4,
											"value": "23B872DD"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 4,
											"value": "313CE567"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "tag",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "tag",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 2158,
											"end": 2256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "tag",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 2158,
											"end": 2256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "tag",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "tag",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 4444,
											"end": 4641,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "tag",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 4444,
											"end": 4641,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "tag",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1085,
											"end": 1099,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1085,
											"end": 1099,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1078,
											"end": 1100,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1060,
											"end": 1101,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1060,
											"end": 1101,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1048,
											"end": 1050,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1033,
											"end": 1051,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 920,
											"end": 1107,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "tag",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3342,
											"end": 3354,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 3342,
											"end": 3354,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "tag",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1258,
											"end": 1283,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1258,
											"end": 1283,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1258,
											"end": 1283,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1246,
											"end": 1248,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1231,
											"end": 1249,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 1112,
											"end": 1289,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "tag",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 5203,
											"end": 5459,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "tag",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 5203,
											"end": 5459,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3104,
											"end": 3195,
											"name": "tag",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 3104,
											"end": 3195,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3104,
											"end": 3195,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3104,
											"end": 3195,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3186,
											"end": 3188,
											"name": "PUSH",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 1815,
											"end": 1851,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1815,
											"end": 1851,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1803,
											"end": 1805,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1788,
											"end": 1806,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3104,
											"end": 3195,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 1673,
											"end": 1857,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "tag",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 5854,
											"end": 6088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "tag",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5854,
											"end": 6088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "tag",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 3419,
											"end": 3544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "tag",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3493,
											"end": 3500,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2369,
											"end": 2471,
											"name": "tag",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 2369,
											"end": 2471,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2369,
											"end": 2471,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 2369,
											"end": 2471,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 2369,
											"end": 2471,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "tag",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 6575,
											"end": 7002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "tag",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 6575,
											"end": 7002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "tag",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 3740,
											"end": 3929,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "tag",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 3740,
											"end": 3929,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "tag",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 3987,
											"end": 4136,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "tag",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 3987,
											"end": 4136,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "tag",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2212,
											"end": 2225,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 2244,
											"end": 2249,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 2237,
											"end": 2249,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "tag",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 2237,
											"end": 2249,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "tag",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "tag",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "tag",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "tag",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2158,
											"end": 2256,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "tag",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4527,
											"end": 4531,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 4581,
											"end": 4613,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4597,
											"end": 4604,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4606,
											"end": 4612,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4581,
											"end": 4589,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 4581,
											"end": 4613,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4581,
											"end": 4613,
											"name": "tag",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 4581,
											"end": 4613,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4630,
											"end": 4634,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 4623,
											"end": 4634,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4623,
											"end": 4634,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4623,
											"end": 4634,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "tag",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4444,
											"end": 4641,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "tag",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5300,
											"end": 5304,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 5356,
											"end": 5394,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 5372,
											"end": 5376,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5387,
											"end": 5393,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5356,
											"end": 5371,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 5356,
											"end": 5394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5356,
											"end": 5394,
											"name": "tag",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 5356,
											"end": 5394,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5404,
											"end": 5431,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 5414,
											"end": 5418,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5420,
											"end": 5422,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5424,
											"end": 5430,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5404,
											"end": 5413,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 5404,
											"end": 5431,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5404,
											"end": 5431,
											"name": "tag",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 5404,
											"end": 5431,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5448,
											"end": 5452,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 5448,
											"end": 5452,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5203,
											"end": 5459,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "tag",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5942,
											"end": 5946,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 5996,
											"end": 6060,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6012,
											"end": 6019,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 6049,
											"end": 6059,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 6021,
											"end": 6046,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6012,
											"end": 6019,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6021,
											"end": 6030,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 6021,
											"end": 6046,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6021,
											"end": 6046,
											"name": "tag",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 6021,
											"end": 6046,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6021,
											"end": 6059,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 6021,
											"end": 6059,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6021,
											"end": 6059,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6021,
											"end": 6059,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 6021,
											"end": 6059,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6021,
											"end": 6059,
											"name": "tag",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 6021,
											"end": 6059,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5996,
											"end": 6004,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 5996,
											"end": 6060,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2369,
											"end": 2471,
											"name": "tag",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 2369,
											"end": 2471,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2425,
											"end": 2438,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 2457,
											"end": 2464,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 2450,
											"end": 2464,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "tag",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6668,
											"end": 6672,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 6668,
											"end": 6672,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6749,
											"end": 6774,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6766,
											"end": 6773,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 6749,
											"end": 6758,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 6749,
											"end": 6774,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6749,
											"end": 6774,
											"name": "tag",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 6749,
											"end": 6774,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6722,
											"end": 6774,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6722,
											"end": 6774,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6812,
											"end": 6827,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6792,
											"end": 6808,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6792,
											"end": 6827,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 6792,
											"end": 6827,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3132,
											"end": 3134,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3114,
											"end": 3135,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3171,
											"end": 3173,
											"name": "PUSH",
											"source": 8,
											"value": "25"
										},
										{
											"begin": 3151,
											"end": 3169,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 3151,
											"end": 3169,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3151,
											"end": 3169,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3144,
											"end": 3174,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3210,
											"end": 3244,
											"name": "PUSH",
											"source": 8,
											"value": "45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77"
										},
										{
											"begin": 3190,
											"end": 3208,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 3190,
											"end": 3208,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3190,
											"end": 3208,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3183,
											"end": 3245,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "207A65726F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3261,
											"end": 3279,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 3261,
											"end": 3279,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3261,
											"end": 3279,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3254,
											"end": 3289,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3306,
											"end": 3325,
											"name": "PUSH",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 3306,
											"end": 3325,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "tag",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "tag",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6903,
											"end": 6963,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 6912,
											"end": 6917,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6919,
											"end": 6926,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 6947,
											"end": 6962,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 6928,
											"end": 6944,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 6928,
											"end": 6962,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6903,
											"end": 6911,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 6903,
											"end": 6963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "tag",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3819,
											"end": 3823,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 3873,
											"end": 3901,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3890,
											"end": 3892,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3894,
											"end": 3900,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3873,
											"end": 3882,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 3873,
											"end": 3901,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "tag",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4076,
											"end": 4083,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4102,
											"end": 4113,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3987,
											"end": 4136,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10457,
											"end": 10797,
											"name": "tag",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 10457,
											"end": 10797,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10558,
											"end": 10577,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 10558,
											"end": 10577,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3538,
											"end": 3540,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3520,
											"end": 3541,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3577,
											"end": 3579,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 3557,
											"end": 3575,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3557,
											"end": 3575,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3557,
											"end": 3575,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3550,
											"end": 3580,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3616,
											"end": 3650,
											"name": "PUSH",
											"source": 8,
											"value": "45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
										},
										{
											"begin": 3596,
											"end": 3614,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 3596,
											"end": 3614,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3596,
											"end": 3614,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3589,
											"end": 3651,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3667,
											"end": 3685,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 3667,
											"end": 3685,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3667,
											"end": 3685,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3660,
											"end": 3694,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3711,
											"end": 3730,
											"name": "PUSH",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 3711,
											"end": 3730,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 3336,
											"end": 3736,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "tag",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10636,
											"end": 10657,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10636,
											"end": 10657,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3943,
											"end": 3945,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3925,
											"end": 3946,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3982,
											"end": 3984,
											"name": "PUSH",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 3962,
											"end": 3980,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 3962,
											"end": 3980,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3962,
											"end": 3980,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3955,
											"end": 3985,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4021,
											"end": 4055,
											"name": "PUSH",
											"source": 8,
											"value": "45524332303A20617070726F766520746F20746865207A65726F206164647265"
										},
										{
											"begin": 4001,
											"end": 4019,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 4001,
											"end": 4019,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4001,
											"end": 4019,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3994,
											"end": 4056,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4065,
											"end": 4097,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4114,
											"end": 4133,
											"name": "PUSH",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 4114,
											"end": 4133,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 3741,
											"end": 4139,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "tag",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10707,
											"end": 10718,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 10707,
											"end": 10743,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 10707,
											"end": 10743,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10707,
											"end": 10743,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1258,
											"end": 1283,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1258,
											"end": 1283,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1258,
											"end": 1283,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "PUSH",
											"source": 4,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1231,
											"end": 1249,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "LOG3",
											"source": 4
										},
										{
											"begin": 10457,
											"end": 10797,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10457,
											"end": 10797,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10457,
											"end": 10797,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10457,
											"end": 10797,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11078,
											"end": 11489,
											"name": "tag",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 11078,
											"end": 11489,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11178,
											"end": 11202,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11205,
											"end": 11230,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "117"
										},
										{
											"begin": 11215,
											"end": 11220,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 11222,
											"end": 11229,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 11205,
											"end": 11214,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 11205,
											"end": 11230,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11205,
											"end": 11230,
											"name": "tag",
											"source": 4,
											"value": "117"
										},
										{
											"begin": 11205,
											"end": 11230,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11178,
											"end": 11230,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11178,
											"end": 11230,
											"name": "POP",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 11244,
											"end": 11260,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11244,
											"end": 11281,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 11240,
											"end": 11483,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "122"
										},
										{
											"begin": 11240,
											"end": 11483,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 11325,
											"end": 11331,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11305,
											"end": 11321,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11305,
											"end": 11331,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 11305,
											"end": 11331,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4346,
											"end": 4348,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4328,
											"end": 4349,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4385,
											"end": 4387,
											"name": "PUSH",
											"source": 8,
											"value": "1D"
										},
										{
											"begin": 4365,
											"end": 4383,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 4365,
											"end": 4383,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4365,
											"end": 4383,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4358,
											"end": 4388,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4424,
											"end": 4455,
											"name": "PUSH",
											"source": 8,
											"value": "45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000"
										},
										{
											"begin": 4404,
											"end": 4422,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 4404,
											"end": 4422,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4404,
											"end": 4422,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4397,
											"end": 4456,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4473,
											"end": 4491,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 4473,
											"end": 4491,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 4144,
											"end": 4497,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "tag",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11407,
											"end": 11458,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "122"
										},
										{
											"begin": 11416,
											"end": 11421,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 11423,
											"end": 11430,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 11451,
											"end": 11457,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 11432,
											"end": 11448,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 11432,
											"end": 11457,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 11407,
											"end": 11415,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 11407,
											"end": 11458,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11407,
											"end": 11458,
											"name": "tag",
											"source": 4,
											"value": "122"
										},
										{
											"begin": 11407,
											"end": 11458,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11168,
											"end": 11489,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11078,
											"end": 11489,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11078,
											"end": 11489,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11078,
											"end": 11489,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11078,
											"end": 11489,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7456,
											"end": 8244,
											"name": "tag",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 7456,
											"end": 8244,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7552,
											"end": 7570,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7552,
											"end": 7570,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "124"
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4704,
											"end": 4706,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4686,
											"end": 4707,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4743,
											"end": 4745,
											"name": "PUSH",
											"source": 8,
											"value": "25"
										},
										{
											"begin": 4723,
											"end": 4741,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 4723,
											"end": 4741,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4723,
											"end": 4741,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4716,
											"end": 4746,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4782,
											"end": 4816,
											"name": "PUSH",
											"source": 8,
											"value": "45524332303A207472616E736665722066726F6D20746865207A65726F206164"
										},
										{
											"begin": 4762,
											"end": 4780,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 4762,
											"end": 4780,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4762,
											"end": 4780,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4755,
											"end": 4817,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4833,
											"end": 4851,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 4833,
											"end": 4851,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4833,
											"end": 4851,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4826,
											"end": 4861,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4878,
											"end": 4897,
											"name": "PUSH",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 4878,
											"end": 4897,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 4502,
											"end": 4903,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "tag",
											"source": 4,
											"value": "124"
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7630,
											"end": 7646,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7630,
											"end": 7646,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "127"
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5110,
											"end": 5112,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5092,
											"end": 5113,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5149,
											"end": 5151,
											"name": "PUSH",
											"source": 8,
											"value": "23"
										},
										{
											"begin": 5129,
											"end": 5147,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 5129,
											"end": 5147,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5129,
											"end": 5147,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5122,
											"end": 5152,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5188,
											"end": 5222,
											"name": "PUSH",
											"source": 8,
											"value": "45524332303A207472616E7366657220746F20746865207A65726F2061646472"
										},
										{
											"begin": 5168,
											"end": 5186,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 5168,
											"end": 5186,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5168,
											"end": 5186,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5161,
											"end": 5223,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5239,
											"end": 5257,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 5239,
											"end": 5257,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5239,
											"end": 5257,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5232,
											"end": 5265,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5282,
											"end": 5301,
											"name": "PUSH",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 5282,
											"end": 5301,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 4908,
											"end": 5307,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "tag",
											"source": 4,
											"value": "127"
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7746,
											"end": 7765,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 7801,
											"end": 7822,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7801,
											"end": 7822,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7801,
											"end": 7822,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 7801,
											"end": 7822,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "132"
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5514,
											"end": 5516,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5496,
											"end": 5517,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5553,
											"end": 5555,
											"name": "PUSH",
											"source": 8,
											"value": "26"
										},
										{
											"begin": 5533,
											"end": 5551,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 5533,
											"end": 5551,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5533,
											"end": 5551,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5526,
											"end": 5556,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5592,
											"end": 5626,
											"name": "PUSH",
											"source": 8,
											"value": "45524332303A207472616E7366657220616D6F756E7420657863656564732062"
										},
										{
											"begin": 5572,
											"end": 5590,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 5572,
											"end": 5590,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5572,
											"end": 5590,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5565,
											"end": 5627,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "616C616E6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5643,
											"end": 5661,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 5643,
											"end": 5661,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5643,
											"end": 5661,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5636,
											"end": 5672,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5689,
											"end": 5708,
											"name": "PUSH",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 5689,
											"end": 5708,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 5312,
											"end": 5714,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "tag",
											"source": 4,
											"value": "132"
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7899,
											"end": 7908,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 7917,
											"end": 7937,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 7917,
											"end": 7937,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 7917,
											"end": 7937,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7899,
											"end": 7937,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7899,
											"end": 7937,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 8114,
											"end": 8137,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8114,
											"end": 8137,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 8114,
											"end": 8137,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 8114,
											"end": 8137,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8114,
											"end": 8137,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8114,
											"end": 8137,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1258,
											"end": 1283,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1258,
											"end": 1283,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1258,
											"end": 1283,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "PUSH",
											"source": 4,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1231,
											"end": 1249,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "LOG3",
											"source": 4
										},
										{
											"begin": 8200,
											"end": 8237,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "122"
										},
										{
											"begin": 12073,
											"end": 12164,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 14,
											"end": 432,
											"name": "tag",
											"source": 8,
											"value": "18"
										},
										{
											"begin": 14,
											"end": 432,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 163,
											"end": 165,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 152,
											"end": 161,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 145,
											"end": 166,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 126,
											"end": 130,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 195,
											"end": 201,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 189,
											"end": 202,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 238,
											"end": 244,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 233,
											"end": 235,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 222,
											"end": 231,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 218,
											"end": 236,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 211,
											"end": 245,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 297,
											"end": 303,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 294,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 284,
											"end": 290,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 280,
											"end": 295,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 275,
											"end": 277,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 264,
											"end": 273,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 260,
											"end": 278,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 254,
											"end": 304,
											"name": "MCOPY",
											"source": 8
										},
										{
											"begin": 353,
											"end": 354,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 348,
											"end": 350,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 339,
											"end": 345,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 328,
											"end": 337,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 324,
											"end": 346,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 320,
											"end": 351,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 313,
											"end": 355,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 423,
											"end": 425,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 416,
											"end": 418,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 412,
											"end": 419,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 407,
											"end": 409,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 399,
											"end": 405,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 395,
											"end": 410,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 391,
											"end": 420,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 380,
											"end": 389,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 376,
											"end": 421,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 372,
											"end": 426,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 364,
											"end": 426,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 364,
											"end": 426,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 364,
											"end": 426,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14,
											"end": 432,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 14,
											"end": 432,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 14,
											"end": 432,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14,
											"end": 432,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14,
											"end": 432,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 437,
											"end": 610,
											"name": "tag",
											"source": 8,
											"value": "140"
										},
										{
											"begin": 437,
											"end": 610,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 505,
											"end": 525,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 505,
											"end": 525,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 554,
											"end": 585,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 554,
											"end": 585,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 544,
											"end": 586,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 544,
											"end": 586,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 534,
											"end": 604,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "144"
										},
										{
											"begin": 534,
											"end": 604,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 600,
											"end": 601,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 597,
											"end": 598,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 590,
											"end": 602,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 534,
											"end": 604,
											"name": "tag",
											"source": 8,
											"value": "144"
										},
										{
											"begin": 534,
											"end": 604,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 437,
											"end": 610,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 437,
											"end": 610,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 437,
											"end": 610,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 437,
											"end": 610,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 615,
											"end": 915,
											"name": "tag",
											"source": 8,
											"value": "21"
										},
										{
											"begin": 615,
											"end": 915,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 683,
											"end": 689,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 691,
											"end": 697,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 744,
											"end": 746,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 732,
											"end": 741,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 723,
											"end": 730,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 719,
											"end": 742,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 715,
											"end": 747,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 712,
											"end": 764,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 712,
											"end": 764,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "146"
										},
										{
											"begin": 712,
											"end": 764,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 760,
											"end": 761,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 757,
											"end": 758,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 750,
											"end": 762,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 712,
											"end": 764,
											"name": "tag",
											"source": 8,
											"value": "146"
										},
										{
											"begin": 712,
											"end": 764,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 783,
											"end": 812,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "147"
										},
										{
											"begin": 802,
											"end": 811,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 783,
											"end": 812,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "140"
										},
										{
											"begin": 783,
											"end": 812,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 783,
											"end": 812,
											"name": "tag",
											"source": 8,
											"value": "147"
										},
										{
											"begin": 783,
											"end": 812,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 773,
											"end": 812,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 881,
											"end": 883,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 866,
											"end": 884,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 866,
											"end": 884,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 866,
											"end": 884,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 866,
											"end": 884,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 853,
											"end": 885,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 853,
											"end": 885,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 615,
											"end": 915,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1294,
											"end": 1668,
											"name": "tag",
											"source": 8,
											"value": "31"
										},
										{
											"begin": 1294,
											"end": 1668,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1371,
											"end": 1377,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1379,
											"end": 1385,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1387,
											"end": 1393,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1440,
											"end": 1442,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 1428,
											"end": 1437,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1419,
											"end": 1426,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 1415,
											"end": 1438,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1411,
											"end": 1443,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 1408,
											"end": 1460,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1408,
											"end": 1460,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "151"
										},
										{
											"begin": 1408,
											"end": 1460,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1456,
											"end": 1457,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1453,
											"end": 1454,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1446,
											"end": 1458,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1408,
											"end": 1460,
											"name": "tag",
											"source": 8,
											"value": "151"
										},
										{
											"begin": 1408,
											"end": 1460,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1479,
											"end": 1508,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "152"
										},
										{
											"begin": 1498,
											"end": 1507,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1479,
											"end": 1508,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "140"
										},
										{
											"begin": 1479,
											"end": 1508,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1479,
											"end": 1508,
											"name": "tag",
											"source": 8,
											"value": "152"
										},
										{
											"begin": 1479,
											"end": 1508,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1469,
											"end": 1508,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1469,
											"end": 1508,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1527,
											"end": 1565,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "153"
										},
										{
											"begin": 1561,
											"end": 1563,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1550,
											"end": 1559,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1546,
											"end": 1564,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1527,
											"end": 1565,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "140"
										},
										{
											"begin": 1527,
											"end": 1565,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1527,
											"end": 1565,
											"name": "tag",
											"source": 8,
											"value": "153"
										},
										{
											"begin": 1527,
											"end": 1565,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1294,
											"end": 1668,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1294,
											"end": 1668,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 1517,
											"end": 1565,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1517,
											"end": 1565,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1634,
											"end": 1636,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1619,
											"end": 1637,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1619,
											"end": 1637,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1619,
											"end": 1637,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1619,
											"end": 1637,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1606,
											"end": 1638,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 1606,
											"end": 1638,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1294,
											"end": 1668,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1862,
											"end": 2048,
											"name": "tag",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 1862,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1921,
											"end": 1927,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1974,
											"end": 1976,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1962,
											"end": 1971,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1953,
											"end": 1960,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1949,
											"end": 1972,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1945,
											"end": 1977,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 1942,
											"end": 1994,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1942,
											"end": 1994,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "156"
										},
										{
											"begin": 1942,
											"end": 1994,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1990,
											"end": 1991,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1987,
											"end": 1988,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1980,
											"end": 1992,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1942,
											"end": 1994,
											"name": "tag",
											"source": 8,
											"value": "156"
										},
										{
											"begin": 1942,
											"end": 1994,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2013,
											"end": 2042,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "157"
										},
										{
											"begin": 2032,
											"end": 2041,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2013,
											"end": 2042,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "140"
										},
										{
											"begin": 2013,
											"end": 2042,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2013,
											"end": 2042,
											"name": "tag",
											"source": 8,
											"value": "157"
										},
										{
											"begin": 2013,
											"end": 2042,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2003,
											"end": 2042,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 1862,
											"end": 2048,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1862,
											"end": 2048,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2053,
											"end": 2313,
											"name": "tag",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 2053,
											"end": 2313,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2121,
											"end": 2127,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2129,
											"end": 2135,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2182,
											"end": 2184,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2170,
											"end": 2179,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2161,
											"end": 2168,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2157,
											"end": 2180,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2153,
											"end": 2185,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 2150,
											"end": 2202,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2150,
											"end": 2202,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "159"
										},
										{
											"begin": 2150,
											"end": 2202,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2198,
											"end": 2199,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2195,
											"end": 2196,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2188,
											"end": 2200,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2150,
											"end": 2202,
											"name": "tag",
											"source": 8,
											"value": "159"
										},
										{
											"begin": 2150,
											"end": 2202,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2221,
											"end": 2250,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "160"
										},
										{
											"begin": 2240,
											"end": 2249,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2221,
											"end": 2250,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "140"
										},
										{
											"begin": 2221,
											"end": 2250,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2221,
											"end": 2250,
											"name": "tag",
											"source": 8,
											"value": "160"
										},
										{
											"begin": 2221,
											"end": 2250,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2211,
											"end": 2250,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2211,
											"end": 2250,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2269,
											"end": 2307,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "161"
										},
										{
											"begin": 2303,
											"end": 2305,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2292,
											"end": 2301,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2288,
											"end": 2306,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2269,
											"end": 2307,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "140"
										},
										{
											"begin": 2269,
											"end": 2307,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2269,
											"end": 2307,
											"name": "tag",
											"source": 8,
											"value": "161"
										},
										{
											"begin": 2269,
											"end": 2307,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2259,
											"end": 2307,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2259,
											"end": 2307,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2053,
											"end": 2313,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2053,
											"end": 2313,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2053,
											"end": 2313,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2053,
											"end": 2313,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2053,
											"end": 2313,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2053,
											"end": 2313,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2318,
											"end": 2698,
											"name": "tag",
											"source": 8,
											"value": "65"
										},
										{
											"begin": 2318,
											"end": 2698,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2397,
											"end": 2398,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 2393,
											"end": 2405,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2393,
											"end": 2405,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2393,
											"end": 2405,
											"name": "SHR",
											"source": 8
										},
										{
											"begin": 2393,
											"end": 2405,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2440,
											"end": 2452,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2440,
											"end": 2452,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2440,
											"end": 2452,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2461,
											"end": 2522,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "163"
										},
										{
											"begin": 2461,
											"end": 2522,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2515,
											"end": 2519,
											"name": "PUSH",
											"source": 8,
											"value": "7F"
										},
										{
											"begin": 2507,
											"end": 2513,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2503,
											"end": 2520,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2493,
											"end": 2520,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2493,
											"end": 2520,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2461,
											"end": 2522,
											"name": "tag",
											"source": 8,
											"value": "163"
										},
										{
											"begin": 2461,
											"end": 2522,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2568,
											"end": 2570,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2560,
											"end": 2566,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2557,
											"end": 2571,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 2537,
											"end": 2555,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2534,
											"end": 2572,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2531,
											"end": 2692,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "164"
										},
										{
											"begin": 2531,
											"end": 2692,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2614,
											"end": 2624,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B71"
										},
										{
											"begin": 2609,
											"end": 2612,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 2605,
											"end": 2625,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 2602,
											"end": 2603,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2595,
											"end": 2626,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2649,
											"end": 2653,
											"name": "PUSH",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 2646,
											"end": 2647,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2639,
											"end": 2654,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2677,
											"end": 2681,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 2674,
											"end": 2675,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2667,
											"end": 2682,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2531,
											"end": 2692,
											"name": "tag",
											"source": 8,
											"value": "164"
										},
										{
											"begin": 2531,
											"end": 2692,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2531,
											"end": 2692,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2318,
											"end": 2698,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2318,
											"end": 2698,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2318,
											"end": 2698,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2318,
											"end": 2698,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2703,
											"end": 2925,
											"name": "tag",
											"source": 8,
											"value": "88"
										},
										{
											"begin": 2703,
											"end": 2925,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2768,
											"end": 2777,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2768,
											"end": 2777,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2768,
											"end": 2777,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2789,
											"end": 2799,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2789,
											"end": 2799,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2789,
											"end": 2799,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 2786,
											"end": 2919,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2786,
											"end": 2919,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "70"
										},
										{
											"begin": 2786,
											"end": 2919,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 2851,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B71"
										},
										{
											"begin": 2836,
											"end": 2839,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 2832,
											"end": 2852,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 2829,
											"end": 2830,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2822,
											"end": 2853,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2876,
											"end": 2880,
											"name": "PUSH",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 2873,
											"end": 2874,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2866,
											"end": 2881,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2904,
											"end": 2908,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 2901,
											"end": 2902,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2894,
											"end": 2909,
											"name": "REVERT",
											"source": 8
										}
									]
								}
							},
							"sourceList": [
								"Revolt.sol",
								"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/access/Ownable.sol",
								"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/security/Pausable.sol",
								"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/security/ReentrancyGuard.sol",
								"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol",
								"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/IERC20.sol",
								"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/utils/Context.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cac938788bc4be12101e59d45588b4e059579f4e61062e1cda8d6b06c0191b15\",\"dweb:/ipfs/QmV2JKCyjTVH3rkWNrfdJRhAT7tZ3usAN2XcnD4h53Mvih\"]},\"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 875,
								"contract": "https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 881,
								"contract": "https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 883,
								"contract": "https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 885,
								"contract": "https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 887,
								"contract": "https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"Revolt.sol": {
				"ast": {
					"absolutePath": "Revolt.sol",
					"exportedSymbols": {
						"Context": [
							1571
						],
						"ERC20": [
							1446
						],
						"IERC20": [
							1524
						],
						"IERC20Metadata": [
							1549
						],
						"Ownable": [
							686
						],
						"Pausable": [
							794
						],
						"ReentrancyGuard": [
							859
						],
						"RevoltCoin": [
							573
						]
					},
					"id": 574,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:0"
						},
						{
							"absolutePath": "https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol",
							"file": "https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 574,
							"sourceUnit": 1447,
							"src": "58:118:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/access/Ownable.sol",
							"file": "https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/access/Ownable.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 574,
							"sourceUnit": 687,
							"src": "177:115:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/security/Pausable.sol",
							"file": "https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/security/Pausable.sol",
							"id": 4,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 574,
							"sourceUnit": 795,
							"src": "293:118:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/security/ReentrancyGuard.sol",
							"file": "https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/security/ReentrancyGuard.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 574,
							"sourceUnit": 860,
							"src": "412:125:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 6,
										"name": "ERC20",
										"nameLocations": [
											"562:5:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1446,
										"src": "562:5:0"
									},
									"id": 7,
									"nodeType": "InheritanceSpecifier",
									"src": "562:5:0"
								},
								{
									"baseName": {
										"id": 8,
										"name": "Ownable",
										"nameLocations": [
											"569:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 686,
										"src": "569:7:0"
									},
									"id": 9,
									"nodeType": "InheritanceSpecifier",
									"src": "569:7:0"
								},
								{
									"baseName": {
										"id": 10,
										"name": "Pausable",
										"nameLocations": [
											"578:8:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 794,
										"src": "578:8:0"
									},
									"id": 11,
									"nodeType": "InheritanceSpecifier",
									"src": "578:8:0"
								},
								{
									"baseName": {
										"id": 12,
										"name": "ReentrancyGuard",
										"nameLocations": [
											"588:15:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 859,
										"src": "588:15:0"
									},
									"id": 13,
									"nodeType": "InheritanceSpecifier",
									"src": "588:15:0"
								}
							],
							"canonicalName": "RevoltCoin",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 573,
							"linearizedBaseContracts": [
								573,
								859,
								794,
								686,
								1446,
								1549,
								1524,
								1571
							],
							"name": "RevoltCoin",
							"nameLocation": "548:10:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"functionSelector": "32cb6b0c",
									"id": 20,
									"mutability": "constant",
									"name": "MAX_SUPPLY",
									"nameLocation": "693:10:0",
									"nodeType": "VariableDeclaration",
									"scope": 573,
									"src": "669:58:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 14,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "669:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_10000000000000000000000000_by_1",
											"typeString": "int_const 10000000000000000000000000"
										},
										"id": 19,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "31305f3030305f303030",
											"id": 15,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "706:10:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_10000000_by_1",
												"typeString": "int_const 10000000"
											},
											"value": "10_000_000"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"commonType": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											},
											"id": 18,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"leftExpression": {
												"hexValue": "3130",
												"id": 16,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "719:2:0",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_10_by_1",
													"typeString": "int_const 10"
												},
												"value": "10"
											},
											"nodeType": "BinaryOperation",
											"operator": "**",
											"rightExpression": {
												"hexValue": "3138",
												"id": 17,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "725:2:0",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_18_by_1",
													"typeString": "int_const 18"
												},
												"value": "18"
											},
											"src": "719:8:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											}
										},
										"src": "706:21:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_10000000000000000000000000_by_1",
											"typeString": "int_const 10000000000000000000000000"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "94544e64",
									"id": 23,
									"mutability": "mutable",
									"name": "transferFeePercent",
									"nameLocation": "799:18:0",
									"nodeType": "VariableDeclaration",
									"scope": 573,
									"src": "784:37:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 21,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "784:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 22,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "820:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "46904840",
									"id": 25,
									"mutability": "mutable",
									"name": "feeRecipient",
									"nameLocation": "842:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 573,
									"src": "827:27:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 24,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "827:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 29,
									"mutability": "mutable",
									"name": "_isExcludedFromFee",
									"nameLocation": "924:18:0",
									"nodeType": "VariableDeclaration",
									"scope": 573,
									"src": "891:51:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 28,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 26,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "899:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "891:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 27,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "910:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "d5f39488",
									"id": 31,
									"mutability": "immutable",
									"name": "deployer",
									"nameLocation": "1012:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 573,
									"src": "987:33:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 30,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "987:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "d141d90e37cff90c4910d122c1b6bc4951144bbf7ad06233ce2a2954e5c25e3b",
									"id": 37,
									"name": "TransferFeePercentUpdated",
									"nameLocation": "1047:25:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"indexed": false,
												"mutability": "mutable",
												"name": "previousFee",
												"nameLocation": "1081:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 37,
												"src": "1073:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 32,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 35,
												"indexed": false,
												"mutability": "mutable",
												"name": "newFee",
												"nameLocation": "1102:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 37,
												"src": "1094:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 34,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1094:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1072:37:0"
									},
									"src": "1041:69:0"
								},
								{
									"anonymous": false,
									"eventSelector": "aaebcf1bfa00580e41d966056b48521fa9f202645c86d4ddf28113e617c1b1d3",
									"id": 43,
									"name": "FeeRecipientUpdated",
									"nameLocation": "1121:19:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 39,
												"indexed": false,
												"mutability": "mutable",
												"name": "previousRecipient",
												"nameLocation": "1149:17:0",
												"nodeType": "VariableDeclaration",
												"scope": 43,
												"src": "1141:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 38,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1141:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 41,
												"indexed": false,
												"mutability": "mutable",
												"name": "newRecipient",
												"nameLocation": "1176:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 43,
												"src": "1168:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 40,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1168:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1140:49:0"
									},
									"src": "1115:75:0"
								},
								{
									"anonymous": false,
									"eventSelector": "58c3e0504c69d3a92726966f152a771e0f8f6ad4daca1ae9055a38aba1fd2b62",
									"id": 47,
									"name": "ExcludeFromFee",
									"nameLocation": "1201:14:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 45,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1224:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 47,
												"src": "1216:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 44,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1216:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1215:17:0"
									},
									"src": "1195:38:0"
								},
								{
									"anonymous": false,
									"eventSelector": "4f6a6b6efe34ec6478021aa9fb7f6980e78ea3a10c74074a8ce49d5d3ebf1f7e",
									"id": 51,
									"name": "IncludeInFee",
									"nameLocation": "1244:12:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 49,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1265:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "1257:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1257:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1256:17:0"
									},
									"src": "1238:36:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d76",
									"id": 57,
									"name": "OwnerUpdated",
									"nameLocation": "1285:12:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 53,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1314:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 57,
												"src": "1298:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 52,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1298:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 55,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1345:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 57,
												"src": "1329:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 54,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1329:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1297:57:0"
									},
									"src": "1279:76:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8c32c568416fcf97be35ce5b27844cfddcd63a67a1a602c3595ba5dac38f303a",
									"id": 63,
									"name": "Airdrop",
									"nameLocation": "1366:7:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 62,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 59,
												"indexed": true,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1390:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 63,
												"src": "1374:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 58,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1374:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 61,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1409:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 63,
												"src": "1401:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 60,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1401:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1373:43:0"
									},
									"src": "1360:57:0"
								},
								{
									"body": {
										"id": 108,
										"nodeType": "Block",
										"src": "1467:507:0",
										"statements": [
											{
												"expression": {
													"id": 73,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 70,
														"name": "deployer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 31,
														"src": "1510:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 71,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "1521:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1525:6:0",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "1521:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1510:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 74,
												"nodeType": "ExpressionStatement",
												"src": "1510:21:0"
											},
											{
												"expression": {
													"id": 78,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 75,
														"name": "feeRecipient",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 25,
														"src": "1589:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 76,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "1604:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 77,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1608:6:0",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "1604:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1589:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 79,
												"nodeType": "ExpressionStatement",
												"src": "1589:25:0"
											},
											{
												"expression": {
													"id": 85,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 80,
															"name": "_isExcludedFromFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 29,
															"src": "1678:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 83,
														"indexExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 81,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 614,
																"src": "1697:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 82,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1697:7:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1678:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 84,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1708:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "1678:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 86,
												"nodeType": "ExpressionStatement",
												"src": "1678:34:0"
											},
											{
												"expression": {
													"id": 91,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 87,
															"name": "_isExcludedFromFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 29,
															"src": "1722:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 89,
														"indexExpression": {
															"id": 88,
															"name": "feeRecipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 25,
															"src": "1741:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1722:32:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 90,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1757:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "1722:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 92,
												"nodeType": "ExpressionStatement",
												"src": "1722:39:0"
											},
											{
												"assignments": [
													94
												],
												"declarations": [
													{
														"constant": false,
														"id": 94,
														"mutability": "mutable",
														"name": "initialSupply",
														"nameLocation": "1881:13:0",
														"nodeType": "VariableDeclaration",
														"scope": 108,
														"src": "1873:21:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 93,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1873:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 101,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 100,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "315f3030305f303030",
														"id": 95,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1897:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1000000_by_1",
															"typeString": "int_const 1000000"
														},
														"value": "1_000_000"
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 99,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"hexValue": "3130",
															"id": 96,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1909:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_10_by_1",
																"typeString": "int_const 10"
															},
															"value": "10"
														},
														"nodeType": "BinaryOperation",
														"operator": "**",
														"rightExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 97,
																"name": "decimals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 934,
																"src": "1915:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_uint8_$",
																	"typeString": "function () view returns (uint8)"
																}
															},
															"id": 98,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1915:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"src": "1909:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1897:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1873:52:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 103,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1941:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 104,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1945:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1941:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 105,
															"name": "initialSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 94,
															"src": "1953:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 102,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1263,
														"src": "1935:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 106,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1935:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 107,
												"nodeType": "ExpressionStatement",
												"src": "1935:32:0"
											}
										]
									},
									"id": 109,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "5265766f6c74436f696e",
													"id": 66,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1443:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_b07339fcd0a8c77f1cf4e6e42a8cf628b447ef6ed565c8b680b15caea2aac4c9",
														"typeString": "literal_string \"RevoltCoin\""
													},
													"value": "RevoltCoin"
												},
												{
													"hexValue": "5265766f6c74",
													"id": 67,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1457:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_11bc64f4357f5e2f0f294fda37864de7b85b6f810364c0a6b41b3a7f215305ee",
														"typeString": "literal_string \"Revolt\""
													},
													"value": "Revolt"
												}
											],
											"id": 68,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 65,
												"name": "ERC20",
												"nameLocations": [
													"1437:5:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1446,
												"src": "1437:5:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1437:29:0"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 64,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1434:2:0"
									},
									"returnParameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1467:0:0"
									},
									"scope": 573,
									"src": "1423:551:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 133,
										"nodeType": "Block",
										"src": "2107:111:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 124,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 122,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 119,
																		"name": "totalSupply",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 944,
																		"src": "2125:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																			"typeString": "function () view returns (uint256)"
																		}
																	},
																	"id": 120,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2125:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 121,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 113,
																	"src": "2141:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2125:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 123,
																"name": "MAX_SUPPLY",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 20,
																"src": "2151:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2125:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45786365656473206d617820737570706c79",
															"id": 125,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2163:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_833ac5256bd749e59e09b3d79e65697a9a895b45768ee0e3858ea9958c2aa611",
																"typeString": "literal_string \"Exceeds max supply\""
															},
															"value": "Exceeds max supply"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_833ac5256bd749e59e09b3d79e65697a9a895b45768ee0e3858ea9958c2aa611",
																"typeString": "literal_string \"Exceeds max supply\""
															}
														],
														"id": 118,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2117:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 126,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2117:67:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 127,
												"nodeType": "ExpressionStatement",
												"src": "2117:67:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 129,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 111,
															"src": "2200:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 130,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 113,
															"src": "2204:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 128,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1263,
														"src": "2194:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 131,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2194:17:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 132,
												"nodeType": "ExpressionStatement",
												"src": "2194:17:0"
											}
										]
									},
									"functionSelector": "40c10f19",
									"id": 134,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 116,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 115,
												"name": "onlyOwner",
												"nameLocations": [
													"2097:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 605,
												"src": "2097:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2097:9:0"
										}
									],
									"name": "mint",
									"nameLocation": "2055:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 114,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 111,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2068:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 134,
												"src": "2060:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 110,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2060:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 113,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2080:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 134,
												"src": "2072:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 112,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2072:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2059:28:0"
									},
									"returnParameters": {
										"id": 117,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2107:0:0"
									},
									"scope": 573,
									"src": "2046:172:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 161,
										"nodeType": "Block",
										"src": "2347:196:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 144,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 142,
																"name": "newFee",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 136,
																"src": "2365:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"hexValue": "3130",
																"id": 143,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2375:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"value": "10"
															},
															"src": "2365:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "46656520746f6f2068696768",
															"id": 145,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2379:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_48d9dea795d8d010580a5b191d0fe7c1ee70cd850707a0d7e7aba7c702de6be1",
																"typeString": "literal_string \"Fee too high\""
															},
															"value": "Fee too high"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_48d9dea795d8d010580a5b191d0fe7c1ee70cd850707a0d7e7aba7c702de6be1",
																"typeString": "literal_string \"Fee too high\""
															}
														],
														"id": 141,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2357:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 146,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 147,
												"nodeType": "ExpressionStatement",
												"src": "2357:37:0"
											},
											{
												"assignments": [
													149
												],
												"declarations": [
													{
														"constant": false,
														"id": 149,
														"mutability": "mutable",
														"name": "previous",
														"nameLocation": "2412:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 161,
														"src": "2404:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 148,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2404:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 151,
												"initialValue": {
													"id": 150,
													"name": "transferFeePercent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 23,
													"src": "2423:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2404:37:0"
											},
											{
												"expression": {
													"id": 154,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 152,
														"name": "transferFeePercent",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 23,
														"src": "2451:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 153,
														"name": "newFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 136,
														"src": "2472:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2451:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 155,
												"nodeType": "ExpressionStatement",
												"src": "2451:27:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 157,
															"name": "previous",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 149,
															"src": "2519:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 158,
															"name": "newFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 136,
															"src": "2529:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 156,
														"name": "TransferFeePercentUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 37,
														"src": "2493:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 159,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2493:43:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 160,
												"nodeType": "EmitStatement",
												"src": "2488:48:0"
											}
										]
									},
									"functionSelector": "1f36d925",
									"id": 162,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 139,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 138,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 605,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "setTransferFeePercent",
									"nameLocation": "2290:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 137,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 136,
												"mutability": "mutable",
												"name": "newFee",
												"nameLocation": "2320:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 162,
												"src": "2312:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 135,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2312:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2311:16:0"
									},
									"returnParameters": {
										"id": 140,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 573,
									"src": "2281:262:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 201,
										"nodeType": "Block",
										"src": "2650:408:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 175,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 170,
																"name": "newRecipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 164,
																"src": "2668:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 173,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2692:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 172,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2684:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 171,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2684:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 174,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2684:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2668:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265766f6c74436f696e3a20696e76616c69642061646472657373",
															"id": 176,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2696:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_abde4a8a179b075c2757f63dc76a9bd13de52babc04234150155d1395f84c84e",
																"typeString": "literal_string \"RevoltCoin: invalid address\""
															},
															"value": "RevoltCoin: invalid address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_abde4a8a179b075c2757f63dc76a9bd13de52babc04234150155d1395f84c84e",
																"typeString": "literal_string \"RevoltCoin: invalid address\""
															}
														],
														"id": 169,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2660:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 177,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2660:66:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 178,
												"nodeType": "ExpressionStatement",
												"src": "2660:66:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 184,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"expression": {
																		"id": 180,
																		"name": "newRecipient",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 164,
																		"src": "2823:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"id": 181,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2836:4:0",
																	"memberName": "code",
																	"nodeType": "MemberAccess",
																	"src": "2823:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																"id": 182,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2841:6:0",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "2823:24:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 183,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2851:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2823:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265766f6c74436f696e3a2066656520726563697069656e74206d75737420626520454f41",
															"id": 185,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2866:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_594ecc1988a2944fffb539907d9c82c812f8d36cd0dd70310ce39c57141f2636",
																"typeString": "literal_string \"RevoltCoin: fee recipient must be EOA\""
															},
															"value": "RevoltCoin: fee recipient must be EOA"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_594ecc1988a2944fffb539907d9c82c812f8d36cd0dd70310ce39c57141f2636",
																"typeString": "literal_string \"RevoltCoin: fee recipient must be EOA\""
															}
														],
														"id": 179,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2802:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 186,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2802:113:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 187,
												"nodeType": "ExpressionStatement",
												"src": "2802:113:0"
											},
											{
												"assignments": [
													189
												],
												"declarations": [
													{
														"constant": false,
														"id": 189,
														"mutability": "mutable",
														"name": "previous",
														"nameLocation": "2933:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 201,
														"src": "2925:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 188,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2925:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 191,
												"initialValue": {
													"id": 190,
													"name": "feeRecipient",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 25,
													"src": "2944:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2925:31:0"
											},
											{
												"expression": {
													"id": 194,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 192,
														"name": "feeRecipient",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 25,
														"src": "2966:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 193,
														"name": "newRecipient",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 164,
														"src": "2981:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2966:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 195,
												"nodeType": "ExpressionStatement",
												"src": "2966:27:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 197,
															"name": "previous",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 189,
															"src": "3028:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 198,
															"name": "newRecipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 164,
															"src": "3038:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 196,
														"name": "FeeRecipientUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 43,
														"src": "3008:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 199,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3008:43:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 200,
												"nodeType": "EmitStatement",
												"src": "3003:48:0"
											}
										]
									},
									"functionSelector": "e74b981b",
									"id": 202,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 167,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 166,
												"name": "onlyOwner",
												"nameLocations": [
													"2640:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 605,
												"src": "2640:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2640:9:0"
										}
									],
									"name": "setFeeRecipient",
									"nameLocation": "2593:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 165,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 164,
												"mutability": "mutable",
												"name": "newRecipient",
												"nameLocation": "2617:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 202,
												"src": "2609:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 163,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2609:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2608:22:0"
									},
									"returnParameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2650:0:0"
									},
									"scope": 573,
									"src": "2584:474:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 219,
										"nodeType": "Block",
										"src": "3147:89:0",
										"statements": [
											{
												"expression": {
													"id": 213,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 209,
															"name": "_isExcludedFromFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 29,
															"src": "3157:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 211,
														"indexExpression": {
															"id": 210,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 204,
															"src": "3176:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3157:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 212,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3187:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "3157:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 214,
												"nodeType": "ExpressionStatement",
												"src": "3157:34:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 216,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 204,
															"src": "3221:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 215,
														"name": "ExcludeFromFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 47,
														"src": "3206:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 217,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3206:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 218,
												"nodeType": "EmitStatement",
												"src": "3201:28:0"
											}
										]
									},
									"functionSelector": "437823ec",
									"id": 220,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 207,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 206,
												"name": "onlyOwner",
												"nameLocations": [
													"3137:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 605,
												"src": "3137:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "3137:9:0"
										}
									],
									"name": "excludeFromFee",
									"nameLocation": "3096:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3119:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 220,
												"src": "3111:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 203,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3111:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3110:17:0"
									},
									"returnParameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3147:0:0"
									},
									"scope": 573,
									"src": "3087:149:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 237,
										"nodeType": "Block",
										"src": "3300:88:0",
										"statements": [
											{
												"expression": {
													"id": 231,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 227,
															"name": "_isExcludedFromFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 29,
															"src": "3310:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 229,
														"indexExpression": {
															"id": 228,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 222,
															"src": "3329:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3310:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 230,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3340:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "3310:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 232,
												"nodeType": "ExpressionStatement",
												"src": "3310:35:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 234,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 222,
															"src": "3373:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 233,
														"name": "IncludeInFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 51,
														"src": "3360:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 235,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3360:21:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 236,
												"nodeType": "EmitStatement",
												"src": "3355:26:0"
											}
										]
									},
									"functionSelector": "ea2f0b37",
									"id": 238,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 225,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 224,
												"name": "onlyOwner",
												"nameLocations": [
													"3290:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 605,
												"src": "3290:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "3290:9:0"
										}
									],
									"name": "includeInFee",
									"nameLocation": "3251:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3272:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "3264:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3264:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3263:17:0"
									},
									"returnParameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3300:0:0"
									},
									"scope": 573,
									"src": "3242:146:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 266,
										"nodeType": "Block",
										"src": "3541:165:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 252,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 247,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 241,
																"src": "3559:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 250,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3579:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 249,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3571:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 248,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "3571:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 251,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3571:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "3559:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265766f6c74436f696e3a20696e76616c6964206e6577206f776e6572",
															"id": 253,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3583:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f40d0a2e892c264da38217576433c47dde07950da469267cc230af5b81742164",
																"typeString": "literal_string \"RevoltCoin: invalid new owner\""
															},
															"value": "RevoltCoin: invalid new owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f40d0a2e892c264da38217576433c47dde07950da469267cc230af5b81742164",
																"typeString": "literal_string \"RevoltCoin: invalid new owner\""
															}
														],
														"id": 246,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3551:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 254,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3551:64:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 255,
												"nodeType": "ExpressionStatement",
												"src": "3551:64:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 257,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 614,
																"src": "3643:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 258,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3643:7:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 259,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 241,
															"src": "3652:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 256,
														"name": "OwnerUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 57,
														"src": "3630:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 260,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3630:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 261,
												"nodeType": "EmitStatement",
												"src": "3625:36:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 263,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 241,
															"src": "3690:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 262,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 685,
														"src": "3671:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 264,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3671:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 265,
												"nodeType": "ExpressionStatement",
												"src": "3671:28:0"
											}
										]
									},
									"documentation": {
										"id": 239,
										"nodeType": "StructuredDocumentation",
										"src": "3394:82:0",
										"text": "@notice 安全转移合约所有权\n @param newOwner 新所有者地址"
									},
									"functionSelector": "1815c208",
									"id": 267,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 244,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 243,
												"name": "onlyOwner",
												"nameLocations": [
													"3531:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 605,
												"src": "3531:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "3531:9:0"
										}
									],
									"name": "ownerTransfer",
									"nameLocation": "3490:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 242,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "3512:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 267,
												"src": "3504:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 240,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3504:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3503:18:0"
									},
									"returnParameters": {
										"id": 245,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3541:0:0"
									},
									"scope": 573,
									"src": "3481:225:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1206
									],
									"body": {
										"id": 362,
										"nodeType": "Block",
										"src": "3941:711:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 286,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 281,
																"name": "sender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 270,
																"src": "3959:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 284,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3977:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 283,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3969:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 282,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "3969:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 285,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3969:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "3959:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265766f6c74436f696e3a207472616e736665722066726f6d207a65726f",
															"id": 287,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3981:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_06ff2b837c3a2691c149e6a15b0de39f8430c204bf83c71a33a83fc03c2ce434",
																"typeString": "literal_string \"RevoltCoin: transfer from zero\""
															},
															"value": "RevoltCoin: transfer from zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_06ff2b837c3a2691c149e6a15b0de39f8430c204bf83c71a33a83fc03c2ce434",
																"typeString": "literal_string \"RevoltCoin: transfer from zero\""
															}
														],
														"id": 280,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3951:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 288,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3951:63:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 289,
												"nodeType": "ExpressionStatement",
												"src": "3951:63:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 296,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 291,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 272,
																"src": "4032:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 294,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4053:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 293,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4045:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 292,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "4045:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 295,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4045:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "4032:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265766f6c74436f696e3a207472616e7366657220746f207a65726f",
															"id": 297,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4057:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1fe52789d0d7af2d15362e183c36f1797727ca5f188b9566e5b4f8664703b09d",
																"typeString": "literal_string \"RevoltCoin: transfer to zero\""
															},
															"value": "RevoltCoin: transfer to zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1fe52789d0d7af2d15362e183c36f1797727ca5f188b9566e5b4f8664703b09d",
																"typeString": "literal_string \"RevoltCoin: transfer to zero\""
															}
														],
														"id": 290,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4024:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 298,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4024:64:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 299,
												"nodeType": "ExpressionStatement",
												"src": "4024:64:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 319,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 314,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 309,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 302,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 300,
																	"name": "transferFeePercent",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 23,
																	"src": "4115:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 301,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4136:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "4115:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 308,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 303,
																	"name": "feeRecipient",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 25,
																	"src": "4153:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 306,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4177:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 305,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4169:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 304,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4169:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 307,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4169:10:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "4153:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "4115:64:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&&",
														"rightExpression": {
															"id": 313,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "4195:27:0",
															"subExpression": {
																"baseExpression": {
																	"id": 310,
																	"name": "_isExcludedFromFee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 29,
																	"src": "4196:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 312,
																"indexExpression": {
																	"id": 311,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 270,
																	"src": "4215:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "4196:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "4115:107:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 318,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "4238:30:0",
														"subExpression": {
															"baseExpression": {
																"id": 315,
																"name": "_isExcludedFromFee",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 29,
																"src": "4239:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																	"typeString": "mapping(address => bool)"
																}
															},
															"id": 317,
															"indexExpression": {
																"id": 316,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 272,
																"src": "4258:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4239:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4115:153:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 360,
													"nodeType": "Block",
													"src": "4579:67:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 355,
																		"name": "sender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 270,
																		"src": "4609:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 356,
																		"name": "recipient",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 272,
																		"src": "4617:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 357,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 274,
																		"src": "4628:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 352,
																		"name": "super",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967271,
																		"src": "4593:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_super$_RevoltCoin_$573_$",
																			"typeString": "type(contract super RevoltCoin)"
																		}
																	},
																	"id": 354,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4599:9:0",
																	"memberName": "_transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1206,
																	"src": "4593:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 358,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4593:42:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 359,
															"nodeType": "ExpressionStatement",
															"src": "4593:42:0"
														}
													]
												},
												"id": 361,
												"nodeType": "IfStatement",
												"src": "4098:548:0",
												"trueBody": {
													"id": 351,
													"nodeType": "Block",
													"src": "4279:294:0",
													"statements": [
														{
															"assignments": [
																321
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 321,
																	"mutability": "mutable",
																	"name": "fee",
																	"nameLocation": "4301:3:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 351,
																	"src": "4293:11:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 320,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "4293:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 328,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 327,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 324,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 322,
																				"name": "amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 274,
																				"src": "4308:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"id": 323,
																				"name": "transferFeePercent",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 23,
																				"src": "4317:18:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "4308:27:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 325,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "4307:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"hexValue": "313030",
																	"id": 326,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4339:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_100_by_1",
																		"typeString": "int_const 100"
																	},
																	"value": "100"
																},
																"src": "4307:35:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "4293:49:0"
														},
														{
															"assignments": [
																330
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 330,
																	"mutability": "mutable",
																	"name": "remaining",
																	"nameLocation": "4364:9:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 351,
																	"src": "4356:17:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 329,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "4356:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 334,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 333,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 331,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 274,
																	"src": "4376:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 332,
																	"name": "fee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 321,
																	"src": "4385:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4376:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "4356:32:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 338,
																		"name": "sender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 270,
																		"src": "4449:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 339,
																		"name": "feeRecipient",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 25,
																		"src": "4457:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 340,
																		"name": "fee",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 321,
																		"src": "4471:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 335,
																		"name": "super",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967271,
																		"src": "4433:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_super$_RevoltCoin_$573_$",
																			"typeString": "type(contract super RevoltCoin)"
																		}
																	},
																	"id": 337,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4439:9:0",
																	"memberName": "_transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1206,
																	"src": "4433:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 341,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4433:42:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 342,
															"nodeType": "ExpressionStatement",
															"src": "4433:42:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 346,
																		"name": "sender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 270,
																		"src": "4533:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 347,
																		"name": "recipient",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 272,
																		"src": "4541:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 348,
																		"name": "remaining",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 330,
																		"src": "4552:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 343,
																		"name": "super",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967271,
																		"src": "4517:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_super$_RevoltCoin_$573_$",
																			"typeString": "type(contract super RevoltCoin)"
																		}
																	},
																	"id": 345,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4523:9:0",
																	"memberName": "_transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1206,
																	"src": "4517:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 349,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4517:45:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 350,
															"nodeType": "ExpressionStatement",
															"src": "4517:45:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 268,
										"nodeType": "StructuredDocumentation",
										"src": "3712:92:0",
										"text": "@dev 重写内部转账逻辑，采用 Checks-Effects-Interactions 模式，防止重入"
									},
									"id": 363,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 278,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 277,
												"name": "whenNotPaused",
												"nameLocations": [
													"3927:13:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 721,
												"src": "3927:13:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "3927:13:0"
										}
									],
									"name": "_transfer",
									"nameLocation": "3818:9:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 276,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3918:8:0"
									},
									"parameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 270,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3845:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "3837:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 269,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3837:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 272,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "3869:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "3861:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 271,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3861:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3896:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "3888:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 273,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3888:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3827:81:0"
									},
									"returnParameters": {
										"id": 279,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3941:0:0"
									},
									"scope": 573,
									"src": "3809:843:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 372,
										"nodeType": "Block",
										"src": "4729:25:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 369,
														"name": "_pause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 777,
														"src": "4739:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 370,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4739:8:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 371,
												"nodeType": "ExpressionStatement",
												"src": "4739:8:0"
											}
										]
									},
									"documentation": {
										"id": 364,
										"nodeType": "StructuredDocumentation",
										"src": "4658:30:0",
										"text": "@notice 暂停所有转账"
									},
									"functionSelector": "8456cb59",
									"id": 373,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 367,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 366,
												"name": "onlyOwner",
												"nameLocations": [
													"4719:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 605,
												"src": "4719:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "4719:9:0"
										}
									],
									"name": "pause",
									"nameLocation": "4702:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 365,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4707:2:0"
									},
									"returnParameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4729:0:0"
									},
									"scope": 573,
									"src": "4693:61:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 382,
										"nodeType": "Block",
										"src": "4827:27:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 379,
														"name": "_unpause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 793,
														"src": "4837:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 380,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4837:10:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 381,
												"nodeType": "ExpressionStatement",
												"src": "4837:10:0"
											}
										]
									},
									"documentation": {
										"id": 374,
										"nodeType": "StructuredDocumentation",
										"src": "4760:24:0",
										"text": "@notice 恢复转账"
									},
									"functionSelector": "3f4ba83a",
									"id": 383,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 377,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 376,
												"name": "onlyOwner",
												"nameLocations": [
													"4817:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 605,
												"src": "4817:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "4817:9:0"
										}
									],
									"name": "unpause",
									"nameLocation": "4798:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 375,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4805:2:0"
									},
									"returnParameters": {
										"id": 378,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4827:0:0"
									},
									"scope": 573,
									"src": "4789:65:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1434
									],
									"body": {
										"id": 409,
										"nodeType": "Block",
										"src": "5036:132:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 397,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 386,
															"src": "5073:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 398,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 388,
															"src": "5079:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 399,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 390,
															"src": "5083:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 394,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "5046:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_RevoltCoin_$573_$",
																"typeString": "type(contract super RevoltCoin)"
															}
														},
														"id": 396,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5052:20:0",
														"memberName": "_beforeTokenTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1434,
														"src": "5046:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 400,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5046:44:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 401,
												"nodeType": "ExpressionStatement",
												"src": "5046:44:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 405,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "5108:9:0",
															"subExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 403,
																	"name": "paused",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 738,
																	"src": "5109:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																		"typeString": "function () view returns (bool)"
																	}
																},
																"id": 404,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5109:8:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265766f6c74436f696e3a20746f6b656e207472616e73666572207768696c6520706175736564",
															"id": 406,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5119:41:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9d18d00bc92e4e4805f27a8b4b8bfb1589f27d087a4178b7035486f9b373e88c",
																"typeString": "literal_string \"RevoltCoin: token transfer while paused\""
															},
															"value": "RevoltCoin: token transfer while paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9d18d00bc92e4e4805f27a8b4b8bfb1589f27d087a4178b7035486f9b373e88c",
																"typeString": "literal_string \"RevoltCoin: token transfer while paused\""
															}
														],
														"id": 402,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5100:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 407,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5100:61:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 408,
												"nodeType": "ExpressionStatement",
												"src": "5100:61:0"
											}
										]
									},
									"documentation": {
										"id": 384,
										"nodeType": "StructuredDocumentation",
										"src": "4860:51:0",
										"text": "@dev 在任何转账发生前检查暂停状态"
									},
									"id": 410,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nameLocation": "4925:20:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 392,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5027:8:0"
									},
									"parameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 386,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4963:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 410,
												"src": "4955:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 385,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4955:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4985:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 410,
												"src": "4977:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 387,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4977:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5005:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 410,
												"src": "4997:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 389,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4997:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4945:72:0"
									},
									"returnParameters": {
										"id": 393,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5036:0:0"
									},
									"scope": 573,
									"src": "4916:252:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										983
									],
									"body": {
										"id": 434,
										"nodeType": "Block",
										"src": "5347:73:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 426,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1561,
																"src": "5367:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 427,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5367:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 428,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 413,
															"src": "5381:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 429,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 415,
															"src": "5385:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 425,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															363
														],
														"referencedDeclaration": 363,
														"src": "5357:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 430,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5357:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 431,
												"nodeType": "ExpressionStatement",
												"src": "5357:35:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 432,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5409:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 424,
												"id": 433,
												"nodeType": "Return",
												"src": "5402:11:0"
											}
										]
									},
									"documentation": {
										"id": 411,
										"nodeType": "StructuredDocumentation",
										"src": "5174:42:0",
										"text": "@notice 防重入安全的转账接口"
									},
									"functionSelector": "a9059cbb",
									"id": 435,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 419,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 418,
												"name": "nonReentrant",
												"nameLocations": [
													"5305:12:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 824,
												"src": "5305:12:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "5305:12:0"
										},
										{
											"id": 421,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 420,
												"name": "whenNotPaused",
												"nameLocations": [
													"5318:13:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 721,
												"src": "5318:13:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "5318:13:0"
										}
									],
									"name": "transfer",
									"nameLocation": "5230:8:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 417,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5296:8:0"
									},
									"parameters": {
										"id": 416,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 413,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5256:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 435,
												"src": "5248:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 412,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5248:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 415,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5276:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 435,
												"src": "5268:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 414,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5268:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5238:50:0"
									},
									"returnParameters": {
										"id": 424,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 423,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 435,
												"src": "5341:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 422,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5341:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5340:6:0"
									},
									"scope": 573,
									"src": "5221:199:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1059
									],
									"body": {
										"id": 476,
										"nodeType": "Block",
										"src": "5578:185:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 457,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 452,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 439,
																"src": "5596:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 455,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5610:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 454,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5602:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 453,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "5602:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 456,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5602:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "5596:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265766f6c74436f696e3a207472616e7366657220746f207a65726f",
															"id": 458,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5614:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1fe52789d0d7af2d15362e183c36f1797727ca5f188b9566e5b4f8664703b09d",
																"typeString": "literal_string \"RevoltCoin: transfer to zero\""
															},
															"value": "RevoltCoin: transfer to zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1fe52789d0d7af2d15362e183c36f1797727ca5f188b9566e5b4f8664703b09d",
																"typeString": "literal_string \"RevoltCoin: transfer to zero\""
															}
														],
														"id": 451,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5588:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 459,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5588:57:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 460,
												"nodeType": "ExpressionStatement",
												"src": "5588:57:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 462,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 437,
															"src": "5671:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 463,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1561,
																"src": "5677:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 464,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5677:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 465,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 441,
															"src": "5691:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 461,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1423,
														"src": "5655:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 466,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5655:43:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 467,
												"nodeType": "ExpressionStatement",
												"src": "5655:43:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 469,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 437,
															"src": "5718:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 470,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 439,
															"src": "5724:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 471,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 441,
															"src": "5728:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 468,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															363
														],
														"referencedDeclaration": 363,
														"src": "5708:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 472,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5708:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 473,
												"nodeType": "ExpressionStatement",
												"src": "5708:27:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 474,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5752:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 450,
												"id": 475,
												"nodeType": "Return",
												"src": "5745:11:0"
											}
										]
									},
									"functionSelector": "23b872dd",
									"id": 477,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 445,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 444,
												"name": "nonReentrant",
												"nameLocations": [
													"5536:12:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 824,
												"src": "5536:12:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "5536:12:0"
										},
										{
											"id": 447,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 446,
												"name": "whenNotPaused",
												"nameLocations": [
													"5549:13:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 721,
												"src": "5549:13:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "5549:13:0"
										}
									],
									"name": "transferFrom",
									"nameLocation": "5435:12:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 443,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5527:8:0"
									},
									"parameters": {
										"id": 442,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 437,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5465:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 477,
												"src": "5457:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 436,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5457:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 439,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5487:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 477,
												"src": "5479:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 438,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5479:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 441,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5507:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 477,
												"src": "5499:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 440,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5499:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5447:72:0"
									},
									"returnParameters": {
										"id": 450,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 449,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 477,
												"src": "5572:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 448,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5572:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5571:6:0"
									},
									"scope": 573,
									"src": "5426:337:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 571,
										"nodeType": "Block",
										"src": "6092:654:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 495,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 492,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "6110:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 493,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6114:6:0",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "6110:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 494,
																"name": "deployer",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 31,
																"src": "6124:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "6110:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265766f6c74436f696e3a206f6e6c79206465706c6f7965722063616e2061697264726f70",
															"id": 496,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6134:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_15227e3bddab765d9bb4e7d7cdcfba4113a4a240234404a19bf52517f300a907",
																"typeString": "literal_string \"RevoltCoin: only deployer can airdrop\""
															},
															"value": "RevoltCoin: only deployer can airdrop"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_15227e3bddab765d9bb4e7d7cdcfba4113a4a240234404a19bf52517f300a907",
																"typeString": "literal_string \"RevoltCoin: only deployer can airdrop\""
															}
														],
														"id": 491,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6102:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 497,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6102:72:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 498,
												"nodeType": "ExpressionStatement",
												"src": "6102:72:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 504,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 500,
																	"name": "recipients",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 481,
																	"src": "6192:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																		"typeString": "address[] calldata"
																	}
																},
																"id": 501,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6203:6:0",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "6192:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 502,
																	"name": "amounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 484,
																	"src": "6213:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																		"typeString": "uint256[] calldata"
																	}
																},
																"id": 503,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6221:6:0",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "6213:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6192:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265766f6c74436f696e3a2061697264726f7020617272617973206d69736d61746368",
															"id": 505,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6229:37:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_dfdfe6b2c4737ccf9b5de38c5fa288f07b9e7b09f4ddf3349651879a31de197c",
																"typeString": "literal_string \"RevoltCoin: airdrop arrays mismatch\""
															},
															"value": "RevoltCoin: airdrop arrays mismatch"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_dfdfe6b2c4737ccf9b5de38c5fa288f07b9e7b09f4ddf3349651879a31de197c",
																"typeString": "literal_string \"RevoltCoin: airdrop arrays mismatch\""
															}
														],
														"id": 499,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6184:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 506,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6184:83:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 507,
												"nodeType": "ExpressionStatement",
												"src": "6184:83:0"
											},
											{
												"assignments": [
													509
												],
												"declarations": [
													{
														"constant": false,
														"id": 509,
														"mutability": "mutable",
														"name": "total",
														"nameLocation": "6285:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 571,
														"src": "6277:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 508,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6277:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 510,
												"nodeType": "VariableDeclarationStatement",
												"src": "6277:13:0"
											},
											{
												"body": {
													"id": 528,
													"nodeType": "Block",
													"src": "6375:44:0",
													"statements": [
														{
															"expression": {
																"id": 526,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 522,
																	"name": "total",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 509,
																	"src": "6389:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 523,
																		"name": "amounts",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 484,
																		"src": "6398:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																			"typeString": "uint256[] calldata"
																		}
																	},
																	"id": 525,
																	"indexExpression": {
																		"id": 524,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 512,
																		"src": "6406:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "6398:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6389:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 527,
															"nodeType": "ExpressionStatement",
															"src": "6389:19:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 518,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 515,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 512,
														"src": "6350:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 516,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 484,
															"src": "6354:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																"typeString": "uint256[] calldata"
															}
														},
														"id": 517,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6362:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "6354:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6350:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 529,
												"initializationExpression": {
													"assignments": [
														512
													],
													"declarations": [
														{
															"constant": false,
															"id": 512,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "6343:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 529,
															"src": "6335:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 511,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "6335:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 514,
													"initialValue": {
														"hexValue": "30",
														"id": 513,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6347:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "6335:13:0"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 520,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "6370:3:0",
														"subExpression": {
															"id": 519,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 512,
															"src": "6370:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 521,
													"nodeType": "ExpressionStatement",
													"src": "6370:3:0"
												},
												"nodeType": "ForStatement",
												"src": "6330:89:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 536,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 534,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 531,
																		"name": "totalSupply",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 944,
																		"src": "6478:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																			"typeString": "function () view returns (uint256)"
																		}
																	},
																	"id": 532,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6478:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 533,
																	"name": "total",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 509,
																	"src": "6494:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6478:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 535,
																"name": "MAX_SUPPLY",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 20,
																"src": "6503:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6478:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265766f6c74436f696e3a2065786365656473206d617820737570706c79",
															"id": 537,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6515:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c9413a64808d023ff99714f487ec1c68602a2e0a65fe8fb8d8342cfe90ada8f7",
																"typeString": "literal_string \"RevoltCoin: exceeds max supply\""
															},
															"value": "RevoltCoin: exceeds max supply"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c9413a64808d023ff99714f487ec1c68602a2e0a65fe8fb8d8342cfe90ada8f7",
																"typeString": "literal_string \"RevoltCoin: exceeds max supply\""
															}
														],
														"id": 530,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6470:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 538,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6470:78:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 539,
												"nodeType": "ExpressionStatement",
												"src": "6470:78:0"
											},
											{
												"body": {
													"id": 569,
													"nodeType": "Block",
													"src": "6630:110:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"baseExpression": {
																			"id": 552,
																			"name": "recipients",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 481,
																			"src": "6650:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																				"typeString": "address[] calldata"
																			}
																		},
																		"id": 554,
																		"indexExpression": {
																			"id": 553,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 541,
																			"src": "6661:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "6650:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"baseExpression": {
																			"id": 555,
																			"name": "amounts",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 484,
																			"src": "6665:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																				"typeString": "uint256[] calldata"
																			}
																		},
																		"id": 557,
																		"indexExpression": {
																			"id": 556,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 541,
																			"src": "6673:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "6665:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 551,
																	"name": "_mint",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1263,
																	"src": "6644:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256)"
																	}
																},
																"id": 558,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6644:32:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 559,
															"nodeType": "ExpressionStatement",
															"src": "6644:32:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"baseExpression": {
																			"id": 561,
																			"name": "recipients",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 481,
																			"src": "6703:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																				"typeString": "address[] calldata"
																			}
																		},
																		"id": 563,
																		"indexExpression": {
																			"id": 562,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 541,
																			"src": "6714:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "6703:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"baseExpression": {
																			"id": 564,
																			"name": "amounts",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 484,
																			"src": "6718:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																				"typeString": "uint256[] calldata"
																			}
																		},
																		"id": 566,
																		"indexExpression": {
																			"id": 565,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 541,
																			"src": "6726:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "6718:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 560,
																	"name": "Airdrop",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 63,
																	"src": "6695:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256)"
																	}
																},
																"id": 567,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6695:34:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 568,
															"nodeType": "EmitStatement",
															"src": "6690:39:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 547,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 544,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 541,
														"src": "6602:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 545,
															"name": "recipients",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 481,
															"src": "6606:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																"typeString": "address[] calldata"
															}
														},
														"id": 546,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6617:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "6606:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6602:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 570,
												"initializationExpression": {
													"assignments": [
														541
													],
													"declarations": [
														{
															"constant": false,
															"id": 541,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "6595:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 570,
															"src": "6587:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 540,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "6587:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 543,
													"initialValue": {
														"hexValue": "30",
														"id": 542,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6599:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "6587:13:0"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 549,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "6625:3:0",
														"subExpression": {
															"id": 548,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 541,
															"src": "6625:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 550,
													"nodeType": "ExpressionStatement",
													"src": "6625:3:0"
												},
												"nodeType": "ForStatement",
												"src": "6582:158:0"
											}
										]
									},
									"documentation": {
										"id": 478,
										"nodeType": "StructuredDocumentation",
										"src": "5769:178:0",
										"text": " @notice 批量空投代币给指定地址\n @param recipients 接收地址列表\n @param amounts 每个地址对应的空投数量（最小单位）"
									},
									"functionSelector": "67243482",
									"id": 572,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 487,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 486,
												"name": "nonReentrant",
												"nameLocations": [
													"6053:12:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 824,
												"src": "6053:12:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "6053:12:0"
										},
										{
											"id": 489,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 488,
												"name": "whenNotPaused",
												"nameLocations": [
													"6074:13:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 721,
												"src": "6074:13:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "6074:13:0"
										}
									],
									"name": "airdrop",
									"nameLocation": "5961:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 485,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 481,
												"mutability": "mutable",
												"name": "recipients",
												"nameLocation": "5988:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 572,
												"src": "5969:29:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 479,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "5969:7:0",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 480,
													"nodeType": "ArrayTypeName",
													"src": "5969:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 484,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "6019:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 572,
												"src": "6000:26:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 482,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "6000:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 483,
													"nodeType": "ArrayTypeName",
													"src": "6000:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5968:59:0"
									},
									"returnParameters": {
										"id": 490,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6092:0:0"
									},
									"scope": 573,
									"src": "5952:794:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 574,
							"src": "539:6209:0",
							"usedErrors": [],
							"usedEvents": [
								37,
								43,
								47,
								51,
								57,
								63,
								587,
								697,
								702,
								1458,
								1467
							]
						}
					],
					"src": "32:6717:0"
				},
				"id": 0
			},
			"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							1571
						],
						"Ownable": [
							686
						]
					},
					"id": 687,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 575,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "102:23:1"
						},
						{
							"absolutePath": "https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 576,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 687,
							"sourceUnit": 1572,
							"src": "127:30:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 578,
										"name": "Context",
										"nameLocations": [
											"683:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1571,
										"src": "683:7:1"
									},
									"id": 579,
									"nodeType": "InheritanceSpecifier",
									"src": "683:7:1"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 577,
								"nodeType": "StructuredDocumentation",
								"src": "159:494:1",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 686,
							"linearizedBaseContracts": [
								686,
								1571
							],
							"name": "Ownable",
							"nameLocation": "672:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 581,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "713:6:1",
									"nodeType": "VariableDeclaration",
									"scope": 686,
									"src": "697:22:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 580,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "697:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 587,
									"name": "OwnershipTransferred",
									"nameLocation": "732:20:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 586,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 583,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "769:13:1",
												"nodeType": "VariableDeclaration",
												"scope": 587,
												"src": "753:29:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 582,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "753:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 585,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "800:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 587,
												"src": "784:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 584,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "784:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "752:57:1"
									},
									"src": "726:84:1"
								},
								{
									"body": {
										"id": 596,
										"nodeType": "Block",
										"src": "926:49:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 592,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1561,
																"src": "955:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 593,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "955:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 591,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 685,
														"src": "936:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 594,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "936:32:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 595,
												"nodeType": "ExpressionStatement",
												"src": "936:32:1"
											}
										]
									},
									"documentation": {
										"id": 588,
										"nodeType": "StructuredDocumentation",
										"src": "816:91:1",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 597,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 589,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "923:2:1"
									},
									"returnParameters": {
										"id": 590,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "926:0:1"
									},
									"scope": 686,
									"src": "912:63:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 604,
										"nodeType": "Block",
										"src": "1084:41:1",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 600,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 628,
														"src": "1094:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 601,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1094:13:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 602,
												"nodeType": "ExpressionStatement",
												"src": "1094:13:1"
											},
											{
												"id": 603,
												"nodeType": "PlaceholderStatement",
												"src": "1117:1:1"
											}
										]
									},
									"documentation": {
										"id": 598,
										"nodeType": "StructuredDocumentation",
										"src": "981:77:1",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 605,
									"name": "onlyOwner",
									"nameLocation": "1072:9:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 599,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1081:2:1"
									},
									"src": "1063:62:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 613,
										"nodeType": "Block",
										"src": "1256:30:1",
										"statements": [
											{
												"expression": {
													"id": 611,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 581,
													"src": "1273:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 610,
												"id": 612,
												"nodeType": "Return",
												"src": "1266:13:1"
											}
										]
									},
									"documentation": {
										"id": 606,
										"nodeType": "StructuredDocumentation",
										"src": "1131:65:1",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 614,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1210:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 607,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1215:2:1"
									},
									"returnParameters": {
										"id": 610,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 614,
												"src": "1247:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 608,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1247:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1246:9:1"
									},
									"scope": 686,
									"src": "1201:85:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 627,
										"nodeType": "Block",
										"src": "1404:85:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 623,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 619,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 614,
																	"src": "1422:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 620,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1422:7:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 621,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1561,
																	"src": "1433:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 622,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1433:12:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1422:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 624,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1447:34:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 618,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1414:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 625,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1414:68:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 626,
												"nodeType": "ExpressionStatement",
												"src": "1414:68:1"
											}
										]
									},
									"documentation": {
										"id": 615,
										"nodeType": "StructuredDocumentation",
										"src": "1292:62:1",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 628,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1368:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 616,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1379:2:1"
									},
									"returnParameters": {
										"id": 617,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1404:0:1"
									},
									"scope": 686,
									"src": "1359:130:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 641,
										"nodeType": "Block",
										"src": "1878:47:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 637,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1915:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 636,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1907:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 635,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1907:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 638,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1907:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 634,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 685,
														"src": "1888:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 639,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1888:30:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 640,
												"nodeType": "ExpressionStatement",
												"src": "1888:30:1"
											}
										]
									},
									"documentation": {
										"id": 629,
										"nodeType": "StructuredDocumentation",
										"src": "1495:324:1",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 642,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 632,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 631,
												"name": "onlyOwner",
												"nameLocations": [
													"1868:9:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 605,
												"src": "1868:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "1868:9:1"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1833:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 630,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1850:2:1"
									},
									"returnParameters": {
										"id": 633,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1878:0:1"
									},
									"scope": 686,
									"src": "1824:101:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 664,
										"nodeType": "Block",
										"src": "2144:128:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 656,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 651,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 645,
																"src": "2162:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 654,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2182:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 653,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2174:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 652,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2174:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 655,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2174:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2162:22:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 657,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2186:40:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 650,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2154:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 658,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2154:73:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 659,
												"nodeType": "ExpressionStatement",
												"src": "2154:73:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 661,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 645,
															"src": "2256:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 660,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 685,
														"src": "2237:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 662,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2237:28:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 663,
												"nodeType": "ExpressionStatement",
												"src": "2237:28:1"
											}
										]
									},
									"documentation": {
										"id": 643,
										"nodeType": "StructuredDocumentation",
										"src": "1931:138:1",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 665,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 648,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 647,
												"name": "onlyOwner",
												"nameLocations": [
													"2134:9:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 605,
												"src": "2134:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "2134:9:1"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2083:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 646,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 645,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2109:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 665,
												"src": "2101:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 644,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2101:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2100:18:1"
									},
									"returnParameters": {
										"id": 649,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2144:0:1"
									},
									"scope": 686,
									"src": "2074:198:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 684,
										"nodeType": "Block",
										"src": "2489:124:1",
										"statements": [
											{
												"assignments": [
													672
												],
												"declarations": [
													{
														"constant": false,
														"id": 672,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2507:8:1",
														"nodeType": "VariableDeclaration",
														"scope": 684,
														"src": "2499:16:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 671,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2499:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 674,
												"initialValue": {
													"id": 673,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 581,
													"src": "2518:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2499:25:1"
											},
											{
												"expression": {
													"id": 677,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 675,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 581,
														"src": "2534:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 676,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 668,
														"src": "2543:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2534:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 678,
												"nodeType": "ExpressionStatement",
												"src": "2534:17:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 680,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 672,
															"src": "2587:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 681,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 668,
															"src": "2597:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 679,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 587,
														"src": "2566:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 682,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2566:40:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 683,
												"nodeType": "EmitStatement",
												"src": "2561:45:1"
											}
										]
									},
									"documentation": {
										"id": 666,
										"nodeType": "StructuredDocumentation",
										"src": "2278:143:1",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 685,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2435:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 669,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 668,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2462:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 685,
												"src": "2454:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 667,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2454:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2453:18:1"
									},
									"returnParameters": {
										"id": 670,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2489:0:1"
									},
									"scope": 686,
									"src": "2426:187:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 687,
							"src": "654:1961:1",
							"usedErrors": [],
							"usedEvents": [
								587
							]
						}
					],
					"src": "102:2514:1"
				},
				"id": 1
			},
			"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/security/Pausable.sol": {
				"ast": {
					"absolutePath": "https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/security/Pausable.sol",
					"exportedSymbols": {
						"Context": [
							1571
						],
						"Pausable": [
							794
						]
					},
					"id": 795,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 688,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "105:23:2"
						},
						{
							"absolutePath": "https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 689,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 795,
							"sourceUnit": 1572,
							"src": "130:30:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 691,
										"name": "Context",
										"nameLocations": [
											"632:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1571,
										"src": "632:7:2"
									},
									"id": 692,
									"nodeType": "InheritanceSpecifier",
									"src": "632:7:2"
								}
							],
							"canonicalName": "Pausable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 690,
								"nodeType": "StructuredDocumentation",
								"src": "162:439:2",
								"text": " @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."
							},
							"fullyImplemented": true,
							"id": 794,
							"linearizedBaseContracts": [
								794,
								1571
							],
							"name": "Pausable",
							"nameLocation": "620:8:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 693,
										"nodeType": "StructuredDocumentation",
										"src": "646:73:2",
										"text": " @dev Emitted when the pause is triggered by `account`."
									},
									"eventSelector": "62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258",
									"id": 697,
									"name": "Paused",
									"nameLocation": "730:6:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 696,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 695,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "745:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 697,
												"src": "737:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 694,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "737:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "736:17:2"
									},
									"src": "724:30:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 698,
										"nodeType": "StructuredDocumentation",
										"src": "760:70:2",
										"text": " @dev Emitted when the pause is lifted by `account`."
									},
									"eventSelector": "5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa",
									"id": 702,
									"name": "Unpaused",
									"nameLocation": "841:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 701,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 700,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "858:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 702,
												"src": "850:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 699,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "850:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "849:17:2"
									},
									"src": "835:32:2"
								},
								{
									"constant": false,
									"id": 704,
									"mutability": "mutable",
									"name": "_paused",
									"nameLocation": "886:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 794,
									"src": "873:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 703,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "873:4:2",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 712,
										"nodeType": "Block",
										"src": "986:32:2",
										"statements": [
											{
												"expression": {
													"id": 710,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 708,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 704,
														"src": "996:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 709,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1006:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "996:15:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 711,
												"nodeType": "ExpressionStatement",
												"src": "996:15:2"
											}
										]
									},
									"documentation": {
										"id": 705,
										"nodeType": "StructuredDocumentation",
										"src": "900:67:2",
										"text": " @dev Initializes the contract in unpaused state."
									},
									"id": 713,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 706,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "983:2:2"
									},
									"returnParameters": {
										"id": 707,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "986:0:2"
									},
									"scope": 794,
									"src": "972:46:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 720,
										"nodeType": "Block",
										"src": "1229:47:2",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 716,
														"name": "_requireNotPaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 750,
														"src": "1239:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 717,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1239:19:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 718,
												"nodeType": "ExpressionStatement",
												"src": "1239:19:2"
											},
											{
												"id": 719,
												"nodeType": "PlaceholderStatement",
												"src": "1268:1:2"
											}
										]
									},
									"documentation": {
										"id": 714,
										"nodeType": "StructuredDocumentation",
										"src": "1024:175:2",
										"text": " @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."
									},
									"id": 721,
									"name": "whenNotPaused",
									"nameLocation": "1213:13:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 715,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1226:2:2"
									},
									"src": "1204:72:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 728,
										"nodeType": "Block",
										"src": "1476:44:2",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 724,
														"name": "_requirePaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 761,
														"src": "1486:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 725,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1486:16:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 726,
												"nodeType": "ExpressionStatement",
												"src": "1486:16:2"
											},
											{
												"id": 727,
												"nodeType": "PlaceholderStatement",
												"src": "1512:1:2"
											}
										]
									},
									"documentation": {
										"id": 722,
										"nodeType": "StructuredDocumentation",
										"src": "1282:167:2",
										"text": " @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."
									},
									"id": 729,
									"name": "whenPaused",
									"nameLocation": "1463:10:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 723,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1473:2:2"
									},
									"src": "1454:66:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 737,
										"nodeType": "Block",
										"src": "1668:31:2",
										"statements": [
											{
												"expression": {
													"id": 735,
													"name": "_paused",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 704,
													"src": "1685:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 734,
												"id": 736,
												"nodeType": "Return",
												"src": "1678:14:2"
											}
										]
									},
									"documentation": {
										"id": 730,
										"nodeType": "StructuredDocumentation",
										"src": "1526:84:2",
										"text": " @dev Returns true if the contract is paused, and false otherwise."
									},
									"functionSelector": "5c975abb",
									"id": 738,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "paused",
									"nameLocation": "1624:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 731,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1630:2:2"
									},
									"returnParameters": {
										"id": 734,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 733,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 738,
												"src": "1662:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 732,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1662:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1661:6:2"
									},
									"scope": 794,
									"src": "1615:84:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 749,
										"nodeType": "Block",
										"src": "1818:55:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 745,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "1836:9:2",
															"subExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 743,
																	"name": "paused",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 738,
																	"src": "1837:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																		"typeString": "function () view returns (bool)"
																	}
																},
																"id": 744,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1837:8:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5061757361626c653a20706175736564",
															"id": 746,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1847:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																"typeString": "literal_string \"Pausable: paused\""
															},
															"value": "Pausable: paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																"typeString": "literal_string \"Pausable: paused\""
															}
														],
														"id": 742,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1828:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 747,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1828:38:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 748,
												"nodeType": "ExpressionStatement",
												"src": "1828:38:2"
											}
										]
									},
									"documentation": {
										"id": 739,
										"nodeType": "StructuredDocumentation",
										"src": "1705:57:2",
										"text": " @dev Throws if the contract is paused."
									},
									"id": 750,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requireNotPaused",
									"nameLocation": "1776:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 740,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1793:2:2"
									},
									"returnParameters": {
										"id": 741,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1818:0:2"
									},
									"scope": 794,
									"src": "1767:106:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 760,
										"nodeType": "Block",
										"src": "1993:58:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 755,
																"name": "paused",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 738,
																"src": "2011:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																	"typeString": "function () view returns (bool)"
																}
															},
															"id": 756,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2011:8:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5061757361626c653a206e6f7420706175736564",
															"id": 757,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2021:22:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																"typeString": "literal_string \"Pausable: not paused\""
															},
															"value": "Pausable: not paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																"typeString": "literal_string \"Pausable: not paused\""
															}
														],
														"id": 754,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2003:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 758,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2003:41:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 759,
												"nodeType": "ExpressionStatement",
												"src": "2003:41:2"
											}
										]
									},
									"documentation": {
										"id": 751,
										"nodeType": "StructuredDocumentation",
										"src": "1879:61:2",
										"text": " @dev Throws if the contract is not paused."
									},
									"id": 761,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requirePaused",
									"nameLocation": "1954:14:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 752,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1968:2:2"
									},
									"returnParameters": {
										"id": 753,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1993:0:2"
									},
									"scope": 794,
									"src": "1945:106:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 776,
										"nodeType": "Block",
										"src": "2235:66:2",
										"statements": [
											{
												"expression": {
													"id": 769,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 767,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 704,
														"src": "2245:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 768,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2255:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "2245:14:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 770,
												"nodeType": "ExpressionStatement",
												"src": "2245:14:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 772,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1561,
																"src": "2281:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 773,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2281:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 771,
														"name": "Paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 697,
														"src": "2274:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 774,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2274:20:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 775,
												"nodeType": "EmitStatement",
												"src": "2269:25:2"
											}
										]
									},
									"documentation": {
										"id": 762,
										"nodeType": "StructuredDocumentation",
										"src": "2057:124:2",
										"text": " @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."
									},
									"id": 777,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 765,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 764,
												"name": "whenNotPaused",
												"nameLocations": [
													"2221:13:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 721,
												"src": "2221:13:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "2221:13:2"
										}
									],
									"name": "_pause",
									"nameLocation": "2195:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 763,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2201:2:2"
									},
									"returnParameters": {
										"id": 766,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2235:0:2"
									},
									"scope": 794,
									"src": "2186:115:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 792,
										"nodeType": "Block",
										"src": "2481:69:2",
										"statements": [
											{
												"expression": {
													"id": 785,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 783,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 704,
														"src": "2491:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 784,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2501:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "2491:15:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 786,
												"nodeType": "ExpressionStatement",
												"src": "2491:15:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 788,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1561,
																"src": "2530:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 789,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2530:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 787,
														"name": "Unpaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 702,
														"src": "2521:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 790,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2521:22:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 791,
												"nodeType": "EmitStatement",
												"src": "2516:27:2"
											}
										]
									},
									"documentation": {
										"id": 778,
										"nodeType": "StructuredDocumentation",
										"src": "2307:121:2",
										"text": " @dev Returns to normal state.\n Requirements:\n - The contract must be paused."
									},
									"id": 793,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 781,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 780,
												"name": "whenPaused",
												"nameLocations": [
													"2470:10:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 729,
												"src": "2470:10:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "2470:10:2"
										}
									],
									"name": "_unpause",
									"nameLocation": "2442:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 779,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2450:2:2"
									},
									"returnParameters": {
										"id": 782,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2481:0:2"
									},
									"scope": 794,
									"src": "2433:117:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 795,
							"src": "602:1950:2",
							"usedErrors": [],
							"usedEvents": [
								697,
								702
							]
						}
					],
					"src": "105:2448:2"
				},
				"id": 2
			},
			"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/security/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/security/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							859
						]
					},
					"id": 860,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 796,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "112:23:3"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 797,
								"nodeType": "StructuredDocumentation",
								"src": "137:750:3",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 859,
							"linearizedBaseContracts": [
								859
							],
							"name": "ReentrancyGuard",
							"nameLocation": "906:15:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 800,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1701:12:3",
									"nodeType": "VariableDeclaration",
									"scope": 859,
									"src": "1676:41:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 798,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1676:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 799,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1716:1:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 803,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1748:8:3",
									"nodeType": "VariableDeclaration",
									"scope": 859,
									"src": "1723:37:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 801,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1723:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 802,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1759:1:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 805,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1783:7:3",
									"nodeType": "VariableDeclaration",
									"scope": 859,
									"src": "1767:23:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 804,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1767:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 812,
										"nodeType": "Block",
										"src": "1811:39:3",
										"statements": [
											{
												"expression": {
													"id": 810,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 808,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 805,
														"src": "1821:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 809,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 800,
														"src": "1831:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1821:22:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 811,
												"nodeType": "ExpressionStatement",
												"src": "1821:22:3"
											}
										]
									},
									"id": 813,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 806,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1808:2:3"
									},
									"returnParameters": {
										"id": 807,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1811:0:3"
									},
									"scope": 859,
									"src": "1797:53:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 823,
										"nodeType": "Block",
										"src": "2251:79:3",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 816,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 839,
														"src": "2261:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 817,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2261:21:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 818,
												"nodeType": "ExpressionStatement",
												"src": "2261:21:3"
											},
											{
												"id": 819,
												"nodeType": "PlaceholderStatement",
												"src": "2292:1:3"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 820,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 847,
														"src": "2303:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 821,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2303:20:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 822,
												"nodeType": "ExpressionStatement",
												"src": "2303:20:3"
											}
										]
									},
									"documentation": {
										"id": 814,
										"nodeType": "StructuredDocumentation",
										"src": "1856:366:3",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 824,
									"name": "nonReentrant",
									"nameLocation": "2236:12:3",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 815,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2248:2:3"
									},
									"src": "2227:103:3",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 838,
										"nodeType": "Block",
										"src": "2375:248:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 830,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 828,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 805,
																"src": "2468:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 829,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 803,
																"src": "2479:8:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2468:19:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 831,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2489:33:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 827,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2460:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 832,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2460:63:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 833,
												"nodeType": "ExpressionStatement",
												"src": "2460:63:3"
											},
											{
												"expression": {
													"id": 836,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 834,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 805,
														"src": "2598:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 835,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 803,
														"src": "2608:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2598:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 837,
												"nodeType": "ExpressionStatement",
												"src": "2598:18:3"
											}
										]
									},
									"id": 839,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nameLocation": "2345:19:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 825,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2364:2:3"
									},
									"returnParameters": {
										"id": 826,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2375:0:3"
									},
									"scope": 859,
									"src": "2336:287:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 846,
										"nodeType": "Block",
										"src": "2667:171:3",
										"statements": [
											{
												"expression": {
													"id": 844,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 842,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 805,
														"src": "2809:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 843,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 800,
														"src": "2819:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2809:22:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 845,
												"nodeType": "ExpressionStatement",
												"src": "2809:22:3"
											}
										]
									},
									"id": 847,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nameLocation": "2638:18:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 840,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2656:2:3"
									},
									"returnParameters": {
										"id": 841,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2667:0:3"
									},
									"scope": 859,
									"src": "2629:209:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 857,
										"nodeType": "Block",
										"src": "3081:43:3",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 855,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 853,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 805,
														"src": "3098:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 854,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 803,
														"src": "3109:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3098:19:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 852,
												"id": 856,
												"nodeType": "Return",
												"src": "3091:26:3"
											}
										]
									},
									"documentation": {
										"id": 848,
										"nodeType": "StructuredDocumentation",
										"src": "2844:168:3",
										"text": " @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."
									},
									"id": 858,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_reentrancyGuardEntered",
									"nameLocation": "3026:23:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 849,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3049:2:3"
									},
									"returnParameters": {
										"id": 852,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 851,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 858,
												"src": "3075:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 850,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3075:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3074:6:3"
									},
									"scope": 859,
									"src": "3017:107:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 860,
							"src": "888:2238:3",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "112:3015:3"
				},
				"id": 3
			},
			"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							1571
						],
						"ERC20": [
							1446
						],
						"IERC20": [
							1524
						],
						"IERC20Metadata": [
							1549
						]
					},
					"id": 1447,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 861,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "105:23:4"
						},
						{
							"absolutePath": "https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 862,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1447,
							"sourceUnit": 1525,
							"src": "130:22:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 863,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1447,
							"sourceUnit": 1550,
							"src": "153:41:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 864,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1447,
							"sourceUnit": 1572,
							"src": "195:33:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 866,
										"name": "Context",
										"nameLocations": [
											"1550:7:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1571,
										"src": "1550:7:4"
									},
									"id": 867,
									"nodeType": "InheritanceSpecifier",
									"src": "1550:7:4"
								},
								{
									"baseName": {
										"id": 868,
										"name": "IERC20",
										"nameLocations": [
											"1559:6:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1524,
										"src": "1559:6:4"
									},
									"id": 869,
									"nodeType": "InheritanceSpecifier",
									"src": "1559:6:4"
								},
								{
									"baseName": {
										"id": 870,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1567:14:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1549,
										"src": "1567:14:4"
									},
									"id": 871,
									"nodeType": "InheritanceSpecifier",
									"src": "1567:14:4"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 865,
								"nodeType": "StructuredDocumentation",
								"src": "230:1301:4",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n For a generic mechanism see {ERC20PresetMinterPauser}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification.\n Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n functions have been added to mitigate the well-known issues around setting\n allowances. See {IERC20-approve}."
							},
							"fullyImplemented": true,
							"id": 1446,
							"linearizedBaseContracts": [
								1446,
								1549,
								1524,
								1571
							],
							"name": "ERC20",
							"nameLocation": "1541:5:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 875,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1624:9:4",
									"nodeType": "VariableDeclaration",
									"scope": 1446,
									"src": "1588:45:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 874,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 872,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1596:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1588:27:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 873,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1607:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 881,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1696:11:4",
									"nodeType": "VariableDeclaration",
									"scope": 1446,
									"src": "1640:67:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 880,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 876,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1648:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1640:47:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 879,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 877,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1667:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1659:27:4",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 878,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1678:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 883,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1730:12:4",
									"nodeType": "VariableDeclaration",
									"scope": 1446,
									"src": "1714:28:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 882,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1714:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 885,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1764:5:4",
									"nodeType": "VariableDeclaration",
									"scope": 1446,
									"src": "1749:20:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 884,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1749:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 887,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1790:7:4",
									"nodeType": "VariableDeclaration",
									"scope": 1446,
									"src": "1775:22:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 886,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1775:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 903,
										"nodeType": "Block",
										"src": "2036:57:4",
										"statements": [
											{
												"expression": {
													"id": 897,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 895,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 885,
														"src": "2046:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 896,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 890,
														"src": "2054:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2046:13:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 898,
												"nodeType": "ExpressionStatement",
												"src": "2046:13:4"
											},
											{
												"expression": {
													"id": 901,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 899,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 887,
														"src": "2069:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 900,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 892,
														"src": "2079:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2069:17:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 902,
												"nodeType": "ExpressionStatement",
												"src": "2069:17:4"
											}
										]
									},
									"documentation": {
										"id": 888,
										"nodeType": "StructuredDocumentation",
										"src": "1804:171:4",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 904,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 893,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 890,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "2006:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 904,
												"src": "1992:19:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 889,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1992:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 892,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "2027:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 904,
												"src": "2013:21:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 891,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2013:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1991:44:4"
									},
									"returnParameters": {
										"id": 894,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2036:0:4"
									},
									"scope": 1446,
									"src": "1980:113:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1536
									],
									"body": {
										"id": 913,
										"nodeType": "Block",
										"src": "2227:29:4",
										"statements": [
											{
												"expression": {
													"id": 911,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 885,
													"src": "2244:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 910,
												"id": 912,
												"nodeType": "Return",
												"src": "2237:12:4"
											}
										]
									},
									"documentation": {
										"id": 905,
										"nodeType": "StructuredDocumentation",
										"src": "2099:54:4",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 914,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2167:4:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 907,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2194:8:4"
									},
									"parameters": {
										"id": 906,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2171:2:4"
									},
									"returnParameters": {
										"id": 910,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 909,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 914,
												"src": "2212:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 908,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2212:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2211:15:4"
									},
									"scope": 1446,
									"src": "2158:98:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1542
									],
									"body": {
										"id": 923,
										"nodeType": "Block",
										"src": "2440:31:4",
										"statements": [
											{
												"expression": {
													"id": 921,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 887,
													"src": "2457:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 920,
												"id": 922,
												"nodeType": "Return",
												"src": "2450:14:4"
											}
										]
									},
									"documentation": {
										"id": 915,
										"nodeType": "StructuredDocumentation",
										"src": "2262:102:4",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 924,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2378:6:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 917,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2407:8:4"
									},
									"parameters": {
										"id": 916,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2384:2:4"
									},
									"returnParameters": {
										"id": 920,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 919,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 924,
												"src": "2425:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 918,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2425:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2424:15:4"
									},
									"scope": 1446,
									"src": "2369:102:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1548
									],
									"body": {
										"id": 933,
										"nodeType": "Block",
										"src": "3169:26:4",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 931,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3186:2:4",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 930,
												"id": 932,
												"nodeType": "Return",
												"src": "3179:9:4"
											}
										]
									},
									"documentation": {
										"id": 925,
										"nodeType": "StructuredDocumentation",
										"src": "2477:622:4",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 934,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3113:8:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 927,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3144:8:4"
									},
									"parameters": {
										"id": 926,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3121:2:4"
									},
									"returnParameters": {
										"id": 930,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 929,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 934,
												"src": "3162:5:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 928,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3162:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3161:7:4"
									},
									"scope": 1446,
									"src": "3104:91:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1473
									],
									"body": {
										"id": 943,
										"nodeType": "Block",
										"src": "3325:36:4",
										"statements": [
											{
												"expression": {
													"id": 941,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 883,
													"src": "3342:12:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 940,
												"id": 942,
												"nodeType": "Return",
												"src": "3335:19:4"
											}
										]
									},
									"documentation": {
										"id": 935,
										"nodeType": "StructuredDocumentation",
										"src": "3201:49:4",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 944,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "3264:11:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 937,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3298:8:4"
									},
									"parameters": {
										"id": 936,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3275:2:4"
									},
									"returnParameters": {
										"id": 940,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 939,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 944,
												"src": "3316:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 938,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3316:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3315:9:4"
									},
									"scope": 1446,
									"src": "3255:106:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1481
									],
									"body": {
										"id": 957,
										"nodeType": "Block",
										"src": "3502:42:4",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 953,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 875,
														"src": "3519:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 955,
													"indexExpression": {
														"id": 954,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 947,
														"src": "3529:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3519:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 952,
												"id": 956,
												"nodeType": "Return",
												"src": "3512:25:4"
											}
										]
									},
									"documentation": {
										"id": 945,
										"nodeType": "StructuredDocumentation",
										"src": "3367:47:4",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 958,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3428:9:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 949,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3475:8:4"
									},
									"parameters": {
										"id": 948,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 947,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3446:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 958,
												"src": "3438:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 946,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3438:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3437:17:4"
									},
									"returnParameters": {
										"id": 952,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 951,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 958,
												"src": "3493:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 950,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3493:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3492:9:4"
									},
									"scope": 1446,
									"src": "3419:125:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1491
									],
									"body": {
										"id": 982,
										"nodeType": "Block",
										"src": "3825:104:4",
										"statements": [
											{
												"assignments": [
													970
												],
												"declarations": [
													{
														"constant": false,
														"id": 970,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3843:5:4",
														"nodeType": "VariableDeclaration",
														"scope": 982,
														"src": "3835:13:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 969,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3835:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 973,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 971,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1561,
														"src": "3851:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 972,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3851:12:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3835:28:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 975,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 970,
															"src": "3883:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 976,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 961,
															"src": "3890:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 977,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 963,
															"src": "3894:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 974,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1206,
														"src": "3873:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 978,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3873:28:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 979,
												"nodeType": "ExpressionStatement",
												"src": "3873:28:4"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 980,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3918:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 968,
												"id": 981,
												"nodeType": "Return",
												"src": "3911:11:4"
											}
										]
									},
									"documentation": {
										"id": 959,
										"nodeType": "StructuredDocumentation",
										"src": "3550:185:4",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `amount`."
									},
									"functionSelector": "a9059cbb",
									"id": 983,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3749:8:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 965,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3801:8:4"
									},
									"parameters": {
										"id": 964,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 961,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3766:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 983,
												"src": "3758:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 960,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3758:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 963,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3778:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 983,
												"src": "3770:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 962,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3770:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3757:28:4"
									},
									"returnParameters": {
										"id": 968,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 967,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 983,
												"src": "3819:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 966,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3819:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3818:6:4"
									},
									"scope": 1446,
									"src": "3740:189:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1501
									],
									"body": {
										"id": 1000,
										"nodeType": "Block",
										"src": "4085:51:4",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 994,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 881,
															"src": "4102:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 996,
														"indexExpression": {
															"id": 995,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 986,
															"src": "4114:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4102:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 998,
													"indexExpression": {
														"id": 997,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 988,
														"src": "4121:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4102:27:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 993,
												"id": 999,
												"nodeType": "Return",
												"src": "4095:34:4"
											}
										]
									},
									"documentation": {
										"id": 984,
										"nodeType": "StructuredDocumentation",
										"src": "3935:47:4",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 1001,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3996:9:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 990,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4058:8:4"
									},
									"parameters": {
										"id": 989,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 986,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4014:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1001,
												"src": "4006:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 985,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4006:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 988,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4029:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1001,
												"src": "4021:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 987,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4021:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4005:32:4"
									},
									"returnParameters": {
										"id": 993,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 992,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1001,
												"src": "4076:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 991,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4076:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4075:9:4"
									},
									"scope": 1446,
									"src": "3987:149:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1511
									],
									"body": {
										"id": 1025,
										"nodeType": "Block",
										"src": "4533:108:4",
										"statements": [
											{
												"assignments": [
													1013
												],
												"declarations": [
													{
														"constant": false,
														"id": 1013,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4551:5:4",
														"nodeType": "VariableDeclaration",
														"scope": 1025,
														"src": "4543:13:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1012,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4543:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1016,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1014,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1561,
														"src": "4559:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 1015,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4559:12:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4543:28:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1018,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1013,
															"src": "4590:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1019,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1004,
															"src": "4597:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1020,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1006,
															"src": "4606:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1017,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1380,
														"src": "4581:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1021,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4581:32:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1022,
												"nodeType": "ExpressionStatement",
												"src": "4581:32:4"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1023,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4630:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1011,
												"id": 1024,
												"nodeType": "Return",
												"src": "4623:11:4"
											}
										]
									},
									"documentation": {
										"id": 1002,
										"nodeType": "StructuredDocumentation",
										"src": "4142:297:4",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 1026,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4453:7:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1008,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4509:8:4"
									},
									"parameters": {
										"id": 1007,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1004,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4469:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1026,
												"src": "4461:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1003,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4461:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1006,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4486:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1026,
												"src": "4478:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1005,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4478:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4460:33:4"
									},
									"returnParameters": {
										"id": 1011,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1010,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1026,
												"src": "4527:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1009,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4527:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4526:6:4"
									},
									"scope": 1446,
									"src": "4444:197:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1523
									],
									"body": {
										"id": 1058,
										"nodeType": "Block",
										"src": "5306:153:4",
										"statements": [
											{
												"assignments": [
													1040
												],
												"declarations": [
													{
														"constant": false,
														"id": 1040,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "5324:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 1058,
														"src": "5316:15:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1039,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5316:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1043,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1041,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1561,
														"src": "5334:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 1042,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5334:12:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5316:30:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1045,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1029,
															"src": "5372:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1046,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1040,
															"src": "5378:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1047,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1033,
															"src": "5387:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1044,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1423,
														"src": "5356:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1048,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5356:38:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1049,
												"nodeType": "ExpressionStatement",
												"src": "5356:38:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1051,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1029,
															"src": "5414:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1052,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1031,
															"src": "5420:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1053,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1033,
															"src": "5424:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1050,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1206,
														"src": "5404:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1054,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5404:27:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1055,
												"nodeType": "ExpressionStatement",
												"src": "5404:27:4"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1056,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5448:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1038,
												"id": 1057,
												"nodeType": "Return",
												"src": "5441:11:4"
											}
										]
									},
									"documentation": {
										"id": 1027,
										"nodeType": "StructuredDocumentation",
										"src": "4647:551:4",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`.\n - the caller must have allowance for ``from``'s tokens of at least\n `amount`."
									},
									"functionSelector": "23b872dd",
									"id": 1059,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "5212:12:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1035,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5282:8:4"
									},
									"parameters": {
										"id": 1034,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1029,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5233:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1059,
												"src": "5225:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1028,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5225:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1031,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5247:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1059,
												"src": "5239:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1030,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5239:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1033,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5259:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1059,
												"src": "5251:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1032,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5251:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5224:42:4"
									},
									"returnParameters": {
										"id": 1038,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1037,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1059,
												"src": "5300:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1036,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5300:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5299:6:4"
									},
									"scope": 1446,
									"src": "5203:256:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1087,
										"nodeType": "Block",
										"src": "5948:140:4",
										"statements": [
											{
												"assignments": [
													1070
												],
												"declarations": [
													{
														"constant": false,
														"id": 1070,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "5966:5:4",
														"nodeType": "VariableDeclaration",
														"scope": 1087,
														"src": "5958:13:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1069,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5958:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1073,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1071,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1561,
														"src": "5974:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 1072,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5974:12:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5958:28:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1075,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1070,
															"src": "6005:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1076,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1062,
															"src": "6012:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1082,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 1078,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1070,
																		"src": "6031:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1079,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1062,
																		"src": "6038:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1077,
																	"name": "allowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1001,
																	"src": "6021:9:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address,address) view returns (uint256)"
																	}
																},
																"id": 1080,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6021:25:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 1081,
																"name": "addedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1064,
																"src": "6049:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6021:38:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1074,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1380,
														"src": "5996:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1083,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5996:64:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1084,
												"nodeType": "ExpressionStatement",
												"src": "5996:64:4"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1085,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6077:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1068,
												"id": 1086,
												"nodeType": "Return",
												"src": "6070:11:4"
											}
										]
									},
									"documentation": {
										"id": 1060,
										"nodeType": "StructuredDocumentation",
										"src": "5465:384:4",
										"text": " @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "39509351",
									"id": 1088,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increaseAllowance",
									"nameLocation": "5863:17:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1065,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1062,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "5889:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1088,
												"src": "5881:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1061,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5881:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1064,
												"mutability": "mutable",
												"name": "addedValue",
												"nameLocation": "5906:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 1088,
												"src": "5898:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1063,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5898:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5880:37:4"
									},
									"returnParameters": {
										"id": 1068,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1067,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1088,
												"src": "5942:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1066,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5942:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5941:6:4"
									},
									"scope": 1446,
									"src": "5854:234:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1128,
										"nodeType": "Block",
										"src": "6674:328:4",
										"statements": [
											{
												"assignments": [
													1099
												],
												"declarations": [
													{
														"constant": false,
														"id": 1099,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "6692:5:4",
														"nodeType": "VariableDeclaration",
														"scope": 1128,
														"src": "6684:13:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1098,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6684:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1102,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1100,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1561,
														"src": "6700:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 1101,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6700:12:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6684:28:4"
											},
											{
												"assignments": [
													1104
												],
												"declarations": [
													{
														"constant": false,
														"id": 1104,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "6730:16:4",
														"nodeType": "VariableDeclaration",
														"scope": 1128,
														"src": "6722:24:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1103,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6722:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1109,
												"initialValue": {
													"arguments": [
														{
															"id": 1106,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1099,
															"src": "6759:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1107,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1091,
															"src": "6766:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1105,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1001,
														"src": "6749:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 1108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6749:25:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6722:52:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1113,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1111,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1104,
																"src": "6792:16:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1112,
																"name": "subtractedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1093,
																"src": "6812:15:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6792:35:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
															"id": 1114,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6829:39:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																"typeString": "literal_string \"ERC20: decreased allowance below zero\""
															},
															"value": "ERC20: decreased allowance below zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																"typeString": "literal_string \"ERC20: decreased allowance below zero\""
															}
														],
														"id": 1110,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6784:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1115,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6784:85:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1116,
												"nodeType": "ExpressionStatement",
												"src": "6784:85:4"
											},
											{
												"id": 1125,
												"nodeType": "UncheckedBlock",
												"src": "6879:95:4",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 1118,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1099,
																	"src": "6912:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1119,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1091,
																	"src": "6919:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1122,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1120,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1104,
																		"src": "6928:16:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 1121,
																		"name": "subtractedValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1093,
																		"src": "6947:15:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "6928:34:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1117,
																"name": "_approve",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1380,
																"src": "6903:8:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (address,address,uint256)"
																}
															},
															"id": 1123,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6903:60:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1124,
														"nodeType": "ExpressionStatement",
														"src": "6903:60:4"
													}
												]
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1126,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6991:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1097,
												"id": 1127,
												"nodeType": "Return",
												"src": "6984:11:4"
											}
										]
									},
									"documentation": {
										"id": 1089,
										"nodeType": "StructuredDocumentation",
										"src": "6094:476:4",
										"text": " @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."
									},
									"functionSelector": "a457c2d7",
									"id": 1129,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseAllowance",
									"nameLocation": "6584:17:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1094,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1091,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "6610:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1129,
												"src": "6602:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1090,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6602:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1093,
												"mutability": "mutable",
												"name": "subtractedValue",
												"nameLocation": "6627:15:4",
												"nodeType": "VariableDeclaration",
												"scope": 1129,
												"src": "6619:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1092,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6619:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6601:42:4"
									},
									"returnParameters": {
										"id": 1097,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1096,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1129,
												"src": "6668:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1095,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6668:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6667:6:4"
									},
									"scope": 1446,
									"src": "6575:427:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1205,
										"nodeType": "Block",
										"src": "7534:710:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1145,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1140,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1132,
																"src": "7552:4:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1143,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7568:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1142,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7560:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1141,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7560:7:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 1144,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7560:10:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7552:18:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 1146,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7572:39:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															},
															"value": "ERC20: transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															}
														],
														"id": 1139,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7544:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1147,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7544:68:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1148,
												"nodeType": "ExpressionStatement",
												"src": "7544:68:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1155,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1150,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1134,
																"src": "7630:2:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1153,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7644:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1152,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7636:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1151,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7636:7:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 1154,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7636:10:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7630:16:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 1156,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7648:37:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															},
															"value": "ERC20: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															}
														],
														"id": 1149,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7622:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1157,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7622:64:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1158,
												"nodeType": "ExpressionStatement",
												"src": "7622:64:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1160,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1132,
															"src": "7718:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1161,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1134,
															"src": "7724:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1162,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1136,
															"src": "7728:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1159,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1434,
														"src": "7697:20:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1163,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7697:38:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1164,
												"nodeType": "ExpressionStatement",
												"src": "7697:38:4"
											},
											{
												"assignments": [
													1166
												],
												"declarations": [
													{
														"constant": false,
														"id": 1166,
														"mutability": "mutable",
														"name": "fromBalance",
														"nameLocation": "7754:11:4",
														"nodeType": "VariableDeclaration",
														"scope": 1205,
														"src": "7746:19:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1165,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7746:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1170,
												"initialValue": {
													"baseExpression": {
														"id": 1167,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 875,
														"src": "7768:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1169,
													"indexExpression": {
														"id": 1168,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1132,
														"src": "7778:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7768:15:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7746:37:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1174,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1172,
																"name": "fromBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1166,
																"src": "7801:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1173,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1136,
																"src": "7816:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7801:21:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
															"id": 1175,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7824:40:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
															},
															"value": "ERC20: transfer amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
															}
														],
														"id": 1171,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7793:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1176,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7793:72:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1177,
												"nodeType": "ExpressionStatement",
												"src": "7793:72:4"
											},
											{
												"id": 1192,
												"nodeType": "UncheckedBlock",
												"src": "7875:273:4",
												"statements": [
													{
														"expression": {
															"id": 1184,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 1178,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 875,
																	"src": "7899:9:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1180,
																"indexExpression": {
																	"id": 1179,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1132,
																	"src": "7909:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "7899:15:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1183,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1181,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1166,
																	"src": "7917:11:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 1182,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1136,
																	"src": "7931:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7917:20:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7899:38:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1185,
														"nodeType": "ExpressionStatement",
														"src": "7899:38:4"
													},
													{
														"expression": {
															"id": 1190,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 1186,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 875,
																	"src": "8114:9:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1188,
																"indexExpression": {
																	"id": 1187,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1134,
																	"src": "8124:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "8114:13:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 1189,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1136,
																"src": "8131:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8114:23:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1191,
														"nodeType": "ExpressionStatement",
														"src": "8114:23:4"
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1194,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1132,
															"src": "8172:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1195,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1134,
															"src": "8178:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1196,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1136,
															"src": "8182:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1193,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1458,
														"src": "8163:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1197,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8163:26:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1198,
												"nodeType": "EmitStatement",
												"src": "8158:31:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1200,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1132,
															"src": "8220:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1201,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1134,
															"src": "8226:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1202,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1136,
															"src": "8230:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1199,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1445,
														"src": "8200:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1203,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8200:37:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1204,
												"nodeType": "ExpressionStatement",
												"src": "8200:37:4"
											}
										]
									},
									"documentation": {
										"id": 1130,
										"nodeType": "StructuredDocumentation",
										"src": "7008:443:4",
										"text": " @dev Moves `amount` of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`."
									},
									"id": 1206,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "7465:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1137,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1132,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "7483:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1206,
												"src": "7475:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1131,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7475:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1134,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "7497:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1206,
												"src": "7489:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1133,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7489:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1136,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "7509:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1206,
												"src": "7501:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1135,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7501:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7474:42:4"
									},
									"returnParameters": {
										"id": 1138,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7534:0:4"
									},
									"scope": 1446,
									"src": "7456:788:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1262,
										"nodeType": "Block",
										"src": "8585:470:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1220,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1215,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1209,
																"src": "8603:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1218,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8622:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1217,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8614:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1216,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "8614:7:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 1219,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8614:10:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "8603:21:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 1221,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8626:33:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															},
															"value": "ERC20: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															}
														],
														"id": 1214,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8595:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1222,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8595:65:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1223,
												"nodeType": "ExpressionStatement",
												"src": "8595:65:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1227,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8700:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1226,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8692:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1225,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8692:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 1228,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8692:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1229,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1209,
															"src": "8704:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1230,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1211,
															"src": "8713:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1224,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1434,
														"src": "8671:20:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1231,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8671:49:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1232,
												"nodeType": "ExpressionStatement",
												"src": "8671:49:4"
											},
											{
												"expression": {
													"id": 1235,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1233,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 883,
														"src": "8731:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1234,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1211,
														"src": "8747:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8731:22:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1236,
												"nodeType": "ExpressionStatement",
												"src": "8731:22:4"
											},
											{
												"id": 1243,
												"nodeType": "UncheckedBlock",
												"src": "8763:175:4",
												"statements": [
													{
														"expression": {
															"id": 1241,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 1237,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 875,
																	"src": "8899:9:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1239,
																"indexExpression": {
																	"id": 1238,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1209,
																	"src": "8909:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "8899:18:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 1240,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1211,
																"src": "8921:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8899:28:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1242,
														"nodeType": "ExpressionStatement",
														"src": "8899:28:4"
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1247,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8969:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1246,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8961:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1245,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8961:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 1248,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8961:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1249,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1209,
															"src": "8973:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1250,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1211,
															"src": "8982:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1244,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1458,
														"src": "8952:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1251,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8952:37:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1252,
												"nodeType": "EmitStatement",
												"src": "8947:42:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1256,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9028:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1255,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9020:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1254,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9020:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 1257,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9020:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1258,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1209,
															"src": "9032:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1259,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1211,
															"src": "9041:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1253,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1445,
														"src": "9000:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1260,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9000:48:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1261,
												"nodeType": "ExpressionStatement",
												"src": "9000:48:4"
											}
										]
									},
									"documentation": {
										"id": 1207,
										"nodeType": "StructuredDocumentation",
										"src": "8250:265:4",
										"text": "@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements:\n - `account` cannot be the zero address."
									},
									"id": 1263,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "8529:5:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1212,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1209,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8543:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1263,
												"src": "8535:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1208,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8535:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1211,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "8560:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1263,
												"src": "8552:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1210,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8552:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8534:33:4"
									},
									"returnParameters": {
										"id": 1213,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8585:0:4"
									},
									"scope": 1446,
									"src": "8520:535:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1334,
										"nodeType": "Block",
										"src": "9440:594:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1277,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1272,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1266,
																"src": "9458:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1275,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9477:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1274,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9469:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1273,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9469:7:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 1276,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9469:10:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "9458:21:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 1278,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9481:35:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															},
															"value": "ERC20: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															}
														],
														"id": 1271,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9450:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1279,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9450:67:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1280,
												"nodeType": "ExpressionStatement",
												"src": "9450:67:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1282,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1266,
															"src": "9549:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1285,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9566:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1284,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9558:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1283,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9558:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 1286,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9558:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1287,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1268,
															"src": "9570:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1281,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1434,
														"src": "9528:20:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1288,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9528:49:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1289,
												"nodeType": "ExpressionStatement",
												"src": "9528:49:4"
											},
											{
												"assignments": [
													1291
												],
												"declarations": [
													{
														"constant": false,
														"id": 1291,
														"mutability": "mutable",
														"name": "accountBalance",
														"nameLocation": "9596:14:4",
														"nodeType": "VariableDeclaration",
														"scope": 1334,
														"src": "9588:22:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1290,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9588:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1295,
												"initialValue": {
													"baseExpression": {
														"id": 1292,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 875,
														"src": "9613:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1294,
													"indexExpression": {
														"id": 1293,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1266,
														"src": "9623:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "9613:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9588:43:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1299,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1297,
																"name": "accountBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1291,
																"src": "9649:14:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1298,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1268,
																"src": "9667:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9649:24:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365",
															"id": 1300,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9675:36:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
															},
															"value": "ERC20: burn amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
															}
														],
														"id": 1296,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9641:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1301,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9641:71:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1302,
												"nodeType": "ExpressionStatement",
												"src": "9641:71:4"
											},
											{
												"id": 1315,
												"nodeType": "UncheckedBlock",
												"src": "9722:194:4",
												"statements": [
													{
														"expression": {
															"id": 1309,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 1303,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 875,
																	"src": "9746:9:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1305,
																"indexExpression": {
																	"id": 1304,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1266,
																	"src": "9756:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "9746:18:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1308,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1306,
																	"name": "accountBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1291,
																	"src": "9767:14:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 1307,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1268,
																	"src": "9784:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9767:23:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9746:44:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1310,
														"nodeType": "ExpressionStatement",
														"src": "9746:44:4"
													},
													{
														"expression": {
															"id": 1313,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1311,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 883,
																"src": "9883:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "-=",
															"rightHandSide": {
																"id": 1312,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1268,
																"src": "9899:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9883:22:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1314,
														"nodeType": "ExpressionStatement",
														"src": "9883:22:4"
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1317,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1266,
															"src": "9940:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1320,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9957:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1319,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9949:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1318,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9949:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 1321,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9949:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1322,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1268,
															"src": "9961:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1316,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1458,
														"src": "9931:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1323,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9931:37:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1324,
												"nodeType": "EmitStatement",
												"src": "9926:42:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1326,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1266,
															"src": "9999:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1329,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10016:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1328,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10008:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1327,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10008:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 1330,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10008:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1331,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1268,
															"src": "10020:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1325,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1445,
														"src": "9979:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1332,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9979:48:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1333,
												"nodeType": "ExpressionStatement",
												"src": "9979:48:4"
											}
										]
									},
									"documentation": {
										"id": 1264,
										"nodeType": "StructuredDocumentation",
										"src": "9061:309:4",
										"text": " @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."
									},
									"id": 1335,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "9384:5:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1269,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1266,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "9398:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1335,
												"src": "9390:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1265,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9390:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1268,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "9415:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1335,
												"src": "9407:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1267,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9407:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9389:33:4"
									},
									"returnParameters": {
										"id": 1270,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9440:0:4"
									},
									"scope": 1446,
									"src": "9375:659:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1379,
										"nodeType": "Block",
										"src": "10540:257:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1351,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1346,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1338,
																"src": "10558:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1349,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10575:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1348,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10567:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1347,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "10567:7:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 1350,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10567:10:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10558:19:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
															"id": 1352,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10579:38:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															},
															"value": "ERC20: approve from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															}
														],
														"id": 1345,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10550:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1353,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10550:68:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1354,
												"nodeType": "ExpressionStatement",
												"src": "10550:68:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1361,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1356,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1340,
																"src": "10636:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1359,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10655:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1358,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10647:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1357,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "10647:7:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 1360,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10647:10:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10636:21:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
															"id": 1362,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10659:36:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															},
															"value": "ERC20: approve to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															}
														],
														"id": 1355,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10628:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1363,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10628:68:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1364,
												"nodeType": "ExpressionStatement",
												"src": "10628:68:4"
											},
											{
												"expression": {
													"id": 1371,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1365,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 881,
																"src": "10707:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 1368,
															"indexExpression": {
																"id": 1366,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1338,
																"src": "10719:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10707:18:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1369,
														"indexExpression": {
															"id": 1367,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1340,
															"src": "10726:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10707:27:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1370,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1342,
														"src": "10737:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10707:36:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1372,
												"nodeType": "ExpressionStatement",
												"src": "10707:36:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1374,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1338,
															"src": "10767:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1375,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1340,
															"src": "10774:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1376,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1342,
															"src": "10783:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1373,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1467,
														"src": "10758:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1377,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10758:32:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1378,
												"nodeType": "EmitStatement",
												"src": "10753:37:4"
											}
										]
									},
									"documentation": {
										"id": 1336,
										"nodeType": "StructuredDocumentation",
										"src": "10040:412:4",
										"text": " @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."
									},
									"id": 1380,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "10466:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1343,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1338,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10483:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1380,
												"src": "10475:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1337,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10475:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1340,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10498:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1380,
												"src": "10490:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1339,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10490:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1342,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "10515:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1380,
												"src": "10507:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1341,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10507:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10474:48:4"
									},
									"returnParameters": {
										"id": 1344,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10540:0:4"
									},
									"scope": 1446,
									"src": "10457:340:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1422,
										"nodeType": "Block",
										"src": "11168:321:4",
										"statements": [
											{
												"assignments": [
													1391
												],
												"declarations": [
													{
														"constant": false,
														"id": 1391,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "11186:16:4",
														"nodeType": "VariableDeclaration",
														"scope": 1422,
														"src": "11178:24:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1390,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11178:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1396,
												"initialValue": {
													"arguments": [
														{
															"id": 1393,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1383,
															"src": "11215:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1394,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1385,
															"src": "11222:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1392,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1001,
														"src": "11205:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 1395,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11205:25:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11178:52:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1403,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1397,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1391,
														"src": "11244:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1400,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11269:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 1399,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "11269:7:4",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 1398,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "11264:4:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1401,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11264:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 1402,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "11278:3:4",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "11264:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11244:37:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1421,
												"nodeType": "IfStatement",
												"src": "11240:243:4",
												"trueBody": {
													"id": 1420,
													"nodeType": "Block",
													"src": "11283:200:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1407,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1405,
																			"name": "currentAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1391,
																			"src": "11305:16:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"id": 1406,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1387,
																			"src": "11325:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "11305:26:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
																		"id": 1408,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11333:31:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
																			"typeString": "literal_string \"ERC20: insufficient allowance\""
																		},
																		"value": "ERC20: insufficient allowance"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
																			"typeString": "literal_string \"ERC20: insufficient allowance\""
																		}
																	],
																	"id": 1404,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "11297:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1409,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11297:68:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1410,
															"nodeType": "ExpressionStatement",
															"src": "11297:68:4"
														},
														{
															"id": 1419,
															"nodeType": "UncheckedBlock",
															"src": "11379:94:4",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 1412,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1383,
																				"src": "11416:5:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 1413,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1385,
																				"src": "11423:7:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1416,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1414,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1391,
																					"src": "11432:16:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 1415,
																					"name": "amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1387,
																					"src": "11451:6:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11432:25:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 1411,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1380,
																			"src": "11407:8:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																				"typeString": "function (address,address,uint256)"
																			}
																		},
																		"id": 1417,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11407:51:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 1418,
																	"nodeType": "ExpressionStatement",
																	"src": "11407:51:4"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1381,
										"nodeType": "StructuredDocumentation",
										"src": "10803:270:4",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n Does not update the allowance amount in case of infinite allowance.\n Revert if not enough allowance is available.\n Might emit an {Approval} event."
									},
									"id": 1423,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "11087:15:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1388,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1383,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "11111:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1423,
												"src": "11103:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1382,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11103:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1385,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "11126:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1423,
												"src": "11118:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1384,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11118:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1387,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "11143:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1423,
												"src": "11135:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1386,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11135:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11102:48:4"
									},
									"returnParameters": {
										"id": 1389,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11168:0:4"
									},
									"scope": 1446,
									"src": "11078:411:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1433,
										"nodeType": "Block",
										"src": "12162:2:4",
										"statements": []
									},
									"documentation": {
										"id": 1424,
										"nodeType": "StructuredDocumentation",
										"src": "11495:573:4",
										"text": " @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 1434,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nameLocation": "12082:20:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1431,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1426,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "12111:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1434,
												"src": "12103:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1425,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12103:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1428,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "12125:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1434,
												"src": "12117:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1427,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12117:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1430,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "12137:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1434,
												"src": "12129:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1429,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12129:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12102:42:4"
									},
									"returnParameters": {
										"id": 1432,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12162:0:4"
									},
									"scope": 1446,
									"src": "12073:91:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1444,
										"nodeType": "Block",
										"src": "12840:2:4",
										"statements": []
									},
									"documentation": {
										"id": 1435,
										"nodeType": "StructuredDocumentation",
										"src": "12170:577:4",
										"text": " @dev Hook that is called after any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n has been transferred to `to`.\n - when `from` is zero, `amount` tokens have been minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 1445,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_afterTokenTransfer",
									"nameLocation": "12761:19:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1442,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1437,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "12789:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1445,
												"src": "12781:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1436,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12781:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1439,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "12803:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1445,
												"src": "12795:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1438,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12795:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1441,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "12815:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1445,
												"src": "12807:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1440,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12807:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12780:42:4"
									},
									"returnParameters": {
										"id": 1443,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12840:0:4"
									},
									"scope": 1446,
									"src": "12752:90:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1447,
							"src": "1532:11312:4",
							"usedErrors": [],
							"usedEvents": [
								1458,
								1467
							]
						}
					],
					"src": "105:12740:4"
				},
				"id": 4
			},
			"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							1524
						]
					},
					"id": 1525,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1448,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1449,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:5",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 1524,
							"linearizedBaseContracts": [
								1524
							],
							"name": "IERC20",
							"nameLocation": "212:6:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1450,
										"nodeType": "StructuredDocumentation",
										"src": "225:158:5",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 1458,
									"name": "Transfer",
									"nameLocation": "394:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1457,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1452,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "419:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1458,
												"src": "403:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1451,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "403:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1454,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "441:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1458,
												"src": "425:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1453,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "425:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1456,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "453:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1458,
												"src": "445:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1455,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "402:57:5"
									},
									"src": "388:72:5"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1459,
										"nodeType": "StructuredDocumentation",
										"src": "466:148:5",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 1467,
									"name": "Approval",
									"nameLocation": "625:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1466,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1461,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "650:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1467,
												"src": "634:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1460,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "634:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1463,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "673:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1467,
												"src": "657:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1462,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1465,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "690:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1467,
												"src": "682:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1464,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "682:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "633:63:5"
									},
									"src": "619:78:5"
								},
								{
									"documentation": {
										"id": 1468,
										"nodeType": "StructuredDocumentation",
										"src": "703:66:5",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 1473,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1469,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:5"
									},
									"returnParameters": {
										"id": 1472,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1471,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1473,
												"src": "820:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1470,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:5"
									},
									"scope": 1524,
									"src": "774:55:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1474,
										"nodeType": "StructuredDocumentation",
										"src": "835:72:5",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 1481,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1477,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1476,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1481,
												"src": "931:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1475,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:5"
									},
									"returnParameters": {
										"id": 1480,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1479,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1481,
												"src": "971:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1478,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:5"
									},
									"scope": 1524,
									"src": "912:68:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1482,
										"nodeType": "StructuredDocumentation",
										"src": "986:202:5",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 1491,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1202:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1487,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1484,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1219:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1491,
												"src": "1211:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1483,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1486,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1231:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1491,
												"src": "1223:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1485,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1210:28:5"
									},
									"returnParameters": {
										"id": 1490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1489,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1491,
												"src": "1257:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1488,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1257:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1256:6:5"
									},
									"scope": 1524,
									"src": "1193:70:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1492,
										"nodeType": "StructuredDocumentation",
										"src": "1269:264:5",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 1501,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1547:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1497,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1494,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1565:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1501,
												"src": "1557:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1493,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1557:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1496,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1580:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1501,
												"src": "1572:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1495,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1572:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1556:32:5"
									},
									"returnParameters": {
										"id": 1500,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1499,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1501,
												"src": "1612:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1498,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1612:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1611:9:5"
									},
									"scope": 1524,
									"src": "1538:83:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1502,
										"nodeType": "StructuredDocumentation",
										"src": "1627:642:5",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1511,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2283:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1507,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1504,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2299:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1511,
												"src": "2291:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1503,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2291:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1506,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2316:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1511,
												"src": "2308:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1505,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2308:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2290:33:5"
									},
									"returnParameters": {
										"id": 1510,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1509,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1511,
												"src": "2342:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1508,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2342:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2341:6:5"
									},
									"scope": 1524,
									"src": "2274:74:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1512,
										"nodeType": "StructuredDocumentation",
										"src": "2354:287:5",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1523,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2655:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1519,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1514,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2676:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1523,
												"src": "2668:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1513,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2668:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1516,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2690:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1523,
												"src": "2682:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1515,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2682:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1518,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2702:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1523,
												"src": "2694:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1517,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2694:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2667:42:5"
									},
									"returnParameters": {
										"id": 1522,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1521,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1523,
												"src": "2728:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1520,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2728:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2727:6:5"
									},
									"scope": 1524,
									"src": "2646:88:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1525,
							"src": "202:2534:5",
							"usedErrors": [],
							"usedEvents": [
								1458,
								1467
							]
						}
					],
					"src": "106:2631:5"
				},
				"id": 5
			},
			"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							1524
						],
						"IERC20Metadata": [
							1549
						]
					},
					"id": 1550,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1526,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "110:23:6"
						},
						{
							"absolutePath": "https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 1527,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1550,
							"sourceUnit": 1525,
							"src": "135:23:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1529,
										"name": "IERC20",
										"nameLocations": [
											"305:6:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1524,
										"src": "305:6:6"
									},
									"id": 1530,
									"nodeType": "InheritanceSpecifier",
									"src": "305:6:6"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1528,
								"nodeType": "StructuredDocumentation",
								"src": "160:116:6",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard.\n _Available since v4.1._"
							},
							"fullyImplemented": false,
							"id": 1549,
							"linearizedBaseContracts": [
								1549,
								1524
							],
							"name": "IERC20Metadata",
							"nameLocation": "287:14:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1531,
										"nodeType": "StructuredDocumentation",
										"src": "318:54:6",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 1536,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "386:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1532,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "390:2:6"
									},
									"returnParameters": {
										"id": 1535,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1534,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1536,
												"src": "416:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1533,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "416:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "415:15:6"
									},
									"scope": 1549,
									"src": "377:54:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1537,
										"nodeType": "StructuredDocumentation",
										"src": "437:56:6",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 1542,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "507:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1538,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "513:2:6"
									},
									"returnParameters": {
										"id": 1541,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1540,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1542,
												"src": "539:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1539,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "539:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "538:15:6"
									},
									"scope": 1549,
									"src": "498:56:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1543,
										"nodeType": "StructuredDocumentation",
										"src": "560:65:6",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 1548,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "639:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1544,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "647:2:6"
									},
									"returnParameters": {
										"id": 1547,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1546,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1548,
												"src": "673:5:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1545,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "673:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "672:7:6"
									},
									"scope": 1549,
									"src": "630:50:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1550,
							"src": "277:405:6",
							"usedErrors": [],
							"usedEvents": [
								1458,
								1467
							]
						}
					],
					"src": "110:573:6"
				},
				"id": 6
			},
			"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.9.3/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1571
						]
					},
					"id": 1572,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1551,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:7"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1552,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:7",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1571,
							"linearizedBaseContracts": [
								1571
							],
							"name": "Context",
							"nameLocation": "626:7:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1560,
										"nodeType": "Block",
										"src": "702:34:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1557,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1558,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "723:6:7",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1556,
												"id": 1559,
												"nodeType": "Return",
												"src": "712:17:7"
											}
										]
									},
									"id": 1561,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1553,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:7"
									},
									"returnParameters": {
										"id": 1556,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1555,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1561,
												"src": "693:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1554,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:7"
									},
									"scope": 1571,
									"src": "640:96:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1569,
										"nodeType": "Block",
										"src": "809:32:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1566,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1567,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "830:4:7",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1565,
												"id": 1568,
												"nodeType": "Return",
												"src": "819:15:7"
											}
										]
									},
									"id": 1570,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1562,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:7"
									},
									"returnParameters": {
										"id": 1565,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1564,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1570,
												"src": "793:14:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1563,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:7"
									},
									"scope": 1571,
									"src": "742:99:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1572,
							"src": "608:235:7",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "86:758:7"
				},
				"id": 7
			}
		}
	}
}